{"version":3,"file":null,"sources":["../src/music21/exceptions21.js","../src/music21/debug.js","../src/music21/common.js","../src/music21/prebase.js","../src/music21/duration.js","../src/music21/base.js","../src/music21/articulations.js","../src/music21/audioSearch.js","../src/music21/beam.js","../src/music21/pitch.js","../src/music21/note.js","../src/music21/chord.js","../src/music21/clef.js","../src/music21/dynamics.js","../src/music21/expressions.js","../src/music21/fromPython.js","../src/music21/instrument.js","../src/music21/interval.js","../src/music21/scale.js","../src/music21/key.js","../src/music21/miditools.js","../src/music21/keyboard.js","../src/music21/meter.js","../src/music21/renderOptions.js","../src/music21/streamInteraction.js","../src/music21/vfShow.js","../src/music21/stream.js","../src/music21/layout.js","../src/music21/roman.js","../src/music21/tempo.js","../src/music21/tie.js","../src/music21/tinyNotation.js","../src/music21/webmidi.js","../src/music21/widgets.js","../src/loadModules.js"],"sourcesContent":["// not working properly...\n\nclass ExtendableError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n\nexport class Music21Exception extends ExtendableError {\n}\n\nexport class StreamException extends Music21Exception {\n}\n\n","export const debug = false;\n","/**\n * common functions\n *\n * @exports music21/common\n */\n/**\n * functions that are useful everywhere...\n *\n * @namespace music21.common\n * @memberof music21\n */\nimport * as $ from 'jquery';\n\nexport const common = {};\n\n/**\n * concept borrowed from Vex.Flow.Merge, though here the source can be undefined;\n * http://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically\n * recursive parts used in .clone()\n *\n * @function music21.common.merge\n * @param {object} destination - object to have attributes placed into\n * @param {object} source - object to take attributes from.\n * @memberof music21.common\n * @returns {object} destination\n */\ncommon.merge = function mergeRecursive(destination, source) {\n    if (source === undefined || source === null) {\n        return destination;\n    }\n    for (const p in source) {\n        if (!{}.hasOwnProperty.call(source, p)) {\n            continue;\n        }\n        try {\n            // Property in destination object set; update its value.\n            if (source[p].constructor === Object) {\n                destination[p] = mergeRecursive(destination[p], source[p]);\n            } else {\n                destination[p] = source[p];\n            }\n        } catch (e) {\n            // Property in destination object not set; create it and set its value.\n            destination[p] = source[p];\n        }\n    }\n    return destination;\n};\n\n/**\n * Mix in another class into this class -- a form of multiple inheritance.\n * See articulations.Marcato for an example.\n *\n */\ncommon.mixin = function common_mixin(OtherParent, thisClassOrObject) {\n    let proto = Object.getPrototypeOf(OtherParent);\n    const classProto = Object.getPrototypeOf(thisClassOrObject);\n\n    while (proto) {\n        for (const key in Object.keys(proto)) {\n            if (!{}.hasOwnProperty.call(proto, key)) {\n                continue;\n            }\n            if (!(key in classProto)) {\n                classProto[key] = proto[key];\n            }\n        }\n        proto = Object.getPrototypeOf(proto);\n    }\n};\n/**\n *\n * Returns the statistical mode (most commonly appearing element)\n * in a.\n *\n * In case of tie, returns the first element to reach the maximum\n * number of occurrences.\n *\n * @function music21.common.statisticalMode\n * @param {Array} a - an array to analyze\n * @returns {object} element with the highest frequency in a\n */\ncommon.statisticalMode = function statisticalMode(a) {\n    if (a.length === 0) {\n        return null;\n    }\n    const modeMap = {};\n    let maxEl = a[0];\n    let maxCount = 1;\n    for (let i = 0; i < a.length; i++) {\n        const el = a[i];\n        if (modeMap[el] == null) {\n            modeMap[el] = 0;\n        }\n        modeMap[el]++;\n        if (modeMap[el] > maxCount) {\n            maxEl = el;\n            maxCount = modeMap[el];\n        }\n    }\n    return maxEl;\n};\n\n/**\n * Creates a DOMObject of an SVG figure using the correct `document.createElementNS` call.\n *\n * @function music21.common.makeSVGright\n * @param {string} [tag='svg'] - a tag, such as 'rect', 'circle', 'text', or 'svg'\n * @param {object} [attrs] - attributes to pass to the tag.\n * @memberof music21.common\n * @returns {DOMObject}\n */\ncommon.makeSVGright = function makeSVGright(tag, attrs) {\n    // see http://stackoverflow.com/questions/3642035/jquerys-append-not-working-with-svg-element\n    // normal JQuery does not work.\n    if (tag === undefined) {\n        tag = 'svg';\n    }\n    if (attrs === undefined) {\n        attrs = {};\n    }\n\n    const el = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (const k in attrs) {\n        if (!({}.hasOwnProperty.call(attrs, k))) {\n            continue;\n        }\n        el.setAttribute(k, attrs[k]);\n    }\n    return el;\n};\n\n/**\n * Take a number such as 32 and return a string such as \"nd\"\n * (for \"32nd\") etc.\n *\n * @function music21.common.ordinalAbbreviation\n * @param {Int} value\n * @param {Boolean} [plural=false] - make plural (note that \"21st\" plural is \"21st\")\n * @return {string}\n */\ncommon.ordinalAbbreviation = function ordinalAbbreviation(value, plural) {\n    let post = '';\n    const valueHundreths = value % 100;\n    if (valueHundreths === 11 || valueHundreths === 12 || valueHundreths === 13) {\n        post = 'th';\n    } else {\n        const valueMod = value % 10;\n        if (valueMod === 1) {\n            post = 'st';\n        } else if (valueMod === 2) {\n            post = 'nd';\n        } else if (valueMod === 3) {\n            post = 'rd';\n        } else {\n            post = 'th';\n        }\n    }\n    if (post !== 'st' && plural) {\n        post += 's';\n    }\n    return post;\n};\n\n/**\n * Find a rational number approximation of this floating point.\n *\n * @function music21.common.rationalize\n * @param {number} ql - number to rationalize\n * @param {number} [epsilon=0.001] - how close to get\n * @param {Int} [maxDenominator=50] - maximum denominator\n * @returns {object|undefined} {'numerator: numerator, 'denominator': denominator}\n */\ncommon.rationalize = function rationalize(ql, epsilon, maxDenominator) {\n    epsilon = epsilon || 0.001;\n    maxDenominator = maxDenominator || 50;\n\n    for (let i = 2; i < maxDenominator; i++) {\n        if (Math.abs(ql * i - Math.round(ql * i)) < epsilon) {\n            const numerator = Math.round(ql * i);\n            const denominator = i;\n            return { 'numerator': numerator, 'denominator': denominator };\n        }\n    }\n    return undefined;\n};\n\n/**\n * Change something that could be a string or number and might\n * end with \"px\" to a number.\n *\n * \"400px\" -> 400\n *\n * @function music21.common.stripPx\n * @param {Int|string} str -- string that might have 'px' at the end or not\n * @returns {Int} a number to use\n */\ncommon.stripPx = function stripPx(str) {\n    if (typeof str === 'string') {\n        const pxIndex = str.indexOf('px');\n        str = str.slice(0, pxIndex);\n        return parseInt(str);\n    } else {\n        return str;\n    }\n};\n\n/**\n * Find name in the query string (?name=value) and return value.\n *\n * @function music21.common.urlParam\n * @param {string} name - url parameter to find\n * @returns {string} may be \"\" if empty.\n */\ncommon.urlParam = function urlParam(name) {\n    name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    const regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    const results = regex.exec(location.search);\n    return results == null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n};\n\n\n/**\n * Copies an event from one jQuery object to another.\n *\n * @function music21.common.jQueryEventCopy\n * @param {Event} eventObj - Event to copy from \"from\" to \"to\"\n * @param {jQuery|string|DOMObject} from - jQuery object to copy events from. Only uses the first matched element.\n * @param {jQuery|string|DOMObject} to - jQuery object to copy events to. Copies to all matched elements.\n * @author Brandon Aaron (brandon.aaron@gmail.com || http://brandonaaron.net)\n * @author Yannick Albert (mail@yckart.com || http://yckart.com)\n */\ncommon.jQueryEventCopy = function jQueryEventCopy(eventObj, from, to) {\n    from = from.jquery ? from : $(from);\n    to = to.jquery ? to : $(to);\n\n    const events = from[0].events || $.data(from[0], 'events') || $._data(from[0], 'events');\n    if (!from.length || !to.length || !events) {\n        return undefined;\n    }\n    return to.each(() => {\n        for (const type in events) {\n            if (!({}.hasOwnProperty.call(events, type))) {\n                continue;\n            }\n            for (const handler in events[type]) {\n                if (!({}.hasOwnProperty.call(events[type], handler))) {\n                    continue;\n                }\n                $.event.add(eventObj, type, events[type][handler], events[type][handler].data);\n            }\n        }\n    });\n};\n// common.walk = function (obj, callback, callList, seen, numSeen) {\n// if (depth == undefined) {\n// depth = 0;\n// }\n// if (depth > 20) {\n// throw \"max depth reached\";\n// }\n// if (callList === undefined) {\n// callList = [];\n// }\n// if (seen === undefined) {\n// seen = new Set();\n// }\n// var next, item;\n// for (item in obj) {\n// if (obj.hasOwnProperty(item)) {\n// next = obj[item];\n// var nextCallList = []\n// nextCallList.push.apply(callList);\n// nextCallList.push(item);\n// if (callback !== undefined) {\n// callback.call(this, item, next, nextCallList);\n// }\n// if (typeof next =='object' && next != null) {\n// if (seen.has(next) == false) {\n// seen.add(next);\n// common.walk(next, callback, nextCallList, seen, depth+1);\n// }\n// }\n// }\n// }\n// };\n\n/**\n * runs a callback with either \"visible\" or \"hidden\" as the argument anytime the\n * window or document state changes.\n *\n * Depending on the browser, may be called multiple times with the same argument\n * for a single event.  For instance, Safari calls once on losing focus completely\n * but twice for a tab change.\n *\n * @function music21.common.setWindowVisibilityWatcher\n * @param {function} callback\n */\ncommon.setWindowVisibilityWatcher = function setWindowVisibilityWatcher(callback) {\n    let hidden = 'hidden';\n\n    // Standards:\n    if (hidden in document) {\n        document.addEventListener('visibilitychange', windowFocusChanged);\n    } else if ('mozHidden' in document) {\n        hidden = 'mozHidden';\n        document.addEventListener('mozvisibilitychange', windowFocusChanged);\n    } else if ('webkitHidden' in document) {\n        hidden = 'webkitHidden';\n        document.addEventListener('webkitvisibilitychange', windowFocusChanged);\n    } else if ('msHidden' in document) {\n        hidden = 'msHidden';\n        document.addEventListener('msvisibilitychange', windowFocusChanged);\n    } else if ('onfocusin' in document) {\n        // IE 9 and lower:\n        document.onfocusin = document.onfocusout = windowFocusChanged;\n    }\n\n    // Also catch window... -- get two calls for a tab shift, but one for window losing focus\n    window.onpageshow = window.onpagehide = window.onfocus = window.onblur = windowFocusChanged;\n\n\n    function windowFocusChanged(evt) {\n        const v = 'visible';\n        const h = 'hidden';\n        const evtMap = {\n            focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h,\n        };\n\n        evt = evt || window.event;\n        let callbackState = '';\n        if (evt.type in evtMap) {\n            callbackState = evtMap[evt.type];\n        } else {\n            callbackState = this[hidden] ? 'hidden' : 'visible';\n        }\n        callback(callbackState, evt);\n    }\n    // set the initial state\n    const initialState = ((document.visibilityState === 'visible') ? 'focus' : 'blur');\n    const initialStateEvent = { 'type': initialState };\n    windowFocusChanged(initialStateEvent);\n};\n\ncommon.urls = {\n    css: '/css',\n    webResources: '/webResources',\n    midiPlayer: '/webResources/midiPlayer',\n    soundfontUrl: '/src/ext/soundfonts/FluidR3_GM/',\n};\n","/**\n * module for things that all music21-created objects, not just objects that can live in\n * Stream.elements should inherit. See the {@link music21.prebase} namespace.\n *\n * @exports music21/prebase\n */\n/**\n * module for things that all music21-created objects, not just objects that can live in\n * Stream.elements should inherit\n *\n * @namespace music21.prebase\n * @memberof music21\n */\nexport const prebase = {};\n/**\n * Class for pseudo-m21 objects to inherit from. The most important attributes that nearly\n * everything in music21 should inherit from are given below.\n *\n * @class ProtoM21Object\n * @memberof music21.prebase\n * @property {Array<string>} classes - An Array of strings of classes that the object belongs to (default ['ProtoM21Object'])\n * @property {Boolean} isProtoM21Object - Does this object descend from {@link music21.prebase.ProtoM21Object}: obviously true.\n * @property {Boolean} isMusic21Object - Does this object descend from {@link music21.base.Music21Object}; default false.\n */\nexport class ProtoM21Object {\n    constructor() {\n        this.classes = ['ProtoM21Object'];\n        this.isProtoM21Object = true;\n        this.isMusic21Object = false;\n        this._cloneCallbacks = {};\n    }\n    /**\n     * Makes (as much as possible) a complete duplicate copy of the object called with .clone()\n     *\n     * Works similarly to Python's copy.deepcopy().\n     *\n     * Every ProtoM21Object has a `._cloneCallbacks` object which maps `{attribute: callbackFunction}`\n     * to handle custom clone cases.  See, for instance, {@link music21.base.Music21Object} which\n     * uses a custom callback to NOT clone the `.activeSite` attribute.\n     *\n     * @returns {object}\n     * @memberof music21.prebase.ProtoM21Object\n     * @example\n     * var n1 = new music21.note.Note(\"C#\");\n     * n1.duration.quarterLength = 4;\n     * var n2 = n1.clone();\n     * n2.duration.quarterLength == 4; // true\n     * n2 === n1; // false\n     */\n    clone() {\n        const ret = new this.constructor();\n\n        // todo: do Arrays work?\n        for (const key in this) { // not that we ONLY copy the keys in Ret -- it's easier that way.\n            if ({}.hasOwnProperty.call(this, key) === false) {\n                continue;\n            }\n            if (key in this._cloneCallbacks) {\n                if (this._cloneCallbacks[key] === true) {\n                    ret[key] = this[key];\n                } else if (this._cloneCallbacks[key] === false) {\n                    ret[key] = undefined;\n                } else { // call the cloneCallbacks function\n                    this._cloneCallbacks[key](key, ret, this);\n                }\n            } else if (\n                    Object.getOwnPropertyDescriptor(this, key).get !== undefined\n                    || Object.getOwnPropertyDescriptor(this, key).set !== undefined\n            ) {\n                // do nothing\n            } else if (typeof (this[key]) === 'function') {\n                // do nothing -- events might not be copied.\n            } else if (typeof (this[key]) === 'object' && this[key] !== null &&\n                    this[key].isProtoM21Object) {\n                // console.log('cloning ', key);\n                ret[key] = this[key].clone();\n            } else {\n                try {\n                    ret[key] = this[key];\n                    // music21.common.merge(ret[key], this[key]); // not really necessary?\n                } catch (e) {\n                    if (e instanceof TypeError) {\n                        console.log('typeError:', e, key);\n                        // do nothing\n                    } else {\n                        throw (e);\n                    }\n                }\n            }\n        }\n        return ret;\n    }\n    /**\n     * Check to see if an object is of this class or subclass.\n     *\n     * @memberof music21.prebase.ProtoM21Object\n     * @param {(string|string[])} testClass - a class or Array of classes to test\n     * @returns {Boolean}\n     * @example\n     * var n = new music21.note.Note();\n     * n.isClassOrSubclass('Note'); // true\n     * n.isClassOrSubclass('Music21Object'); // true\n     * n.isClassOrSubclass(['Duration', 'NotRest']); // true // NotRest\n     */\n    isClassOrSubclass(testClass) {\n        if (testClass instanceof Array === false) {\n            testClass = [testClass];\n        }\n        for (let i = 0; i < testClass.length; i++) {\n            if (this.classes.indexOf(testClass[i]) !== -1) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nprebase.ProtoM21Object = ProtoM21Object;\n\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/duration -- duration routines\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006-16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21';\n\nimport { common } from './common';\nimport { debug } from './debug';\nimport { prebase } from './prebase';\n/**\n * Duration module. See {@link music21.duration}\n *\n * @requires music21/common\n * @requires music21/prebase\n * @exports music21/duration\n */\n/**\n * Module that holds **music21** classes and\n * tools for dealing with durations, especially\n * the {@link music21.duration.Duration} class.\n *\n * @namespace music21.duration\n * @memberof music21\n */\nexport const duration = {};\n\n/**\n * Object mapping int to name, as in `{1: 'whole'}` etc.\n *\n * @memberof music21.duration\n * @type {object}\n */\nduration.typeFromNumDict = {\n    1: 'whole',\n    2: 'half',\n    4: 'quarter',\n    8: 'eighth',\n    16: '16th',\n    32: '32nd',\n    64: '64th',\n    128: '128th',\n    256: '256th',\n    512: '512th',\n    1024: '1024th',\n    0: 'zero',\n    '0.5': 'breve',\n    '0.25': 'longa',\n    '0.125': 'maxima',\n    '0.0625': 'duplex-maxima',\n};\nduration.quarterTypeIndex = 6; // where is quarter in the following array.\nduration.ordinalTypeFromNum = ['duplex-maxima', 'maxima', 'longa', 'breve',\n                               'whole', 'half', 'quarter', 'eighth', '16th',\n                               '32nd', '64th', '128th', '256th', '512th', '1024th'];\nduration.vexflowDurationArray = [undefined, undefined, undefined, undefined,\n                                 'w', 'h', 'q', '8', '16',\n                                 '32', undefined, undefined, undefined, undefined, undefined];\n\n/**\n * Duration object; found as the `.duration` attribute on {@link music21.base.Music21Object} instances\n * such as {@link music21.note.Note}\n *\n * @class Duration\n * @memberof music21.duration\n * @extends music21.prebase.ProtoM21Object\n * @param {(number|undefined)} ql - quarterLength (default 1.0)\n */\nexport class Duration extends prebase.ProtoM21Object {\n    constructor(ql) {\n        super();\n        this.classes.push('Duration');\n        this._quarterLength = 1.0;\n        this._dots = 0;\n        this._durationNumber = undefined;\n        this._type = 'quarter';\n        this._tuplets = [];\n        if (typeof (ql) === 'string') {\n            this.type = ql;\n        } else {\n            this.quarterLength = ql;\n        }\n        this._cloneCallbacks._tuplets = this.cloneCallbacksTupletFunction;\n    }\n    /**\n     * Read or sets the number of dots on the duration.\n     *\n     * Updates the quarterLength\n     *\n     * @type Number\n     * @instance\n     * @default 0\n     * @memberof music21.duration.Duration\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.dots === 0; // true\n     * d.dots = 1;\n     * d.quarterLength == 3; // true;\n     */\n    get dots() {\n        return this._dots;\n    }\n    set dots(numDots) {\n        this._dots = numDots;\n        this.updateQlFromFeatures();\n    }\n    /**\n     * Read or sets the quarterLength of the Duration\n     *\n     * Updates the type, dots, tuplets(?)\n     *\n     * @type Number\n     * @instance\n     * @default 1.0\n     * @memberof music21.duration.Duration\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.quarterLength == 2.0; // true;\n     * d.quarterLength = 1.75;\n     * d.dots == 2; // true\n     * d.type == 'quarter'; // true\n     */\n    get quarterLength() {\n        return this._quarterLength;\n    }\n    set quarterLength(ql) {\n        if (ql === undefined) {\n            ql = 1.0;\n        }\n        this._quarterLength = ql;\n        this.updateFeaturesFromQl();\n    }\n    /**\n     * Read or sets the type of the duration.\n     *\n     * Updates the quarterLength\n     *\n     * @type String\n     * @instance\n     * @default 'quarter'\n     * @memberof music21.duration.Duration\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.type == 'half; // true\n     * d.type = 'breve';\n     * d.quarterLength == 8.0; // true\n     * d.dots = 1;\n     * d.type = 'quarter'; // will not change dots\n     * d.quarterLength == 1.5; // true\n     */\n    get type() {\n        return this._type;\n    }\n    set type(typeIn) {\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(typeIn);\n        if (typeNumber === -1) {\n            console.log('invalid type ' + typeIn);\n            throw new Music21Exception('invalid type ' + typeIn);\n        }\n        this._type = typeIn;\n        this.updateQlFromFeatures();\n    }\n    /**\n     * Reads the tuplet Array for the duration.\n     *\n     * The tuplet array should be considered Read Only.\n     * Use {@link music21.duration.Duration#appendTuplet} to\n     * add a tuplet (no way to remove yet)\n     *\n     * @type Array<music21.duration.Tuplet>\n     * @instance\n     * @default []\n     * @memberof music21.duration.Duration\n     */\n    get tuplets() {\n        return this._tuplets;\n    }\n    /**\n     * Read-only: the duration expressed for VexFlow\n     *\n     * @type String\n     * @instance\n     * @default 'd'\n     * @memberof music21.duration.Duration\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.vexflowDuration == 'h'; // true;\n     * d.dots = 2;\n     * d.vexflowDuration == 'hdd'; // true;\n     */\n    get vexflowDuration() {\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(this.type);\n        let vd = duration.vexflowDurationArray[typeNumber];\n        if (this.dots > 0) {\n            for (let i = 0; i < this.dots; i++) {\n                vd += 'd'; // vexflow does not handle double dots .. or does it???\n            }\n        }\n        return vd;\n    }\n    cloneCallbacksTupletFunction(tupletKey, ret, obj) {\n        // make sure that tuplets clone properly\n        const newTuplets = [];\n        for (let i = 0; i < obj[tupletKey].length; i++) {\n            const newTuplet = obj[tupletKey][i].clone();\n            // console.log('cloning tuplets', obj[tupletKey][i], newTuplet);\n            newTuplets.push(newTuplet);\n        }\n        ret[tupletKey] = newTuplets;\n    }\n    _findDots(ql) {\n        if (ql === 0) { return 0; } // zero length stream probably;\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(this._type);\n        const powerOfTwo = Math.pow(2, duration.quarterTypeIndex - typeNumber);\n        // alert(undottedQL * 1.5 + \" \" + ql)\n        // console.log('find dots called on ql: ', ql, typeNumber, powerOfTwo);\n        for (let dotsNum = 0; dotsNum <= 4; dotsNum++) {\n            const dotMultiplier = (Math.pow(2, dotsNum) - 1.0) / (Math.pow(2, dotsNum));\n            const durationMultiplier = 1 + dotMultiplier;\n            if (Math.abs((powerOfTwo * durationMultiplier) - ql) < 0.0001) {\n                return dotsNum;\n            }\n        }\n        if (debug) {\n            console.log('no dots available for ql; probably a tuplet', ql);\n        }\n        return 0;\n    }\n    updateQlFromFeatures() {\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(this._type); // must be set property\n        const undottedQuarterLength = Math.pow(2, duration.quarterTypeIndex - typeNumber);\n        const dottedMultiplier = 1 + ((Math.pow(2, this._dots) - 1) / Math.pow(2, this._dots));\n        const unTupletedQl = undottedQuarterLength * dottedMultiplier;\n        let tupletCorrectedQl = unTupletedQl;\n        this._tuplets.forEach((tuplet) => {\n            tupletCorrectedQl *= tuplet.tupletMultiplier();\n        });\n        this._quarterLength = tupletCorrectedQl;\n    }\n    updateFeaturesFromQl() {\n        const ql = this._quarterLength;\n        const powerOfTwo = Math.floor(Math.log(ql + 0.00001) / Math.log(2));\n        let typeNumber = duration.quarterTypeIndex - powerOfTwo;\n        this._type = duration.ordinalTypeFromNum[typeNumber];\n        // console.log(this._findDots);\n        this._dots = this._findDots(ql);\n\n        const undottedQuarterLength = Math.pow(2, duration.quarterTypeIndex - typeNumber);\n        const dottedMultiplier = 1 + ((Math.pow(2, this._dots) - 1) / Math.pow(2, this._dots));\n        let unTupletedQl = undottedQuarterLength * dottedMultiplier;\n        if (unTupletedQl !== ql && ql !== 0) {\n            typeNumber -= 1;\n            this._type = duration.ordinalTypeFromNum[typeNumber]; // increase type: eighth to quarter etc.\n            unTupletedQl *= 2;\n            const tupletRatio = ql / unTupletedQl;\n            const ratioRat = common.rationalize(tupletRatio);\n            if (ratioRat === undefined) {\n                // probably a Stream with a length that is inexpressable;\n            } else {\n                const t = new duration.Tuplet(ratioRat.denominator, ratioRat.numerator, new duration.Duration(unTupletedQl));\n                this.appendTuplet(t, true); // skipUpdateQl\n            }\n            // console.log(ratioRat, ql, unTupletedQl);\n        }\n    }\n    /**\n     * Add a tuplet to music21j\n     *\n     * @memberof music21.duration.Duration\n     * @param {music21.duration.Tuplet} newTuplet - tuplet to add to `.tuplets`\n     * @param {boolean} [skipUpdateQl=false] - update the quarterLength afterwards?\n     */\n    appendTuplet(newTuplet, skipUpdateQl) {\n        newTuplet.frozen = true;\n        this._tuplets.push(newTuplet);\n        if (skipUpdateQl !== true) {\n            this.updateQlFromFeatures();\n        }\n    }\n}\n\nduration.Duration = Duration;\n\n\n/**\n * Represents a Tuplet; found in {@link music21.duration.Duration#tuplets}\n *\n * @class Tuplet\n * @memberof music21.duration\n * @extends music21.prebase.ProtoM21Object\n * @param {number} numberNotesActual - numerator of the tuplet, default 3\n * @param {number} numberNotesNormal - denominator of the tuplet, default 2\n * @param {(music21.duration.Duration|number)} durationActual - duration or quarterLength of duration type, default music21.duration.Duration(0.5)\n * @param {(music21.duration.Duration|number)} durationNormal - unused; see music21p for description\n */\nexport class Tuplet extends prebase.ProtoM21Object {\n    constructor(numberNotesActual, numberNotesNormal,\n            durationActual, durationNormal) {\n        super();\n        this.classes.push('Tuplet');\n        this.numberNotesActual = numberNotesActual || 3;\n        this.numberNotesNormal = numberNotesNormal || 2;\n        this.durationActual = durationActual || new duration.Duration(0.5);\n        if (typeof (this.durationActual) === 'number') {\n            this.durationActual = new duration.Duration(this.durationActual);\n        }\n        this.durationNormal = durationNormal || this.durationActual;\n\n        this.frozen = false;\n        this.type = undefined;\n        /**\n         * Show a bracket above the tuplet\n         *\n         * @memberof music21.duration.Tuplet#\n         * @member {Boolean} bracket\n         * @default true\n         */\n        this.bracket = true;\n        /**\n         * Bracket placement. Options are `above` or `below`.\n         *\n         * @memberof music21.duration.Tuplet#\n         * @member {String} placement\n         * @default 'above'\n         */\n        this.placement = 'above';\n\n        /**\n         * What to show above the Tuplet. Options are `number`, `type`, or (string) `none`.\n         *\n         * @memberof music21.duration.Tuplet#\n         * @member {String} tupletActualShow\n         * @default 'number'\n         */\n        this.tupletActualShow = 'number';\n        this.tupletNormalShow = undefined; // undefined, 'ratio' for ratios, 'type' for ratioed notes (does not work)\n    }\n    /**\n     * A nice name for the tuplet.\n     *\n     * @type String\n     * @instance\n     * @readonly\n     * @memberof music21.duration.Tuplet\n     */\n    get fullName() {\n        // actual is what is presented to viewer\n        const numActual = this.numberNotesActual;\n        const numNormal = this.numberNotesNormal;\n\n        if (numActual === 3 && numNormal === 2) {\n            return 'Triplet';\n        } else if (numActual === 5 && (numNormal === 4 || numNormal === 2)) {\n            return 'Quintuplet';\n        } else if (numActual === 6 && numNormal === 4) {\n            return 'Sextuplet';\n        }\n        const ordStr = common.ordinalAbbreviation(numNormal, true); // plural\n        return 'Tuplet of ' + numActual.toString() + '/' + numNormal.toString() + ordStr;\n    }\n    /**\n     * Set both durationActual and durationNormal for the tuplet.\n     *\n     * @memberof music21.duration.Tuplet\n     * @param {string} type - a duration type, such as `half`, `quarter`\n     * @returns {music21.duration.Duration} A converted {@link music21.duration.Duration} matching `type`\n     */\n    setDurationType(type) {\n        if (this.frozen === true) {\n            throw new Music21Exception('A frozen tuplet (or one attached to a duration) is immutable');\n        }\n        this.durationActual = new duration.Duration(type);\n        this.durationNormal = this.durationActual;\n        return this.durationActual;\n    }\n    /**\n     * Sets the tuplet ratio.\n     *\n     * @memberof music21.duration.Tuplet\n     * @param {Number} actual - number of notes in actual (e.g., 3)\n     * @param {Number} normal - number of notes in normal (e.g., 2)\n     * @returns {undefined}\n     */\n    setRatio(actual, normal) {\n        if (this.frozen === true) {\n            throw new Music21Exception('A frozen tuplet (or one attached to a duration) is immutable');\n        }\n        this.numberNotesActual = actual || 3;\n        this.numberNotesNormal = normal || 2;\n    }\n    /**\n     * Get the quarterLength corresponding to the total length that\n     * the completed tuplet (i.e., 3 notes in a triplet) would occupy.\n     *\n     * @memberof music21.duration.Tuplet\n     * @returns {Number} A quarter length.\n     */\n    totalTupletLength() {\n        return this.numberNotesNormal * this.durationNormal.quarterLength;\n    }\n    /**\n     * The amount by which each quarter length is multiplied to get\n     * the tuplet. For instance, in a normal triplet, this is 0.666\n     *\n     * @memberof music21.duration.Tuplet\n     * @returns {Number} A float of the multiplier\n     */\n    tupletMultiplier() {\n        const lengthActual = this.durationActual.quarterLength;\n        return (this.totalTupletLength() / (\n                this.numberNotesActual * lengthActual));\n    }\n}\nduration.Tuplet = Tuplet;\n\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/base -- objects in base in music21p routines\n *\n * does not load the other modules, music21/moduleLoader.js does that.\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { duration } from './duration';\nimport { prebase } from './prebase';\n\n/**\n * module for Music21Objects, see {@link music21.base}\n *\n * @requires music21/duration\n * @requires music21/prebase\n * @exports music21/base\n */\n/**\n * Module for Music21Objects.  Does not load other modules, see {@link music21.moduleLoader}\n * for this functionality.\n *\n * @namespace music21.base\n * @memberof music21\n */\nexport const base = {};\n\n/**\n * Base class for any object that can be placed in a {@link music21.stream.Stream}.\n *\n * @class Music21Object\n * @memberof music21.base\n * @extends music21.prebase.ProtoM21Object\n * @property {object} activeSite - hardlink to a {@link music21.stream.Stream} containing the element.\n * @property {number} classSortOrder - Default sort order for this class (default 20; override in other classes). Lower numbered objects will sort before other objects in the staff if priority and offset are the same.\n * @property {music21.duration.Duration} duration - the duration (object) for the element. (can be set with a quarterLength also)\n * @property {Array} groups - An Array of strings representing group (equivalent to css classes) to assign to the object. (default [])\n * @property {boolean} isMusic21Object - true\n * @property {boolean} isStream - false\n * @property {number|null} offset - offset from the beginning of the stream (in quarterLength)\n * @property {number} priority - The priority (lower = earlier or more left) for elements at the same offset. (default 0)\n */\nexport class Music21Object extends prebase.ProtoM21Object {\n    constructor() {\n        super();\n        this.classes.push('Music21Object');\n        this.classSortOrder = 20; // default;\n        this._priority = 0; // default;\n        this.offset = null; // default -- simple version of m21.\n        this.activeSite = undefined;\n        this.isMusic21Object = true;\n        this.isStream = false;\n\n        this._duration = new duration.Duration();\n        this.groups = []; // custom object in m21p\n        // this.sites, this.activeSites, this.offset -- not yet...\n        // beat, measureNumber, etc.\n        // lots to do...\n        this._cloneCallbacks.activeSite = function Music21Object_cloneCallbacks_activeSite(p, ret, obj) {\n            ret[p] = undefined;\n        };\n    }\n    get priority() {\n        return this._priority;\n    }\n    set priority(p) {\n        this._priority = p;\n    }\n    get duration() {\n        return this._duration;\n    }\n    set duration(newDuration) {\n        if (typeof (newDuration) === 'object') {\n            this._duration = newDuration;\n            // common errors below...\n        } else if (typeof (newDuration) === 'number') {\n            this._duration.quarterLength = newDuration;\n        } else if (typeof (newDuration) === 'string') {\n            this._duration.type = newDuration;\n        }\n    }\n    get quarterLength() {\n        return this.duration.quarterLength;\n    }\n    set quarterLength(ql) {\n        this.duration.quarterLength = ql;\n    }\n    /**\n     * Return the offset of this element in a given site -- use .offset if you are sure that\n     * site === activeSite.\n     *\n     * Does not change activeSite or .offset\n     *\n     * @memberof music21.base.Music21Object\n     * @param {music21.stream.Stream} site\n     * @returns Number|undefined\n     */\n    getOffsetBySite(site) {\n        if (site === undefined) {\n            return this.offset;\n        }\n        for (let i = 0; i < site.length; i++) {\n            if (site._elements[i] === this) {\n                return site._elementOffsets[i];\n            }\n        }\n        return undefined;\n    }\n}\n\nbase.Music21Object = Music21Object;\n","import * as Vex from 'vexflow';\nimport { common } from './common';\nimport { prebase } from './prebase';\n\n/**\n * articulations module. See {@link music21.articulations} namespace\n *\n */\n\n/**\n * @namespace music21.articulations\n * @memberof music21\n * @requires music21/prebase, Vexflow\n */\nexport const articulations = {};\n\n/**\n * Represents a single articulation, usually in the `.articulations` Array\n * on a {@link music21.note.Note} or something like that.\n *\n * @class Articulation\n * @memberof music21.articulations\n * @extends music21.prebase.ProtoM21Object\n * @property {string} name\n * @property {string} [placement='above']\n * @property {string} vexflowModifier - the string code to get this accidental in Vexflow\n * @property {number} [dynamicScale=1.0] - multiplier for the dynamic of a note that this is attached to\n * @property {number} [lengthScale=1.0] - multiplier for the length of a note that this is attached to.\n */\nexport class Articulation extends prebase.ProtoM21Object {\n    constructor() {\n        super();\n        this.classes.push('Articulation');\n        this.name = undefined;\n        this.placement = 'above';\n        this.vexflowModifier = undefined;\n        this.setPosition = undefined;\n        this.dynamicScale = 1.0;\n        this.lengthScale = 1.0;\n    }\n\n    /**\n     * Generates a Vex.Flow.Articulation for this articulation.\n     *\n     * @memberof music21.articulations.Articulation\n     * @returns {Vex.Flow.Articulation}\n     */\n    vexflow() {\n        const vfa = new Vex.Flow.Articulation(this.vexflowModifier);\n        if (this.setPosition) {\n            vfa.setPosition(this.setPosition);\n        }\n        return vfa;\n    }\n}\narticulations.Articulation = Articulation;\n/**\n * base class for articulations that change the length of a note...\n *\n * @class LengthArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class LengthArticulation extends Articulation {\n    constructor() {\n        super();\n        this.classes.push('LengthArticulation');\n    }\n}\narticulations.LengthArticulation = LengthArticulation;\n\n/**\n * base class for articulations that change the dynamic of a note...\n *\n * @class DynamicArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class DynamicArticulation extends Articulation {\n    constructor() {\n        super();\n        this.classes.push('DynamicArticulation');\n    }\n}\narticulations.DynamicArticulation = DynamicArticulation;\n\n/**\n * base class for articulations that change the pitch of a note...\n *\n * @class PitchArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class PitchArticulation extends Articulation {\n    constructor() {\n        super();\n        this.classes.push('PitchArticulation');\n    }\n}\narticulations.PitchArticulation = PitchArticulation;\n\n/**\n * base class for articulations that change the timbre of a note...\n *\n * @class TimbreArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class TimbreArticulation extends Articulation {\n    constructor() {\n        super();\n        this.classes.push('TimbreArticulation');\n    }\n}\narticulations.TimbreArticulation = TimbreArticulation;\n\n\n/**\n * 50% louder than usual\n *\n * @class Accent\n * @memberof music21.articulations\n * @extends music21.articulations.DynamicArticulation\n */\nexport class Accent extends DynamicArticulation {\n    constructor() {\n        super();\n        this.classes.push('Accent');\n        this.name = 'accent';\n        this.vexflowModifier = 'a>';\n        this.dynamicScale = 1.5;\n    }\n}\narticulations.Accent = Accent;\n\n/**\n * 100% louder than usual\n *\n * @class StrongAccent\n * @memberof music21.articulations\n * @extends music21.articulations.Accent\n */\nexport class StrongAccent extends Accent {\n    constructor() {\n        super();\n        this.classes.push('StrongAccent');\n        this.name = 'strong accent';\n        this.vexflowModifier = 'a^';\n        this.dynamicScale = 2.0;\n    }\n}\narticulations.StrongAccent = StrongAccent;\n\n/**\n * no playback for now.\n *\n * @class Staccato\n * @memberof music21.articulations\n * @extends music21.articulations.LengthArticulation\n */\nexport class Staccato extends LengthArticulation {\n    constructor() {\n        super();\n        this.classes.push('Staccato');\n        this.name = 'staccato';\n        this.vexflowModifier = 'a.';\n    }\n}\narticulations.Staccato = Staccato;\n\n/**\n * no playback for now.\n *\n * @class Staccatissimo\n * @memberof music21.articulations\n * @extends music21.articulations.Staccato\n */\nexport class Staccatissimo extends Staccato {\n    constructor() {\n        super();\n        this.classes.push('Staccatissimo');\n        this.name = 'staccatissimo';\n        this.vexflowModifier = 'av';\n    }\n}\narticulations.Staccatissimo = Staccatissimo;\n\n/**\n * no playback or display for now.\n *\n * @class Spiccato\n * @memberof music21.articulations\n * @extends music21.articulations.Staccato\n */\nexport class Spiccato extends Staccato {\n    constructor() {\n        super();\n        this.classes.push('Spiccato');\n        this.name = 'spiccato';\n        this.vexflowModifier = undefined;\n    }\n}\narticulations.Spiccato = Spiccato;\n\n/**\n * @class Marcato\n * @memberof music21.articulations\n * @extends music21.articulations.DynamicArticulation\n * @extends music21.articulations.LengthArticulation\n */\nexport class Marcato extends DynamicArticulation {\n    constructor() {\n        super();\n        common.mixin(LengthArticulation, this);\n        this.classes.push('Marcato');\n        this.name = 'marcato';\n        this.vexflowModifier = 'a^';\n        this.dynamicScale = 1.7;\n    }\n}\narticulations.Marcato = Marcato;\n\n/**\n * @class Tenuto\n * @memberof music21.articulations\n * @extends music21.articulations.LengthArticulation\n */\nexport class Tenuto extends LengthArticulation {\n    constructor() {\n        super();\n        this.classes.push('Tenuto');\n        this.name = 'tenuto';\n        this.vexflowModifier = 'a-';\n    }\n}\narticulations.Tenuto = Tenuto;\n","import MIDI from 'MIDI';\n\nimport { common } from './common';\n\n\n/**\n * audioSearch module. See {@link music21.audioSearch} namespace\n *\n * @exports music21/audioSearch\n */\n/**\n * @namespace music21.audioSearch\n * @memberof music21\n * @requires music21/pitch\n * @requires music21/common\n */\n\nexport const audioSearch = {};\n// functions based on the prototype created by Chris Wilson's MIT License version\n// and on Jordi Bartolome Guillen's audioSearch module for music21\n\naudioSearch.fftSize = 2048;\n\naudioSearch.AudioContextCaller = window.AudioContext || window.webkitAudioContext;\naudioSearch._audioContext = null;\naudioSearch.animationFrameCallbackId = null;\n\nObject.defineProperties(audioSearch,\n        { 'audioContext': {\n            'get': () => {\n                if (audioSearch._audioContext !== null) {\n                    return audioSearch._audioContext;\n                } else {\n                    if (MIDI.WebAudio !== undefined && MIDI.WebAudio.getContext() !== undefined) {\n                        window.globalAudioContext = MIDI.WebAudio.getContext();\n                    } else if (typeof window.globalAudioContext === 'undefined') {\n                        window.globalAudioContext = new audioSearch.AudioContextCaller(); \n                    }\n                    audioSearch._audioContext = window.globalAudioContext;\n                    return audioSearch._audioContext;\n                }\n            },\n            'set': (ac) => {\n                audioSearch._audioContext = ac;\n            },\n        },\n        });\n\n\n/**\n *\n * @function music21.audioSearch.getUserMedia\n * @memberof music21.audioSearch\n * @param {object} dictionary - optional dictionary to fill\n * @param {function} callback - callback on success\n * @param {function} error - callback on error\n */\naudioSearch.getUserMedia = function getUserMedia(dictionary, callback, error) {\n    if (error === undefined) {\n        /* eslint no-alert: \"off\"*/\n        error = () => { alert('navigator.getUserMedia either not defined (Safari, IE) or denied.'); };\n    }\n    if (callback === undefined) {\n        callback = (mediaStream) => { audioSearch.userMediaStarted(mediaStream); };\n    }\n    const n = navigator;\n    // need to polyfill navigator, or binding problems are hard...\n    n.getUserMedia = n.getUserMedia || n.webkitGetUserMedia || n.mozGetUserMedia || n.msGetUserMedia;\n\n    if (n.getUserMedia === undefined) {\n        error();\n    }\n    if (dictionary === undefined) {\n        dictionary = {\n            'audio': {\n                'mandatory': {\n                },\n                'optional': [],\n            },\n        };\n    }\n    n.getUserMedia(dictionary, callback, error);\n};\n\naudioSearch.sampleBuffer = null;\naudioSearch.currentAnalyser = null;\n\naudioSearch.userMediaStarted = function userMediaStarted(audioStream) {\n    audioSearch.sampleBuffer = new Float32Array(audioSearch.fftSize / 2);\n    const mediaStreamSource = audioSearch.audioContext.createMediaStreamSource(audioStream);\n    const analyser = audioSearch.audioContext.createAnalyser();\n    analyser.fftSize = audioSearch.fftSize;\n    mediaStreamSource.connect(analyser);\n    audioSearch.currentAnalyser = analyser;\n    audioSearch.animateLoop();\n};\n\naudioSearch.minFrequency = 55;\naudioSearch.maxFrequency = 1050;\naudioSearch.animateLoop = function animateLoop(time) {\n    audioSearch.currentAnalyser.getFloatTimeDomainData(audioSearch.sampleBuffer);\n    // returns best frequency or -1\n    const frequencyDetected = audioSearch.autoCorrelate(\n            audioSearch.sampleBuffer,\n            audioSearch.audioContext.sampleRate,\n            audioSearch.minFrequency,\n            audioSearch.maxFrequency);\n    const retValue = audioSearch.sampleCallback(frequencyDetected);\n    if (retValue !== -1) {\n        audioSearch.animationFrameCallbackId = window.requestAnimationFrame(audioSearch.animateLoop);\n    }\n};\n\naudioSearch.pitchSmoothingSize = 40;\naudioSearch.lastPitchClassesDetected = [];\naudioSearch.lastPitchesDetected = [];\naudioSearch.lastCentsDeviationsDetected = [];\n\naudioSearch.smoothPitchExtraction = function smoothPitchExtraction(frequency) {\n    if (frequency === -1) {\n        audioSearch.lastPitchClassesDetected.shift();\n        audioSearch.lastPitchesDetected.shift();\n        audioSearch.lastCentsDeviationsDetected.shift();\n    } else {\n        const [midiNum, centsOff] = audioSearch.midiNumDiffFromFrequency(frequency);\n        if (audioSearch.lastPitchClassesDetected.length > audioSearch.pitchSmoothingSize) {\n            audioSearch.lastPitchClassesDetected.shift();\n            audioSearch.lastPitchesDetected.shift();\n            audioSearch.lastCentsDeviationsDetected.shift();\n        }\n        audioSearch.lastPitchClassesDetected.push(midiNum % 12);\n        audioSearch.lastPitchesDetected.push(midiNum);\n        audioSearch.lastCentsDeviationsDetected.push(centsOff);\n    }\n    const mostCommonPitchClass = common.statisticalMode(audioSearch.lastPitchClassesDetected);\n    if (mostCommonPitchClass === null) {\n        return [-1, 0];\n    }\n    const pitchesMatchingClass = [];\n    const centsMatchingClass = [];\n    for (let i = 0; i < audioSearch.lastPitchClassesDetected.length; i++) {\n        if (audioSearch.lastPitchClassesDetected[i] === mostCommonPitchClass) {\n            pitchesMatchingClass.push(audioSearch.lastPitchesDetected[i]);\n            centsMatchingClass.push(audioSearch.lastCentsDeviationsDetected[i]);\n        }\n    }\n    const mostCommonPitch = common.statisticalMode(pitchesMatchingClass);\n\n    // find cents difference; weighing more recent samples more...\n    let totalSamplePoints = 0;\n    let totalSample = 0;\n    for (let j = 0; j < centsMatchingClass.length; j++) {\n        const weight = (Math.pow(j, 2) + 1);\n        totalSample += weight * centsMatchingClass[j];\n        totalSamplePoints += weight;\n    }\n    const centsOff = Math.floor(totalSample / totalSamplePoints);\n    return [mostCommonPitch, centsOff];\n};\n\naudioSearch.sampleCallback = function sampleCallback(frequency) {\n    const [unused_midiNum, unused_centsOff] = audioSearch.smoothPitchExtraction(frequency);\n};\n\n// from Chris Wilson. Replace with Jordi's\naudioSearch.autoCorrelate = function autoCorrelate(buf, sampleRate, minFrequency, maxFrequency) {\n    const SIZE = buf.length;\n    const MAX_SAMPLES = Math.floor(SIZE / 2);\n    if (minFrequency === undefined) {\n        minFrequency = 0;\n    }\n    if (maxFrequency === undefined) {\n        maxFrequency = sampleRate;\n    }\n\n    let best_offset = -1;\n    let best_correlation = 0;\n    let rms = 0;\n    let foundGoodCorrelation = false;\n    const correlations = new Array(MAX_SAMPLES);\n\n    for (let i = 0; i < SIZE; i++) {\n        const val = buf[i];\n        rms += val * val;\n    }\n    rms = Math.sqrt(rms / SIZE);\n    if (rms < 0.01) {\n        return -1;\n    } // not enough signal\n\n    let lastCorrelation = 1;\n    for (let offset = 0; offset < MAX_SAMPLES; offset++) {\n        let correlation = 0;\n        const offsetFrequency = sampleRate / offset;\n        if (offsetFrequency < minFrequency) {\n            break;\n        }\n        if (offsetFrequency > maxFrequency) {\n            continue;\n        }\n\n        for (let i = 0; i < MAX_SAMPLES; i++) {\n            correlation += Math.abs((buf[i]) - (buf[i + offset]));\n        }\n        correlation = 1 - (correlation / MAX_SAMPLES);\n        correlations[offset] = correlation; // store it, for the tweaking we need to do below.\n        if ((correlation > 0.9) && (correlation > lastCorrelation)) {\n            foundGoodCorrelation = true;\n            if (correlation > best_correlation) {\n                best_correlation = correlation;\n                best_offset = offset;\n            }\n        } else if (foundGoodCorrelation) {\n            // short-circuit - we found a good correlation, then a bad one, so we'd just be seeing copies from here.\n            // Now we need to tweak the offset - by interpolating between the values to the left and right of the\n            // best offset, and shifting it a bit.  This is complex, and HACKY in this code (happy to take PRs!) -\n            // we need to do a curve fit on correlations[] around best_offset in order to better determine precise\n            // (anti-aliased) offset.\n\n            // we know best_offset >=1,\n            // since foundGoodCorrelation cannot go to true until the second pass (offset=1), and\n            // we can't drop into this clause until the following pass (else if).\n            const shift = (correlations[best_offset + 1] - correlations[best_offset - 1]) / correlations[best_offset];\n            return sampleRate / (best_offset + (8 * shift));\n        }\n        lastCorrelation = correlation;\n    }\n    if (best_correlation > 0.01) {\n        // console.log(\"f = \" + sampleRate/best_offset + \"Hz (rms: \" + rms + \" confidence: \" + best_correlation + \")\")\n        return sampleRate / best_offset;\n    }\n    return -1;\n    //  var best_frequency = sampleRate/best_offset;\n};\n\n/**\n *\n * @function midiNumDiffFromFrequency\n * @param {Number} frequency\n * @returns {Array<Int>} [miniNumber, centsOff]\n */\naudioSearch.midiNumDiffFromFrequency = function midiNumDiffFromFrequency(frequency) {\n    const midiNumFloat = (12 * (Math.log(frequency / 440) / Math.log(2))) + 69;\n    const midiNum = Math.round(midiNumFloat);\n    const centsOff = Math.round(100 * (midiNumFloat - midiNum));\n    return [midiNum, centsOff];\n};\n\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n// requestAnimationFrame polyfill by Erik Möller\n// fixes from Paul Irish and Tino Zijdel\n\nfunction requestAnimationFramePolyFill() {\n    let lastTime = 0;\n    const vendors = ['ms', 'moz', 'webkit', 'o'];\n    for (let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']\n        || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = (callback, element) => {\n            const currTime = new Date().getTime();\n            const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            const timeoutId = window.setTimeout(() => callback(currTime + timeToCall), timeToCall);\n            lastTime = currTime + timeToCall;\n            return timeoutId;\n        };\n    }\n\n    if (!window.cancelAnimationFrame) {\n        window.cancelAnimationFrame = (id) => {\n            clearTimeout(id);\n        };\n    }\n}\nrequestAnimationFramePolyFill();\n\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/beam -- Beams and Beam class\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21';\n\nimport { prebase } from './prebase';\nimport { duration } from './duration';\n\n/**\n * Module holding beam materials. See {@link music21.beam} namespace.\n *\n * @exports music21/beam\n */\n/**\n * {@link music21.beam.Beam} and {music21.beam.Beams} objects\n *\n * @namespace music21.beam\n * @memberof music21\n * @requires music21/prebase\n * @requires music21/duration\n */\nexport const beam = {};\n\nbeam.validBeamTypes = {\n    'start': true,\n    'stop': true,\n    'continue': true,\n    'partial': true,\n};\n\n/**\n * Object representing a single beam (e.g., a 16th note that is beamed needs two)\n *\n * @class Beam\n * @memberof music21.beam\n * @extends music21.prebase.ProtoM21Object\n * @param {string} type - \"start\", \"stop\", \"continue\", \"partial\"\n * @param {string} direction - only needed for partial beams: \"left\" or \"right\"\n * @property {Int|undefined} number - which beam line does this refer to; 8th = 1, 16th = 2, etc.\n * @property {number|undefined} independentAngle - the angle of this beam if it is different than others (feathered beams)\n */\nexport class Beam extends prebase.ProtoM21Object {\n    constructor(type, direction) {\n        super();\n        this.classes.push('Beam');\n        this.type = type;\n        this.direction = direction;\n        this.independentAngle = undefined;\n        this.number = undefined;\n    }\n}\nbeam.Beam = Beam;\n/**\n * Object representing a collection of Beams\n *\n * @class Beams\n * @memberof music21.beam\n * @extends music21.prebase.ProtoM21Object\n * @property {Array<music21.beam.Beam>} beamsList - a list of Beam objects\n * @property {Boolean} [feathered=false] - is this a feathered beam.\n * @property {Int} length - length of beamsList\n */\nexport class Beams extends prebase.ProtoM21Object {\n    constructor() {\n        super();\n        this.classes.push('Beams');\n        this.beamsList = [];\n        this.feathered = false;\n    }\n    get length() {\n        return this.beamsList.length;\n    }\n    /**\n     * Append a new {@link music21.beam.Beam} object to this Beams, automatically creating the Beam\n     *   object and incrementing the number count.\n     *\n     * @memberof music21.beam.Beams\n     * @param {string} type - the type (passed to {@link music21.beam.Beam})\n     * @param {string} [direction=undefined] - the direction if type is \"partial\"\n     * @returns {music21.beam.Beam} newly appended object\n     */\n    append(type, direction) {\n        const obj = new beam.Beam(type, direction);\n        obj.number = this.beamsList.length + 1;\n        this.beamsList.push(obj);\n        return obj;\n    }\n    /**\n     * A quick way of setting the beams list for a particular duration, for\n            instance, fill(\"16th\") will clear the current list of beams in the\n            Beams object and add two beams.  fill(2) will do the same (though note\n            that that is an int, not a string).\n\n     * It does not do anything to the direction that the beams are going in,\n            or by default.  Either set type here or call setAll() on the Beams\n            object afterwards.\n\n     * Both \"eighth\" and \"8th\" work.  Adding more than six beams (i.e. things\n            like 512th notes) raises an error.\n\n     * @memberof music21.beam.Beams\n     * @param {string|Int} level - either a string like \"eighth\" or a number like 1 (=\"eighth\")\n     * @param {string} type - type to fill all beams to.\n     * @returns {this}\n     */\n    fill(level, type) {\n        this.beamsList = [];\n        let count = 1;\n        if (level === 1 || level === '8th' || level === duration.typeFromNumDict[8]) {\n            count = 1;\n        } else if (level === 2 || level === duration.typeFromNumDict[16]) {\n            count = 2;\n        } else if (level === 3 || level === duration.typeFromNumDict[32]) {\n            count = 3;\n        } else if (level === 4 || level === duration.typeFromNumDict[64]) {\n            count = 4;\n        } else if (level === 5 || level === duration.typeFromNumDict[128]) {\n            count = 5;\n        } else if (level === 6 || level === duration.typeFromNumDict[256]) {\n            count = 6;\n        } else {\n            throw new Music21Exception('cannot fill beams for level ' + level);\n        }\n        for (let i = 1; i <= count; i++) {\n            const obj = new beam.Beam();\n            obj.number = i;\n            this.beamsList.push(obj);\n        }\n        if (type !== undefined) {\n            this.setAll(type);\n        }\n        return this;\n    }\n    /**\n     * Get the beam with the given number or throw an exception.\n     *\n     * @memberof music21.beam.Beams\n     * @param {Int} number - the beam number to retrieve (usually one less than the position in `.beamsList`)\n     * @returns {music21.beam.Beam|undefined}\n     */\n    getByNumber(number) {\n        if (!(this.getNumbers().includes(number))) {\n            throw new Music21Exception('beam number error: ' + number);\n        }\n        for (const thisBeam of this.beamsList) {\n            if (thisBeam.number === number) {\n                return thisBeam;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get an Array of all the numbers for the beams\n     *\n     * @memberof music21.beam.Beams\n     * @returns {Array<Int>} all the numbers\n     */\n    getNumbers() {\n        const numbers = [];\n        for (const thisBeam of this.beamsList) {\n            numbers.push(thisBeam.number);\n        }\n    }\n    /**\n     * Returns the type + \"-\" + direction (if direction is defined)\n     * for the beam with the given number.\n     *\n     * @param {Int} number\n     * @returns {music21.beam.Beam|undefined}\n     */\n    getTypeByNumber(number) {\n        const beamObj = this.getByNumber(number);\n        if (beamObj.direction === undefined) {\n            return beamObj.type;\n        } else {\n            const x = beamObj.type + '-' + beamObj.direction;\n            return x;\n        }\n    }\n    /**\n     * Get an Array of all the types for the beams\n     *\n     * @memberof music21.beam.Beams\n     * @returns {Array<string>} all the types\n     */\n    getTypes() {\n        const types = [];\n        for (let i = 0; i < this.length; i++) {\n            types.push(this.beamsList[i].type);\n        }\n        return types;\n    }\n    /**\n     * Set all the {@link music21.beam.Beam} objects to a given type/direction\n     *\n     * @memberof music21.beam.Beams\n     * @param {string} type - beam type\n     * @param {string} [direction] - beam direction\n     * @returns {this}\n     */\n    setAll(type, direction) {\n        if (beam.validBeamTypes[type] === undefined) {\n            throw new Music21Exception('invalid beam type: ' + type);\n        }\n        for (let i = 0; i < this.length; i++) {\n            const b = this.beamsList[i];\n            b.type = type;\n            b.direction = direction;\n        }\n        return this;\n    }\n    /**\n     * Set the {@link music21.beam.Beam} object specified by `number` to a given type/direction\n     *\n     * @memberof music21.beam.Beams\n     * @param {Int} number\n     * @param {string} type\n     * @param {string} [direction]\n     * @returns {this}\n     */\n    setByNumber(number, type, direction) {\n        if (direction === undefined) {\n            const splitit = type.split('-');\n            type = splitit[0];\n            direction = splitit[1]; // can be undefined...\n        }\n        if (beam.validBeamTypes[type] === undefined) {\n            throw new Music21Exception('invalid beam type: ' + type);\n        }\n        for (let i = 0; i < this.length; i++) {\n            if (this.beamsList[i].number === number) {\n                this.beamsList[i].type = type;\n                this.beamsList[i].direction = direction;\n            }\n        }\n        return this;\n    }\n}\nbeam.Beams = Beams;\n\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/pitch -- pitch routines\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21';\n\nimport { prebase } from './prebase';\n/**\n * pitch module.  See {@link music21.pitch} namespace\n *\n * @exports music21/pitch\n */\n/**\n * Pitch related objects and methods\n *\n * @namespace music21.pitch\n * @memberof music21\n * @requires music21/prebase\n */\nexport const pitch = {};\n/**\n * @class Accidental\n * @memberof music21.pitch\n * @param {string|number} accName - an accidental name\n * @extends music21.prebase.ProtoM21Object\n */\nexport class Accidental extends prebase.ProtoM21Object {\n    constructor(accName) {\n        super();\n        this.classes.push('Accidental');\n        this._name = '';\n        this._alter = 0.0;\n        this._modifier = '';\n        this._unicodeModifier = '';\n        this.displayType = 'normal'; // \"normal\", \"always\" supported currently\n        this.displayStatus = undefined; // true, false, undefined\n        this.init(accName);\n    }\n    /**\n     * Sets a parameter of the accidental and updates name, alter, and modifier to suit.\n     *\n     * @memberof music21.pitch.Accidental\n     * @param {number|string} accName - the name, number, or modifier to set\n     * @returns {undefined}\n     */\n    init(accName) {\n        if ((accName !== undefined) && (accName.toLowerCase !== undefined)) {\n            accName = accName.toLowerCase();\n        }\n\n        if (accName === 'natural' || accName === 'n' || accName === 0 || accName === undefined) {\n            this._name = 'natural';\n            this._alter = 0.0;\n            this._modifier = '';\n            this._unicodeModifier = '♮';\n        } else if (accName === 'sharp' || accName === '#' || accName === 1) {\n            this._name = 'sharp';\n            this._alter = 1.0;\n            this._modifier = '#';\n            this._unicodeModifier = '♯';\n        } else if (accName === 'flat' || accName === '-' || accName === -1) {\n            this._name = 'flat';\n            this._alter = -1.0;\n            this._modifier = '-';\n            this._unicodeModifier = '♭';\n        } else if (accName === 'double-flat' || accName === '--' || accName === -2) {\n            this._name = 'double-flat';\n            this._alter = -2.0;\n            this._modifier = '--';\n            this._unicodeModifier = '&#x1d12b;';\n        } else if (accName === 'double-sharp' || accName === '##' || accName === 2) {\n            this._name = 'double-sharp';\n            this._alter = 2.0;\n            this._modifier = '##';\n            this._unicodeModifier = '&#x1d12a;';\n        } else if (accName === 'triple-flat' || accName === '---' || accName === -3) {\n            this._name = 'triple-flat';\n            this._alter = -3.0;\n            this._modifier = '---';\n            this._unicodeModifier = '♭&#x1d12b;';\n        } else if (accName === 'triple-sharp' || accName === '###' || accName === 3) {\n            this._name = 'triple-sharp';\n            this._alter = 3.0;\n            this._modifier = '###';\n            this._unicodeModifier = '&#x1d12a;';\n        }\n    }\n    /**\n     * Return or set the name of the accidental ('flat', 'sharp', 'natural', etc.);\n     *\n     * When set, updates alter and modifier.\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {string} name\n     */\n    get name() {\n        return this._name;\n    }\n    set name(n) {\n        this.init(n);\n    }\n    /**\n     * Return or set the alteration amount (-1.0 = flat; 1.0 = sharp; etc.)\n     *\n     * When set, updates name and modifier.\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {number} alter\n     */\n    get alter() {\n        return this._alter;\n    }\n    set alter(alter) {\n        this.init(alter);\n    }\n    /**\n     * Return or set the modifier ('-', '#', '')\n     *\n     * When set, updates alter and name.\n\n     * @memberof music21.pitch.Accidental#\n     * @var {string} modifier\n     */\n    get modifier() {\n        return this._modifier;\n    }\n    set modifier(modifier) {\n        this.init(modifier);\n    }\n    /**\n     * Returns the modifier for vexflow ('b', '#', 'n')\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {string} vexflowModifier\n     * @readonly\n     */\n    get vexflowModifier() {\n        // todo -- rewrite with mapping.\n        const m = this.modifier;\n        if (m === '') {\n            return 'n';\n        } else if (m === '#') {\n            return '#';\n        } else if (m === '-') {\n            return 'b';\n        } else if (m === '##') {\n            return '##';\n        } else if (m === '--') {\n            return 'bb';\n        } else if (m === '###') {\n            return '###';\n        } else if (m === '---') {\n            return 'bbb';\n        } else {\n            throw new Music21Exception('Vexflow does not support: ' + m);\n        }\n    }\n    /**\n     * Returns the modifier in unicode or\n     * for double and triple accidentals, as a hex escape\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {string} unicodeModifier\n     * @readonly\n     */\n    get unicodeModifier() {\n        return this._unicodeModifier;\n    }\n}\npitch.Accidental = Accidental;\n\n\npitch.nameToMidi = { 'C': 0, 'D': 2, 'E': 4, 'F': 5, 'G': 7, 'A': 9, 'B': 11 };\npitch.nameToSteps = { 'C': 0, 'D': 1, 'E': 2, 'F': 3, 'G': 4, 'A': 5, 'B': 6 };\npitch.stepsToName = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\npitch.midiToName = ['C', 'C#', 'D', 'E-', 'E', 'F', 'F#', 'G', 'A-', 'A', 'B-', 'B'];\n\n/**\n * Pitch objects are found in {@link music21.note.Note} objects, and many other places.\n *\n * They do not have a {@link music21.duration.Duration} associated with them, so they\n * cannot be placed inside {@link music21.stream.Stream} objects.\n *\n * Valid pitch name formats are\n * - \"C\", \"D', etc. (\"B\" = American B; \"H\" is not allowed)\n * - \"C#\", \"C-\" (C-flat; do not use \"b\" for flat), \"C##\", \"C###\", \"C--\" etc.\n * - Octave may be specified after the name + accidental: \"C#4\" etc.\n * - Octave can be arbitrarily high (\"C10\") but only as low as \"C0\" because \"C-1\" would be interpreted as C-flat octave 1; shift octave later for very low notes.\n * - If octave is not specified, the system will usually use octave 4, but might adjust according to context. If you do not like this behavior, give an octave always.\n * - Microtones are not supported in music21j (they are in music21p)\n *\n * @class Pitch\n * @memberof music21.pitch\n * @param {string} pn - name of the pitch, with or without octave, see above.\n * @extends music21.prebase.ProtoM21Object\n * @property {music21.pitch.Accidental|undefined} accidental - link to an accidental\n * @property {number} diatonicNoteNum - diatonic number of the pitch, where 29 = C4, C#4, C-4, etc.; 30 = D-4, D4, D#4, etc. updates other properties.\n * @property {number} midi - midi number of the pitch (C4 = 60); readonly. See {@link music21.pitch.Pitch#ps} for setable version.\n * @property {string} name - letter name of pitch + accidental modifier; e.g., B-flat = 'B-'; changes automatically w/ step and accidental\n * @property {string} nameWithOctave - letter name of pitch + accidental modifier + octave; changes automatically w/ step, accidental, and octave\n * @property {number} octave - number for the octave, where middle C = C4, and octaves change between B and C; default 4\n * @property {number} ps - pitch space number, like midi number but floating point and w/ no restriction on range. C4 = 60.0\n * @property {string} step - letter name for the pitch (C-G, A, B), without accidental; default 'C'\n */\nexport class Pitch extends prebase.ProtoM21Object {\n    constructor(pn) {\n        super();\n        this.classes.push('Pitch');\n        if (pn === undefined) {\n            pn = 'C';\n        }\n        this._step = 'C';\n        this._octave = 4;\n        this._accidental = undefined;\n\n        /* pn can be a nameWithOctave */\n        if (typeof pn === 'number') {\n            if (pn < 12) {\n                pn += 60; // pitchClass\n            }\n            this.ps = pn;\n        } else if (pn.match(/\\d+/)) {\n            this.nameWithOctave = pn;\n        } else {\n            this.name = pn;\n        }\n    }\n\n\n    get step() { return this._step; }\n    set step(s) { this._step = s; }\n    get octave() { return this._octave; }\n    set octave(o) { this._octave = o; }\n    get accidental() { return this._accidental; }\n    set accidental(a) {\n        if (typeof (a) !== 'object' && a !== undefined) {\n            a = new pitch.Accidental(a);\n        }\n        this._accidental = a;\n    }\n    get name() {\n        if (this.accidental === undefined) {\n            return this.step;\n        } else {\n            return this.step + this.accidental.modifier;\n        }\n    }\n    set name(nn) {\n        this.step = nn.slice(0, 1).toUpperCase();\n        const tempAccidental = nn.slice(1);\n        if (tempAccidental) { // not the empty string\n            this.accidental = tempAccidental; // converts automatically\n        } else {\n            this.accidental = undefined;\n        }\n    }\n    get nameWithOctave() {\n        return this.name + this.octave.toString();\n    }\n    set nameWithOctave(pn) {\n        const storedOctave = pn.match(/\\d+/);\n        if (storedOctave !== undefined) {\n            pn = pn.replace(/\\d+/, '');\n            this.octave = parseInt(storedOctave);\n            this.name = pn;\n        } else {\n            this.name = pn;\n        }\n    }\n    get diatonicNoteNum() {\n        return (this.octave * 7) + pitch.nameToSteps[this.step] + 1;\n    }\n    set diatonicNoteNum(newDNN) {\n        newDNN -= 1; // makes math easier\n        this.octave = Math.floor(newDNN / 7);\n        this.step = pitch.stepsToName[newDNN % 7];\n    }\n    get frequency() {\n        return 440 * Math.pow(2, (this.ps - 69) / 12);\n    }\n    get midi() {\n        return Math.floor(this.ps);\n    }\n    get ps() {\n        let accidentalAlter = 0;\n        if (this.accidental !== undefined) {\n            accidentalAlter = parseInt(this.accidental.alter);\n        }\n        return (this.octave + 1) * 12 + pitch.nameToMidi[this.step] + accidentalAlter;\n    }\n    set ps(ps) {\n        this.name = pitch.midiToName[ps % 12];\n        this.octave = Math.floor(ps / 12) - 1;\n    }\n\n    /**\n     * Returns the vexflow name for the pitch in the given clef.\n     *\n     * @memberof music21.pitch.Pitch#\n     * @param {clef.Clef} clefObj - the active {@link music21.clef.Clef} object\n     * @returns {String} - representation in vexflow\n     */\n    vexflowName(clefObj) {\n        // returns a vexflow Key name for this pitch.\n        let tempPitch = this;\n        if (clefObj !== undefined) {\n            try {\n                tempPitch = clefObj.convertPitchToTreble(this);\n            } catch (e) {\n                console.log(e, clefObj);\n            }\n        }\n        let accidentalType = 'n';\n        if (this.accidental !== undefined) {\n            accidentalType = this.accidental.vexflowModifier;\n        }\n        const outName = tempPitch.step + accidentalType + '/' + tempPitch.octave;\n        return outName;\n    }\n}\npitch.Pitch = Pitch;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/note -- Note, Rest, NotRest, GeneralNote\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as MIDI from 'MIDI';\nimport * as Vex from 'vexflow';\n\nimport { prebase } from './prebase';\nimport { base } from './base';\nimport { debug } from './debug';\nimport { pitch } from './pitch';\nimport { beam } from './beam';\nimport { common } from './common';\n\n/**\n * Module for note classes. See the namespace {@link music21.note}\n *\n * @requires music21/common\n * @requires music21/prebase\n * @requires music21/base\n * @requires music21/pitch\n * @requires music21/beam\n * @exports music21/note\n */\n/**\n * Namespace for notes (single pitch) or rests, and some things like Lyrics that go on notes.\n *\n * @namespace music21.note\n * @memberof music21\n * @property {Array} noteheadTypeNames - an Array of allowable notehead names.\n * @property {Array} stemDirectionNames - an Array of allowable stemDirection names.\n */\nexport const note = {};\n\nnote.noteheadTypeNames = [\n    'arrow down',\n    'arrow up',\n    'back slashed',\n    'circle dot',\n    'circle-x',\n    'cluster',\n    'cross',\n    'diamond',\n    'do',\n    'fa',\n    'inverted triangle',\n    'la',\n    'left triangle',\n    'mi',\n    'none',\n    'normal',\n    're',\n    'rectangle',\n    'slash',\n    'slashed',\n    'so',\n    'square',\n    'ti',\n    'triangle',\n    'x',\n];\n\nnote.stemDirectionNames = [\n    'double',\n    'down',\n    'noStem',\n    'none',\n    'unspecified',\n    'up',\n];\n\n/**\n * Class for a single Lyric attached to a {@link music21.note.GeneralNote}\n *\n * @class Lyric\n * @memberOf music21.note\n * @extends music21.prebase.ProtoM21Object\n * @param {string} text - the text of the lyric\n * @param {number} number=1 - the lyric number\n * @param {string} syllabic=undefined - placement of the syllable ('begin', 'middle', 'end', 'single'); undefined = interpret from text\n * @param {boolean} applyRaw=false - true = display the text exactly as it is or, false = use \"-\" etc. to determine syllabic\n * @param {string} identifier=undefined - identifier for the lyric.\n * @property {string} lyricConnector='-' - what to place between two lyrics that are syllabic.\n * @property {string} text - the text of the lyric syllable.\n * @property {string} syllabic - see above\n * @property {boolean} applyRaw - see above\n * @property {string} identifier - see above; gets .number if undefined\n * @property {number} number - see above\n * @property {string} rawText - text + any connectors\n */\nexport class Lyric extends prebase.ProtoM21Object {\n    constructor(text, number, syllabic, applyRaw, identifier) {\n        super();\n        this.classes.push('Lyric');\n        this.lyricConnector = '-'; // override to place something else between two notes...\n        this.text = text;\n        this._number = number || 1;\n        this.syllabic = syllabic;\n        this.applyRaw = applyRaw || false;\n        this.setTextAndSyllabic(this.text, this.applyRaw);\n        this._identifier = identifier;\n    }\n    get identifier() {\n        return this._identifier || this._number;\n    }\n    set identifier(i) {\n        this._identifier = i;\n    }\n    // a property just to match m21p\n    get number() {\n        return this._number;\n    }\n    set number(n) {\n        this._number = n;\n    }\n    get rawText() {\n        if (this.syllabic === 'begin') {\n            return this.text + this.lyricConnector;\n        } else if (this.syllabic === 'middle') {\n            return this.lyricConnector + this.text + this.lyricConnector;\n        } else if (this.syllabic === 'end') {\n            return this.lyricConnector + this.text;\n        } else {\n            return this.text;\n        }\n    }\n    set rawText(t) {\n        this.setTextAndSyllabic(t, false);\n    }\n    setTextAndSyllabic(rawText, applyRaw) {\n        if (rawText === undefined) {\n            this.text = undefined;\n            return this;\n        }\n\n        if (!applyRaw\n                && (rawText.indexOf(this.lyricConnector) === 0)\n                && (rawText.slice(-1) === this.lyricConnector)) {\n            this.text = rawText.slice(1, -1);\n            this.syllabic = 'middle';\n        } else if (!applyRaw\n                    && (rawText.indexOf(this.lyricConnector) === 0)) {\n            this.text = rawText.slice(1);\n            this.syllabic = 'end';\n        } else if (!applyRaw\n                    && (rawText.slice(-1) === this.lyricConnector)) {\n            this.text = rawText.slice(0, -1);\n            this.syllabic = 'begin';\n        } else {\n            this.text = rawText;\n            if (this.syllabic === undefined) {\n                this.syllabic = 'single';\n            }\n        }\n        return this;\n    }\n}\nnote.Lyric = Lyric;\n\n/* Notes and rests etc... */\n\n/**\n * Superclass for all Note values\n *\n * @class GeneralNote\n * @memberof music21.note\n * @extends music21.base.Music21Object\n * @param {(number|undefined)} [ql=1.0] - quarterLength of the note\n * @property {boolean} [isChord=false] - is this a chord\n * @property {number} quarterLength - shortcut to `.duration.quarterLength`\n * @property {object} activeVexflowNote - most recent Vex.Flow.StaveNote object to be made from this note (could change); default, undefined\n * @property {Array<music21.expressions.Expression>} expressions - array of attached expressions\n * @property {Array<music21.articulations.Articulation>} articulations - array of attached articulations\n * @property {string} lyric - the text of the first {@link music21.note.Lyric} object; can also set one.\n * @property {Array<music21.note.Lyric>} lyrics - array of attached lyrics\n * @property {number} [volume=60] - how loud is this note, 0-127, before articulations\n * @property {number} midiVolume - how loud is this note, taking into account articulations\n * @property {music21.note.Tie|undefined} [tie=undefined] - a tie object\n */\nexport class GeneralNote extends base.Music21Object {\n    constructor(ql) {\n        super();\n        this.classes.push('GeneralNote');\n        this.isChord = false;\n        if (ql !== undefined) {\n            this.duration.quarterLength = ql;\n        }\n        this.volume = 60;\n        this.activeVexflowNote = undefined;\n        this.expressions = [];\n        this.articulations = [];\n        this.lyrics = [];\n        this.tie = undefined;\n        /* TODO: editorial objects, color, addLyric, insertLyric, hasLyrics */\n        /* Later: augmentOrDiminish, getGrace, */\n    }\n    get lyric() {\n        if (this.lyrics.length > 0) {\n            return this.lyrics[0].text;\n        } else {\n            return undefined;\n        }\n    }\n    set lyric(value) {\n        this.lyrics = [];\n        if (value !== undefined && value !== false) {\n            this.lyrics.push(new note.Lyric(value));\n        }\n    }\n    get midiVolume() {\n        let volume = this.volume;\n        if (volume === undefined) {\n            volume = 60;\n        }\n        if (this.articulations !== undefined) {\n            this.articulations.forEach((a) => {\n                volume *= a.dynamicScale;\n                if (volume > 127) {\n                    volume = 127;\n                } else if (isNaN(volume)) {\n                    volume = 60;\n                }\n            });\n        }\n        volume = Math.floor(volume);\n        return volume;\n    }\n    /**\n     * Add a {@link music21.note.Lyric} object to the Note\n     *\n     * @memberof music21.note.GeneralNote\n     * @param {string} text - text to be added\n     * @param {number} [lyricNumber] - integer specifying lyric (defaults to the current `.lyrics.length` + 1)\n     * @param {boolean} [applyRaw=false] - if `true`, do not parse the text for cluses about syllable placement.\n     * @param {string} [lyricIdentifier] - an optional identifier\n     */\n    addLyric(text, lyricNumber, applyRaw, lyricIdentifier) {\n        applyRaw = applyRaw || false;\n        if (lyricNumber === undefined) {\n            const maxLyrics = this.lyrics.length + 1;\n            const newLyric = new note.Lyric(text, maxLyrics, undefined, applyRaw, lyricIdentifier);\n            this.lyrics.push(newLyric);\n        } else {\n            let foundLyric = false;\n            for (let i = 0; i < this.lyrics.length; i++) {\n                const thisLyric = this.lyrics[i];\n                if (thisLyric.number === lyricNumber) {\n                    thisLyric.text = text;\n                    foundLyric = true;\n                    break;\n                }\n            }\n            if (foundLyric === false) {\n                const newLyric = new note.Lyric(text, lyricNumber, undefined, applyRaw, lyricIdentifier);\n                this.lyrics.push(newLyric);\n            }\n        }\n    }\n    /**\n     * Change stem direction according to clef. Does nothing for GeneralNote; overridden in subclasses.\n     *\n     * @memberof music21.note.GeneralNote\n     * @param {music21.clef.Clef} [clef] - clef to set the stem direction of.\n     * @returns {undefined}\n     */\n    setStemDirectionFromClef(clef) {\n        return undefined;\n    }\n    /**\n     * Sets the vexflow accidentals (if any), the dots, and the stem direction\n     *\n     * @memberof music21.note.GeneralNote\n     * @param {Vex.Flow.StaveNote} vfn - a Vex.Flow note\n     */\n    vexflowAccidentalsAndDisplay(vfn, options) {\n        if (this.duration.dots > 0) {\n            for (let i = 0; i < this.duration.dots; i++) {\n                vfn.addDotToAll();\n            }\n        }\n        if (this.activeSite !== undefined\n                && this.activeSite.renderOptions.stemDirection !== undefined) {\n            this.stemDirection = this.activeSite.renderOptions.stemDirection;\n        } else if (this.stemDirection === undefined\n                        && options.clef !== undefined) {\n            this.setStemDirectionFromClef(options.clef);\n        }\n        if (debug) {\n            console.log(this.stemDirection);\n        }\n        vfn.setStemDirection(this.stemDirection === 'down' ?\n                Vex.Flow.StaveNote.STEM_DOWN :\n                    Vex.Flow.StaveNote.STEM_UP);\n        if (this.stemDirection === 'noStem') {\n            vfn.hasStem = () => false; // need to override...\n            // vfn.render_options.stem_height = 0;\n        } else {\n            // correct VexFlow stem length for notes far from the center line;\n            let staveDNNSpacing = 5;\n            if (options.stave) {\n                staveDNNSpacing = Math.floor(options.stave.options.spacing_between_lines_px / 2);\n            }\n            if (options.clef !== undefined && this.pitch !== undefined) {\n                const midLine = options.clef.lowestLine + 4;\n                // console.log(midLine);\n                const absDNNfromCenter = Math.abs(this.pitch.diatonicNoteNum - midLine);\n                const absOverOctave = absDNNfromCenter - 7;\n                // console.log(absOverOctave);\n                if (absOverOctave > 0 && vfn.getStemLength !== undefined) {\n                    const stemHeight = (absOverOctave * staveDNNSpacing) + vfn.getStemLength();\n                    vfn.setStemLength(stemHeight);\n                }\n            }\n        }\n    }\n    /**\n     * Play the current element as a MIDI note.\n     *\n     * @memberof music21.note.GeneralNote\n     * @param {number} [tempo=120] - tempo in bpm\n     * @param {(base.Music21Object)} [nextElement] - for determining the length to play in case of tied notes, etc.\n     * @param {object} [options] - other options (currently just `{instrument: {@link music21.instrument.Instrument} }`)\n     * @returns {Number} - delay time in milliseconds until the next element (may be ignored)\n     */\n    playMidi(tempo, nextElement, options) {\n        // returns the number of milliseconds to the next element in\n        // case that can't be determined otherwise.\n        if (tempo === undefined) {\n            tempo = 120;\n        }\n        if (options === undefined) {\n            let inst;\n            if (this.activeSite !== undefined) {\n                inst = this.activeSite.instrument;\n            }\n            options = { instrument: inst };\n        }\n\n        const volume = this.midiVolume;\n        let channel = 0;\n        if (options !== undefined && options.instrument !== undefined) {\n            channel = options.instrument.midiChannel;\n        }\n        let milliseconds = 60 * 1000 / tempo;\n        const ql = this.duration.quarterLength;\n        milliseconds = 60 * ql * 1000 / tempo;\n        let midNum;\n        if (this.isClassOrSubclass('Note')) { // Note, not rest\n            midNum = this.pitch.midi;\n            let stopTime = milliseconds / 1000;\n            if (nextElement !== undefined && nextElement.isClassOrSubclass('Note')) {\n                if (nextElement.pitch.midi !== this.pitch.midi) {\n                    stopTime += 60 * 0.25 / tempo; // legato -- play 16th note longer\n                } else if (this.tie !== undefined\n                            && (this.tie.type === 'start'\n                                || this.tie.type === 'continue')) {\n                    stopTime += 60 * nextElement.duration.quarterLength / tempo;\n                    // this does not take into account 3 or more notes tied.\n                    // TODO: look ahead at next nexts, etc.\n                }\n            } else if (nextElement === undefined) {\n                // let last note ring an extra beat...\n                stopTime += 60 * 1 / tempo;\n            }\n            // console.log(stopTime);\n            // console.log(this.tie);\n            if (this.tie === undefined || this.tie.type === 'start') {\n                // console.log(volume);\n                MIDI.noteOn(channel, midNum, volume, 0);\n                MIDI.noteOff(channel, midNum, stopTime);\n            }// else { console.log ('not going to play ', this.nameWithOctave); }\n        } else if (this.isClassOrSubclass('Chord')) {\n            // TODO: Tied Chords.\n            for (let j = 0; j < this._notes.length; j++) {\n                midNum = this._notes[j].pitch.midi;\n                MIDI.noteOn(channel, midNum, volume, 0);\n                MIDI.noteOff(channel, midNum, milliseconds / 1000);\n            }\n        } // it's a note.Rest -- do nothing -- milliseconds takes care of it...\n        return milliseconds;\n    }\n}\nnote.GeneralNote = GeneralNote;\n\n/**\n * Specifies that a GeneralNote is not a rest (Unpitched, Note, Chord).\n *\n * @class NotRest\n * @memberof music21.note\n * @extends music21.note.GeneralNote\n * @param {number} [ql=1.0] - length in quarter notes\n * @property {music21.beam.Beams} beams - a link to a beam object\n * @property {string} [notehead='normal'] - notehead type\n * @property {string} [noteheadFill='default'] - notehead fill\n * @property {string|undefined} [noteheadColor=undefined] - notehead color\n * @property {boolean} [noteheadParenthesis=false] - put a parenthesis around the notehead?\n * @property {string|undefined} [stemDirection=undefined] - One of ['up','down','noStem', undefined] -- 'double' not supported\n */\nexport class NotRest extends GeneralNote {\n    constructor(ql) {\n        super(ql);\n        this.classes.push('NotRest');\n        this.notehead = 'normal';\n        this.noteheadFill = 'default';\n        this.noteheadColor = undefined;\n        this.noteheadParenthesis = false;\n        this.volume = undefined; // not a real object yet.\n        this.beams = new beam.Beams();\n        /* TODO: this.duration.linkage -- need durationUnits */\n        this.stemDirection = undefined;\n        /* TODO: check stemDirection, notehead, noteheadFill, noteheadParentheses */\n    }\n}\nnote.NotRest = NotRest;\n\n/* ------- Note ----------- */\n/**\n * A very, very important class! music21.note.Note objects combine a {@link music21.pitch.Pitch}\n * object to describe pitch (highness/lowness) with a {@link music21.duration.Duration} object\n * that defines length, with additional features for drawing the Note, playing it back, etc.\n *\n * Together with {@link music21.stream.Stream} one of the two most important\n * classes in `music21`.\n *\n * See {@link music21.note.NotRest}, {@link music21.note.GeneralNote}, {@link music21.base.Music21Object}\n * and {@link music21.prebase.ProtoM21Object} (or in general, the **extends** list below) for other\n * things you can do with a `Note` object.\n *\n * Missing from music21p: `microtone, pitchClass, pitchClassString, transpose(), fullName`.\n *\n * @class Note\n * @memberof music21.note\n * @extends music21.note.NotRest\n * @param {(string|music21.pitch.Pitch|undefined)} [nn='C4'] - pitch name (\"C\", \"D#\", \"E-\") w/ or w/o octave (\"C#4\"), or a pitch.Pitch object\n * @param {(number|undefined)} [ql=1.0] - length in quarter notes\n * @property {Boolean} [isNote=true] - is it a Note? Yes!\n * @property {Boolean} [isRest=false] - is it a Rest? No!\n * @property {music21.pitch.Pitch} pitch - the {@link music21.pitch.Pitch} associated with the Note.\n * @property {string} name - shortcut to `.pitch.name`\n * @property {string} nameWithOctave - shortcut to `.pitch.nameWithOctave`\n * @property {string} step - shortcut to `.pitch.step`\n * @property {number} octave - shortcut to `.pitch.octave`\n */\nexport class Note extends NotRest {\n    constructor(nn, ql) {\n        super(ql);\n        this.classes.push('Note');\n        this.isNote = true; // for speed\n        this.isRest = false; // for speed\n        if (nn !== undefined\n                && nn.isClassOrSubclass !== undefined\n                && nn.isClassOrSubclass('Pitch') === true) {\n            this.pitch = nn;\n        } else {\n            this.pitch = new pitch.Pitch(nn);\n        }\n    }\n    get name() {\n        return this.pitch.name;\n    }\n    set name(nn) {\n        this.pitch.name = nn;\n    }\n    get nameWithOctave() {\n        return this.pitch.nameWithOctave;\n    }\n    set nameWithOctave(nn) {\n        this.pitch.nameWithOctave = nn;\n    }\n    get step() {\n        return this.pitch.step;\n    }\n    set step(nn) {\n        this.pitch.step = nn;\n    }\n    // no Frequency\n    get octave() {\n        return this.pitch.octave;\n    }\n    set octave(nn) {\n        this.pitch.octave = nn;\n    }\n    /* TODO: transpose, fullName, microtone, pitchclass, pitchClassString */\n    /**\n     * Change stem direction according to clef.\n     *\n     * @memberof music21.note.Note\n     * @param {music21.clef.Clef} [clef] - clef to set the stem direction of.\n     * @returns {music21.note.Note} Original object, for chaining methods\n     */\n    setStemDirectionFromClef(clef) {\n        if (clef === undefined) {\n            return this;\n        } else {\n            const midLine = clef.lowestLine + 4;\n            const DNNfromCenter = this.pitch.diatonicNoteNum - midLine;\n            // console.log(DNNfromCenter, this.pitch.nameWithOctave);\n            if (DNNfromCenter >= 0) {\n                this.stemDirection = 'down';\n            } else {\n                this.stemDirection = 'up';\n            }\n            return this;\n        }\n    }\n    /**\n     * Returns a `Vex.Flow.StaveNote` that approximates this note.\n     *\n     * @memberof music21.note.Note\n     * @param {object} [options={}] - `{clef: {@link music21.clef.Clef} }` clef to set the stem direction of.\n     * @returns {Vex.Flow.StaveNote}\n     */\n    vexflowNote(options) {\n        const params = {};\n        common.merge(params, options);\n        const clef = params.clef;\n\n        if (this.duration === undefined) {\n            // console.log(this);\n            return undefined;\n        }\n        const vfd = this.duration.vexflowDuration;\n        if (vfd === undefined) {\n            return undefined;\n        }\n        const vexflowKey = this.pitch.vexflowName(clef);\n        const vfn = new Vex.Flow.StaveNote({\n            keys: [vexflowKey],\n            duration: vfd,\n        });\n        this.vexflowAccidentalsAndDisplay(vfn, params); // clean up stuff...\n        if (this.pitch.accidental !== undefined) {\n            if (this.pitch.accidental.vexflowModifier !== 'n'\n                    && this.pitch.accidental.displayStatus !== false) {\n                vfn.addAccidental(0, new Vex.Flow.Accidental(this.pitch.accidental.vexflowModifier));\n            } else if (this.pitch.accidental.displayType === 'always'\n                            || this.pitch.accidental.displayStatus === true) {\n                vfn.addAccidental(0, new Vex.Flow.Accidental(this.pitch.accidental.vexflowModifier));\n            }\n        }\n\n        if (this.articulations[0] !== undefined) {\n            for (let i = 0; i < this.articulations.length; i++) {\n                const art = this.articulations[i];\n                vfn.addArticulation(0, art.vexflow()); // 0 refers to the first pitch (for chords etc.)...\n            }\n        }\n        if (this.expressions[0] !== undefined) {\n            for (let j = 0; j < this.expressions.length; j++) {\n                const exp = this.expressions[j];\n                vfn.addArticulation(0, exp.vexflow()); // 0 refers to the first pitch (for chords etc.)...\n            }\n        }\n        if (this.noteheadColor) {\n            vfn.setKeyStyle(0, { fillStyle: this.noteheadColor });\n        }\n        this.activeVexflowNote = vfn;\n        return vfn;\n    }\n}\nnote.Note = Note;\n\n/* ------ TODO: Unpitched ------ */\n\n\n/* ------ Rest ------ */\n\n/**\n * Represents a musical rest.\n *\n * @class Rest\n * @memberof music21.note\n * @extends music21.note.GeneralNote\n * @param {number} [ql=1.0] - length in number of quarterNotes\n * @property {Boolean} [isNote=false]\n * @property {Boolean} [isRest=true]\n * @property {string} [name='rest']\n * @property {number} [lineShift=undefined] - number of lines to shift up or down from default\n */\nexport class Rest extends GeneralNote {\n    constructor(ql) {\n        super(ql);\n        this.classes.push('Rest');\n        this.isNote = false; // for speed\n        this.isRest = true; // for speed\n        this.name = 'rest'; // for note compatibility\n        this.lineShift = undefined;\n    }\n    /**\n     * Returns a `Vex.Flow.StaveNote` that approximates this rest.\n     * Corrects for bug in VexFlow that renders a whole rest too low.\n     *\n     * @memberof music21.note.Rest\n     * @returns {Vex.Flow.StaveNote}\n     */\n    vexflowNote(options) {\n        let keyLine = 'b/4';\n        if (this.duration.type === 'whole') {\n            if (this.activeSite !== undefined\n                    && this.activeSite.renderOptions.staffLines !== 1) {\n                keyLine = 'd/5';\n            }\n        }\n        if (this.lineShift !== undefined) {\n            const p = new pitch.Pitch('B4');\n            let ls = this.lineShift;\n            if (this.duration.type === 'whole') {\n                ls += 2;\n            }\n            p.diatonicNoteNum += ls;\n            keyLine = p.vexflowName(undefined);\n        }\n\n        const vfn = new Vex.Flow.StaveNote({ keys: [keyLine],\n            duration: this.duration.vexflowDuration + 'r' });\n        if (this.duration.dots > 0) {\n            for (let i = 0; i < this.duration.dots; i++) {\n                vfn.addDotToAll();\n            }\n        }\n        this.activeVexflowNote = vfn;\n        return vfn;\n    }\n}\nnote.Rest = Rest;\n\n/* ------ SpacerRest ------ */\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/chord -- Chord\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as Vex from 'vexflow';\nimport { Music21Exception } from './exceptions21';\nimport { note } from './note';\n\n/**\n * chord Module. See {@link music21.chord} namespace for more details\n *\n * @exports music21/chord\n */\n/**\n * Chord related objects (esp. {@link music21.chord.Chord}) and methods.\n *\n * @namespace music21.chord\n * @memberof music21\n * @requires music21/note\n */\nexport const chord = {};\n\n/**\n * Chord related objects (esp. {@link music21.chord.Chord}) and methods.\n *\n * @class Chord\n * @memberof music21.chord\n * @param {Array<string|music21.note.Note|music21.pitch.Pitch>} [notes] - an Array of strings\n * (see {@link music21.pitch.Pitch} for valid formats), note.Note, or pitch.Pitch objects.\n * @extends music21.note.NotRest\n * @property {number} length - the number of pitches in the Chord (readonly)\n * @property {Array<music21.pitch.Pitch>} pitches - an Array of Pitch objects in the chord. (Consider the Array read only and pass in a new Array to change)\n * @property {Boolean} [isChord=true]\n * @property {Boolean} [isNote=false]\n * @property {Boolean} [isRest=false]\n */\nexport class Chord extends note.NotRest {\n    constructor(notes) {\n        super();\n        if (typeof (notes) === 'undefined') {\n            notes = [];\n        }\n        this.classes.push('Chord');\n        this.isChord = true; // for speed\n        this.isNote = false; // for speed\n        this.isRest = false; // for speed\n\n        this._notes = [];\n        notes.forEach(this.add, this);\n    }\n    get length() {\n        return this._notes.length;\n    }\n    get pitches() {\n        const tempPitches = [];\n        for (let i = 0; i < this._notes.length; i++) {\n            tempPitches.push(this._notes[i].pitch);\n        }\n        return tempPitches;\n    }\n    set pitches(tempPitches) {\n        this._notes = [];\n        for (let i = 0; i < tempPitches.length; i++) {\n            let addNote;\n            if (typeof (tempPitches[i]) === 'string') {\n                addNote = new note.Note(tempPitches[i]);\n            } else if (tempPitches[i].isClassOrSubclass('Pitch')) {\n                addNote = new note.Note();\n                addNote.pitch = tempPitches[i];\n            } else if (tempPitches[i].isClassOrSubclass('Note')) {\n                addNote = tempPitches[i];\n            } else {\n                console.warn('bad pitch', tempPitches[i]);\n                throw new Music21Exception('Cannot add pitch from ' + tempPitches[i]);\n            }\n            this._notes.push(addNote);\n        }\n    }\n    setStemDirectionFromClef(clef) {\n        if (clef === undefined) {\n            return this;\n        } else {\n            const midLine = clef.lowestLine + 4;\n            // console.log(midLine, 'midLine');\n            let maxDNNfromCenter = 0;\n            const pA = this.pitches;\n            for (let i = 0; i < this.pitches.length; i++) {\n                const p = pA[i];\n                const DNNfromCenter = p.diatonicNoteNum - midLine;\n                // >= not > so that the highest pitch wins the tie and thus stem down.\n                if (Math.abs(DNNfromCenter) >= Math.abs(maxDNNfromCenter)) {\n                    maxDNNfromCenter = DNNfromCenter;\n                }\n            }\n            if (maxDNNfromCenter >= 0) {\n                this.stemDirection = 'down';\n            } else {\n                this.stemDirection = 'up';\n            }\n            return this;\n        }\n    }\n    /**\n     * Adds a note to the chord, sorting the note array\n     *\n     * @memberof music21.chord.Chord\n     * @param {string|music21.note.Note|music21.pitch.Pitch} noteObj - the Note or Pitch to be added or a string defining a pitch.\n     * @returns {music21.chord.Chord} the original chord.\n     */\n    add(noteObj) {\n        // takes in either a note or a pitch\n        if (typeof (noteObj) === 'string') {\n            noteObj = new note.Note(noteObj);\n        } else if (noteObj.isClassOrSubclass('Pitch')) {\n            const pitchObj = noteObj;\n            const noteObj2 = new note.Note();\n            noteObj2.pitch = pitchObj;\n            noteObj = noteObj2;\n        }\n        this._notes.push(noteObj);\n        // inefficient because sorts after each add, but safe and #(p) is small\n        this._notes.sort((a, b) => a.pitch.ps - b.pitch.ps);\n        return this;\n    }\n    /**\n     * Removes any pitches that appear more than once (in any octave), removing the higher ones, and returns a new Chord.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {music21.chord.Chord} A new Chord object with duplicate pitches removed.\n     */\n    removeDuplicatePitches() {\n        const stepsFound = [];\n        const nonDuplicatingPitches = [];\n        const pitches = this.pitches;\n        for (let i = 0; i < pitches.length; i++) {\n            const p = pitches[i];\n            if (stepsFound.indexOf(p.step) === -1) {\n                stepsFound.push(p.step);\n                nonDuplicatingPitches.push(p);\n            }\n        }\n        const closedChord = new chord.Chord(nonDuplicatingPitches);\n        return closedChord;\n    }\n    /**\n     * Finds the Root of the chord.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {music21.pitch.Pitch} the root of the chord.\n     */\n    root() {\n        const closedChord = this.removeDuplicatePitches();\n        /* var chordBass = closedChord.bass(); */\n        const closedPitches = closedChord.pitches;\n        if (closedPitches.length === 0) {\n            throw new Music21Exception('No notes in Chord!');\n        } else if (closedPitches.length === 1) {\n            return this.pitches[0];\n        }\n        const indexOfPitchesWithPerfectlyStackedThirds = [];\n        const testSteps = [3, 5, 7, 2, 4, 6];\n        for (let i = 0; i < closedPitches.length; i++) {\n            const p = closedPitches[i];\n            const currentListOfThirds = [];\n            for (let tsIndex = 0; tsIndex < testSteps.length; tsIndex++) {\n                const chordStepPitch = closedChord.getChordStep(testSteps[tsIndex], p);\n                if (chordStepPitch !== undefined) {\n                    // console.log(p.name + \" \" + testSteps[tsIndex].toString() + \" \" + chordStepPitch.name);\n                    currentListOfThirds.push(true);\n                } else {\n                    currentListOfThirds.push(false);\n                }\n            }\n            // console.log(currentListOfThirds);\n            let hasFalse = false;\n            for (let j = 0; j < closedPitches.length - 1; j++) {\n                if (currentListOfThirds[j] === false) {\n                    hasFalse = true;\n                }\n            }\n            if (hasFalse === false) {\n                indexOfPitchesWithPerfectlyStackedThirds.push(i);\n                return closedChord.pitches[i]; // should do more, but fine...\n                // should test rootedness function, etc. 13ths. etc.\n            }\n        }\n        return closedChord.pitches[0]; // fallback, just return the bass...\n    }\n    /**\n     * Returns the number of semitones above the root that a given chordstep is.\n     *\n     * For instance, in a G dominant 7th chord (G, B, D, F), would\n     * return 4 for chordStep=3, since the third of the chord (B) is four semitones above G.\n     *\n     * @memberof music21.chord.Chord\n     * @param {number} chordStep - the step to find, e.g., 1, 2, 3, etc.\n     * @param {music21.pitch.Pitch} [testRoot] - the pitch to temporarily consider the root.\n     * @returns {number|undefined} Number of semitones above the root for this chord step or undefined if no pitch matches that chord step.\n     */\n    semitonesFromChordStep(chordStep, testRoot) {\n        if (testRoot === undefined) {\n            testRoot = this.root();\n        }\n        const tempChordStep = this.getChordStep(chordStep, testRoot);\n        if (tempChordStep === undefined) {\n            return undefined;\n        } else {\n            let semitones = (tempChordStep.ps - testRoot.ps) % 12;\n            if (semitones < 0) {\n                semitones += 12;\n            }\n            return semitones;\n        }\n    }\n    /**\n     * Gets the lowest note (based on .ps not name) in the chord.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {music21.pitch.Pitch} bass pitch\n     */\n    bass() {\n        let lowest;\n        const pitches = this.pitches;\n        for (let i = 0; i < pitches.length; i++) {\n            const p = pitches[i];\n            if (lowest === undefined) {\n                lowest = p;\n            } else if (p.ps < lowest.ps) {\n                lowest = p;\n            }\n        }\n        return lowest;\n    }\n    /**\n     * Counts the number of non-duplicate pitch MIDI Numbers in the chord.\n     *\n     * Call after \"closedPosition()\" to get Forte style cardinality disregarding octave.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {number}\n     */\n    cardinality() {\n        const uniqueChord = this.removeDuplicatePitches();\n        return uniqueChord.pitches.length;\n    }\n    /**\n    *\n    * @memberof music21.chord.Chord\n    * @returns {Boolean}\n    */\n    isMajorTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 4 && fifthST === 7) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n    *\n    * @memberof music21.chord.Chord\n    * @returns {Boolean}\n    */\n    isMinorTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 3 && fifthST === 7) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Returns the inversion of the chord as a number (root-position = 0)\n     *\n     * Unlike music21 version, cannot set the inversion, yet.\n     *\n     * TODO: add.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {number}\n     */\n    inversion() {\n        const bass = this.bass();\n        const root = this.root();\n        const chordStepsToInversions = [1, 6, 4, 2, 7, 5, 3];\n        for (let i = 0; i < chordStepsToInversions.length; i++) {\n            const testNote = this.getChordStep(chordStepsToInversions[i], bass);\n            if (testNote !== undefined && testNote.name === root.name) {\n                return i;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * @memberof music21.chord.Chord\n     * @param {object} options - a dictionary of options `{clef: {@music21.clef.Clef} }` is especially important\n     * @returns {Vex.Flow.StaveNote}\n     */\n    vexflowNote(options) {\n        const clef = options.clef;\n\n        const pitchKeys = [];\n        for (let i = 0; i < this._notes.length; i++) {\n            pitchKeys.push(this._notes[i].pitch.vexflowName(clef));\n        }\n        const vfn = new Vex.Flow.StaveNote({ keys: pitchKeys,\n                                            duration: this.duration.vexflowDuration });\n        this.vexflowAccidentalsAndDisplay(vfn, options); // clean up stuff...\n        for (let i = 0; i < this._notes.length; i++) {\n            const tn = this._notes[i];\n            if (tn.pitch.accidental !== undefined) {\n                if (tn.pitch.accidental.vexflowModifier !== 'n'\n                        && tn.pitch.accidental.displayStatus !== false) {\n                    vfn.addAccidental(i, new Vex.Flow.Accidental(tn.pitch.accidental.vexflowModifier));\n                } else if (tn.pitch.accidental.displayType === 'always'\n                        || tn.pitch.accidental.displayStatus === true) {\n                    vfn.addAccidental(i, new Vex.Flow.Accidental(tn.pitch.accidental.vexflowModifier));\n                }\n            }\n        }\n        this.activeVexflowNote = vfn;\n        return vfn;\n    }\n    /**\n     * Returns the Pitch object that is a Generic interval (2, 3, 4, etc., but not 9, 10, etc.) above\n     * the `.root()`\n     *\n     * In case there is more that one note with that designation (e.g., `[A-C-C#-E].getChordStep(3)`)\n     * the first one in `.pitches` is returned.\n     *\n     * @memberof music21.chord.Chord\n     * @param {Int} chordStep a positive integer representing the chord step\n     * @param {music21.pitch.Pitch} [testRoot] - the Pitch to use as a temporary root\n     * @returns {music21.pitch.Pitch|undefined}\n     */\n    getChordStep(chordStep, testRoot) {\n        if (testRoot === undefined) {\n            testRoot = this.root();\n        }\n        if (chordStep >= 8) {\n            chordStep %= 7;\n        }\n        const thisPitches = this.pitches;\n        const testRootDNN = testRoot.diatonicNoteNum;\n        for (let i = 0; i < thisPitches.length; i++) {\n            const thisPitch = thisPitches[i];\n            let thisInterval = (thisPitch.diatonicNoteNum - testRootDNN + 1) % 7; // fast cludge\n            if (thisInterval <= 0) {\n                thisInterval += 7;\n            }\n            if (thisInterval === chordStep) {\n                return thisPitch;\n            }\n        }\n        return undefined;\n    }\n}\nchord.Chord = Chord;\n\nchord.chordDefinitions = {\n    'major': ['M3', 'm3'],\n    'minor': ['m3', 'M3'],\n    'diminished': ['m3', 'm3'],\n    'augmented': ['M3', 'M3'],\n    'major-seventh': ['M3', 'm3', 'M3'],\n    'dominant-seventh': ['M3', 'm3', 'm3'],\n    'minor-seventh': ['m3', 'M3', 'm3'],\n    'diminished-seventh': ['m3', 'm3', 'm3'],\n    'half-diminished-seventh': ['m3', 'm3', 'M3'],\n};\n\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/clef -- Clef objects\n *\n * note: only defines a single Clef object for now\n *\n * Copyright (c) 2013-14, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–14, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base';\nimport { pitch } from './pitch';\n\n/**\n * Clef module, see {@link music21.clef} for namespace\n *\n * @exports music21/clef\n */\n/**\n * Clef related objects and properties\n *\n * @namespace music21.clef\n * @memberof music21\n * @requires music21/base\n * @requires music21/pitch\n */\nexport const clef = {};\n/*  music21.Clef\n\tmust be defined before Stream since Stream subclasses call new music21.Clef...\n */\n// TODO: Fix to newest Vexflow format...\nclef.lowestLines = {\n    'treble': 31,\n    'soprano': 29,\n    'mezzo-soprano': 27,\n    'alto': 25,\n    'tenor': 23,\n    'bass': 19,\n    'percussion': 31,\n};\n/**\n * Clefname can be one of\n * \"treble\", \"bass\", \"soprano\", \"mezzo-soprano\", \"alto\", \"tenor\", \"percussion\"\n *\n * @class Clef\n * @memberof music21.clef\n * @extends music21.base.Music21Object\n * @param {string} name - clef name\n * @param {Int} [octaveChange=0] - ottava\n * @property {string|undefined} name\n * @property {Int} lowestLine - diatonicNoteNum (C4 = 29) for the lowest line (in a five-line staff)\n * @property {Int} lowestLineTrebleOffset - difference between the first line of this staff and the first line in treble clef\n * @property {Int} octaveChange\n */\nexport class Clef extends base.Music21Object {\n    constructor(name, octaveChange) {\n        super();\n        this.classes.push('Clef');\n        if (name !== undefined) {\n            name = name.toLowerCase();\n            this.name = name;\n            this.lowestLine = clef.lowestLines[name];\n            this.lowestLineTrebleOffset = clef.lowestLines.treble - this.lowestLine;\n        } else {\n            this.name = undefined;\n            this.lowestLine = clef.lowestLines.treble;\n            this.lowestLineTrebleOffset = 0;\n        }\n        if (octaveChange === undefined) {\n            this.octaveChange = 0;\n        } else {\n            this.octaveChange = octaveChange;\n            this.lowestLine += (7 * octaveChange);\n            this.lowestLineTrebleOffset -= 7 * octaveChange;\n        }\n    }\n    /**\n     * returns a new pitch object if the clef name is not Treble\n     * designed so it would look the same as it would in treble clef.\n     * for instance, bass-clef 2nd-space C# becomes treble clef 2nd-space A#\n     * used for Vex.Flow which requires all pitches to be input as if they\n     * are in treble clef.\n     *\n     * @memberof music21.clef.Clef\n     * @param {music21.pitch.Pitch} p\n     * @returns {music21.pitch.Pitch} new pitch\n     */\n    convertPitchToTreble(p) {\n        if (this.lowestLine === undefined) {\n            console.log('no first line defined for clef', this.name, this);\n            return p; // error\n        }\n        const lowestLineDifference = this.lowestLineTrebleOffset;\n        const tempPitch = new pitch.Pitch(p.step);\n        tempPitch.octave = p.octave;\n        tempPitch.diatonicNoteNum += lowestLineDifference;\n        tempPitch.accidental = p.accidental;\n        return tempPitch;\n    }\n}\n\nclef.Clef = Clef;\n\n/**\n * A TrebleClef (same as new music21.clef.Clef('treble')\n *\n * @class TrebleClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class TrebleClef extends Clef {\n    constructor() {\n        super('treble');\n        this.classes.push('TrebleClef');\n    }\n}\nclef.TrebleClef = TrebleClef;\n/**\n * A TrebleClef down an octave (same as new music21.clef.Clef('treble', -1)\n *\n * Unlike music21p, currently not a subclass of TrebleClef.\n *\n * @class Treble8vbClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class Treble8vbClef extends Clef {\n    constructor() {\n        super('treble', -1);\n        this.classes.push('Treble8vbClef');\n    }\n}\nclef.Treble8vbClef = Treble8vbClef;\n\n/**\n * A TrebleClef up an octave (same as new music21.clef.Clef('treble', 1)\n *\n * @class Treble8vaClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class Treble8vaClef extends Clef {\n    constructor() {\n        super('treble', 1);\n        this.classes.push('Treble8vaClef');\n    }\n}\nclef.Treble8vaClef = Treble8vaClef;\n\n/**\n * A BassClef (same as new music21.clef.Clef('bass')\n *\n * @class BassClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class BassClef extends Clef {\n    constructor() {\n        super('bass');\n        this.classes.push('BassClef');\n    }\n}\nclef.BassClef = BassClef;\n\n/**\n * An AltoClef (same as new music21.clef.Clef('alto')\n *\n * @class AltoClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class AltoClef extends Clef {\n    constructor() {\n        super('alto');\n        this.classes.push('AltoClef');\n    }\n}\nclef.AltoClef = AltoClef;\n\n/**\n * A Tenor Clef (same as new music21.clef.Clef('tenor')\n *\n * @class TenorClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class TenorClef extends Clef {\n    constructor() {\n        super('tenor');\n        this.classes.push('TenorClef');\n    }\n}\nclef.TenorClef = TenorClef;\n/**\n * A Soprano Clef (same as new music21.clef.Clef('soprano')\n *\n * @class SopranoClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class SopranoClef extends Clef {\n    constructor() {\n        super('soprano');\n        this.classes.push('SopranoClef');\n    }\n}\nclef.SopranoClef = SopranoClef;\n\n\n/**\n * A Mezzo-Soprano Clef (same as new music21.clef.Clef('mezzo-soprano')\n *\n * @class MezzoSopranoClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class MezzoSopranoClef extends Clef {\n    constructor() {\n        super('mezzo-soprano');\n        this.classes.push('MezzoSopranoClef');\n    }\n}\nclef.MezzoSopranoClef = MezzoSopranoClef;\n\n/**\n * A Percussion Clef (same as new music21.clef.Clef('percussion')\n *\n * First line is treated as if it's treble clef. Not available as \"bestClef\"\n *\n * @class PercussionClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class PercussionClef extends Clef {\n    constructor() {\n        super('percussion');\n        this.classes.push('PercussionClef');\n    }\n}\nclef.PercussionClef = PercussionClef;\n\n/**\n * Looks at the pitches in a Stream and returns the best clef\n * of Treble and Bass\n *\n * @function music21.clef.bestClef\n * @memberof music21.clef\n * @param {music21.stream.Stream} st\n * @returns {music21.clef.Clef}\n */\nclef.bestClef = function bestClef(st) {\n    // console.log('calling flat on stream: ', st.elements.length, st.classes[st.classes.length - 1]);\n    const stFlat = st.flat;\n    let totalNotes = 0;\n    let totalPitch = 0.0;\n    for (let i = 0; i < stFlat.length; i++) {\n        const el = stFlat.get(i);\n        if (el.pitch !== undefined) {\n            totalNotes += 1;\n            totalPitch += el.pitch.diatonicNoteNum;\n        } else if (el.pitches !== undefined) {\n            for (let j = 0; j < el.pitches.length; j++) {\n                totalNotes += 1;\n                totalPitch += el.pitches[j].diatonicNoteNum;\n            }\n        }\n    }\n    let averageHeight;\n    if (totalNotes === 0) {\n        averageHeight = 29;\n    } else {\n        averageHeight = totalPitch / totalNotes;\n    }\n    // console.log('bestClef: average height', averageHeight);\n    if (averageHeight > 28) {    // 29 = c4\n        return new clef.TrebleClef();\n    } else {\n        return new clef.BassClef();\n    }\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/dynamics -- Dynamics\n *\n * note that Vex.Flow does not support Dynamics yet and we do not support MIDI dynamics,\n *  so currently of limited value...\n *\n * Copyright (c) 2013-14, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–14, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base';\n\n/**\n * dynamics Module. See {@link music21.dynamics} for namespace\n *\n * @exports music21/dynamics\n */\n/**\n * Dynamics related objects.\n *\n * N.B. Firefox completely ignores dyanmics on playback!\n *\n * Currently do not export to Vexflow.  :-(\n *\n * @namespace music21.dynamics\n * @memberof music21\n * @requires music21/base\n */\nexport const dynamics = {};\ndynamics.shortNames = ['pppppp', 'ppppp', 'pppp', 'ppp', 'pp', 'p', 'mp',\n                       'mf', 'f', 'fp', 'sf', 'ff', 'fff', 'ffff', 'fffff', 'ffffff'];\ndynamics.longNames = { 'ppp': ['pianississimo'],\n        'pp': ['pianissimo'],\n        'p': ['piano'],\n        'mp': ['mezzopiano'],\n        'mf': ['mezzoforte'],\n        'f': ['forte'],\n        'fp': ['fortepiano'],\n        'sf': ['sforzando'],\n        'ff': ['fortissimo'],\n        'fff': ['fortississimo'],\n};\ndynamics.englishNames = { 'ppp': ['extremely soft'],\n        'pp': ['very soft'],\n        'p': ['soft'],\n        'mp': ['moderately soft'],\n        'mf': ['moderately loud'],\n        'f': ['loud'],\n        'ff': ['very loud'],\n        'fff': ['extremely loud'],\n};\ndynamics.dynamicStrToScalar = {\n    'None': [0.5], // default value\n    'n': [0.0],\n    'pppp': [0.1],\n    'ppp': [0.15],\n    'pp': [0.25],\n    'p': [0.35],\n    'mp': [0.45],\n    'mf': [0.55],\n    'f': [0.7],\n    'fp': [0.75],\n    'sf': [0.85],\n    'ff': [0.85],\n    'fff': [0.9],\n    'ffff': [0.95],\n};\n\n/**\n * A representation of a dynamic.\n *\n * @class Dynamic\n * @memberof music21.dynamics\n * @extends music21.base.Music21Object\n * @param {number|string} value - either a number between 0 and 1 or a dynamic mark such as \"ff\" or \"mp\"\n * @property {string|undefined} value - a name such as \"pp\" etc.\n * @property {string|undefined} longName - a longer name such as \"pianissimo\"\n * @property {string|undefined} englishName - a name such as \"very soft\"\n * @property {number} volumeScalar - a number between 0 and 1.\n */\nexport class Dynamic extends base.Music21Object {\n    constructor(value) {\n        super();\n        this.classes.push('Dynamic');\n        this._value = undefined;\n        this._volumeScalar = undefined;\n        this.longName = undefined;\n        this.englishName = undefined;\n        this.value = value;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (typeof (value) !== 'string') {\n            // assume number\n            this._volumeScalar = value;\n            if (value <= 0) {\n                this._value = 'n';\n            } else if (value < 0.11) {\n                this._value = 'pppp';\n            } else if (value < 0.16) {\n                this._value = 'ppp';\n            } else if (value < 0.26) {\n                this._value = 'pp';\n            } else if (value < 0.36) {\n                this._value = 'p';\n            } else if (value < 0.5) {\n                this._value = 'mp';\n            } else if (value < 0.65) {\n                this._value = 'mf';\n            } else if (value < 0.8) {\n                this._value = 'f';\n            } else if (value < 0.9) {\n                this._value = 'ff';\n            } else {\n                this._value = 'fff';\n            }\n        } else {\n            this._value = value;\n            this._volumeScalar = undefined;\n        }\n        if (this._value in dynamics.longNames) {\n            this.longName = dynamics.longNames[this._value][0];\n        } else {\n            this.longName = undefined;\n        }\n        if (this._value in dynamics.englishNames) {\n            this.englishName = dynamics.englishNames[this._value][0];\n        } else {\n            this.englishName = undefined;\n        }\n    }\n    get volumeScalar() {\n        if (this._volumeScalar !== undefined) {\n            return this._volumeScalar;\n        } else if (this._value in dynamics.dynamicStrToScalar) {\n            return dynamics.dynamicStrToScalar[this._value][0];\n        } else {\n            return undefined;\n        }\n    }\n    set volumeScalar(value) {\n        if ((typeof (value) === 'number')\n                && (value <= 1)\n                && (value >= 0)) {\n            this._volumeScalar = value;\n        }\n    }\n}\ndynamics.Dynamic = Dynamic;\n","import * as Vex from 'vexflow';\n\nimport { base } from './base';\n/**\n * Expressions module.  See {@link music21.expressions}\n *\n * @exports music21/expressions\n */\n/**\n * Expressions can be note attached (`music21.note.Note.expressions[]`) or floating...\n *\n * @namespace music21.expressions\n * @memberof music21\n * @requires music21/expressions\n */\nexport const expressions = {};\n\n/**\n * Expressions can be note attached (`music21.note.Note.expressions[]`) or floating...\n *\n * @class Expression\n * @memberof music21.expressions\n * @extends music21.base.Music21Object\n * @property {string} name\n * @property {string} vexflowModifier\n * @property {Int} setPosition\n */\nexport class Expression extends base.Music21Object {\n    constructor() {\n        super();\n        this.classes.push('Expression');\n        this.name = 'expression';\n        this.vexflowModifier = '';\n        this.setPosition = undefined;\n    }\n    /**\n     * Renders this Expression as a Vex.Flow.Articulation\n     *\n     * (this is not right for all cases)\n     *\n     * @memberof music21.expressions.Expression\n     * @returns {Vex.Flow.Articulation}\n     */\n    vexflow() {\n        const vfe =  new Vex.Flow.Articulation(this.vexflowModifier);\n        if (this.setPosition) {\n            vfe.setPosition(this.setPosition);\n        }\n        return vfe;\n    }\n}\nexpressions.Expression = Expression;\n\n/**\n * A fermata...\n *\n * @class Fermata\n * @memberof music21.expressions\n * @extends music21.expressions.Expression\n */\nexport class Fermata extends Expression {\n    constructor() {\n        super();\n        this.classes.push('Fermata');\n        this.name = 'fermata';\n        this.vexflowModifier = 'a@a';\n        this.setPosition = 3;\n    }\n}\nexpressions.Fermata = Fermata;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/fromPython -- Conversion from music21p jsonpickle streams\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n * usage:\n *\n * in python:\n *\n * s = corpus.parse('bwv66.6')\n * stringRepresentingM21JsonPickle = s.freezeStream('jsonpickle')\n *\n * in js:\n *\n * pyConv = new music21.fromPython.Converter();\n * s = pyConv.run(stringRepresentingM21JsonPickle);\n *\n *\n */\nimport * as jsonpickle from 'jsonpickle';\n\nconst jp = jsonpickle;\n/**\n * fromPython module -- see {@link music21.fromPython}\n */\nconst unpickler = jp.unpickler;\n\n/**\n * Converter for taking a Python-encoded jsonpickle music21p stream\n * and loading it into music21j\n *\n * Very very alpha.  See music21(p).vexflow modules to see how it works.\n *\n * Requires Cuthbert's jsonpickle.js port (included in music21j)\n *\n * @namespace music21.fromPython\n * @extends music21\n * @requires jsonpickle\n */\nexport const fromPython = {};\n\n/**\n *\n * @class Converter\n * @memberof music21.fromPython\n * @property {boolean} debug\n * @property {Array<string>} knownUnparsables - list of classes that cannot be parsed\n * @property {object} handlers - object mapping string names of classes to a set of function calls to perform when restoring or post-restoring. (too complicated to explain; read the code)\n */\nexport class Converter {\n    constructor() {\n        this.debug = true;\n        this.knownUnparsables = ['music21.spanner.Line',\n                                 'music21.instrument.Instrument',\n                                 'music21.layout.StaffGroup',\n                                 'music21.layout.StaffLayout',\n                                 'music21.layout.SystemLayout',\n                                 'music21.layout.PageLayout',\n                                 'music21.expressions.TextExpression',\n                                 'music21.bar.Barline', // Soon...\n                                 'music21.tempo.MetronomeMark', // should be possible\n                                 'music21.metadata.Metadata', // Soon...\n                                 ];\n        this.handlers = {\n            'music21.duration.Duration': {\n                post_restore: (d) => {\n                    d.quarterLength = d._qtrLength;\n                    return d;\n                },\n            },\n            'music21.meter.TimeSignature': {\n                post_restore: (ts) => {\n                    ts._numerator = ts.displaySequence._numerator;\n                    ts._denominator = ts.displaySequence._denominator;\n                    return ts;\n                },\n            },\n            'music21.stream.Part': {\n                post_restore: (p) => {\n                    this.currentPart = p;\n                    this.lastClef = undefined;\n                    this.lastKeySignature = undefined;\n                    this.lastTimeSignature = undefined;\n                    this.streamPostRestore(p);\n                    return p;\n                },\n            },\n                // TODO: all inherit somehow, through _classes or better, prototype...\n            'music21.stream.Score': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n            'music21.stream.Stream': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n            'music21.stream.Measure': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n            'music21.stream.Voice': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n        };\n        this.currentPart = undefined;\n        this.lastClef = undefined;\n        this.lastKeySignature = undefined;\n        this.lastTimeSignature = undefined;\n    }\n\n    /**\n     * Fixes up some references that cannot be unpacked from jsonpickle.\n     *\n     * @method music21.fromPython.Converter#streamPostRestore\n     * @memberof music21.fromPython.Converter\n     * @param {music21.stream.Stream} s - stream after unpacking from jsonpickle\n     * @returns {music21.stream.Stream}\n     */\n    streamPostRestore(s) {\n        const st = s._storedElementOffsetTuples;\n\n        s._clef = this.lastClef;\n        s._keySignature = this.lastKeySignature;\n        s._timeSignature = this.lastTimeSignature;\n        for (let i = 0; i < st.length; i++) {\n            const el = st[i][0];\n            el.offset = st[i][1];\n            let classList = el.classes;\n            if (classList === undefined) {\n                console.warn('M21object without classes: ', el);\n                console.warn('Javascript classes are: ', el._py_class);\n                classList = [];\n            }\n            let streamPart = this.currentPart;\n            if (streamPart === undefined) {\n                streamPart = s; // possibly a Stream constructed from .measures()\n            }\n\n            let appendEl = true;\n            let insertAtStart = false;\n\n            for (let j = 0; j < classList.length; j++) {\n                const thisClass = classList[j];\n                for (let kn = 0; kn < this.knownUnparsables.length; kn++) {\n                    const unparsable = this.knownUnparsables[kn];\n                    if (unparsable.indexOf(thisClass) !== -1) {\n                        appendEl = false;\n                    }\n                }\n                if (thisClass === 'TimeSignature') {\n                    // console.log(\"Got timeSignature\", streamPart, newM21pObj, storedElement);\n                    s._timeSignature = el;\n                    this.lastTimeSignature = el;\n                    if (streamPart !== undefined && streamPart.timeSignature === undefined) {\n                        streamPart.timeSignature = el;\n                    }\n                    appendEl = false;\n                } else if (thisClass === 'Clef') {\n                    s._clef = el;\n                    this.lastClef = el;\n                    if (streamPart !== undefined && streamPart.clef === undefined) {\n                        streamPart.clef = el;\n                    }\n                    appendEl = false;\n                } else if (thisClass === 'KeySignature') {\n                    s._keySignature = el;\n                    this.lastKeySignature = el;\n                    if (streamPart !== undefined && streamPart.keySignature === undefined) {\n                        streamPart.keySignature = el;\n                    }\n                    appendEl = false;\n                } else if (thisClass === 'Part') {\n                    appendEl = false;\n                    insertAtStart = true;\n                }\n            }\n\n            if (appendEl) {\n                s.append(el); // all but clef, ts, ks\n            } else if (insertAtStart) {\n                s.insert(0, el); // Part\n            }\n        }\n        return s;\n    }\n\n    /**\n     * Run the main decoder\n     *\n     * @method music21.fromPython.Converter#run\n     * @memberof music21.fromPython.Converter\n     * @param {string} jss - stream encoded as JSON\n     * @returns {music21.stream.Stream}\n     */\n    run(jss) {\n        const outStruct = unpickler.decode(jss, this.handlers);\n        return outStruct.stream;\n    }\n}\nfromPython.Converter = Converter;\n\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/instrument -- instrument objects\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base';\n\n/**\n * Instrument module, see {@link music21.instrument}\n *\n * @exports music21/instrument\n */\n\n/**\n * Looking for the {@link music21.instrument.Instrument} object? :-)\n *\n * @namespace music21.instrument\n * @memberof music21\n * @requires music21/base\n */\nexport const instrument = {};\n\n/**\n * Represents an instrument.  instrumentNames are found in the ext/soundfonts directory\n *\n * See {@link music21.miditools} and esp. `loadSoundfont` for a way of loading soundfonts into\n * instruments.\n *\n * @class Instrument\n * @memberof music21.instrument\n * @param {string} instrumentName\n * @property {string|undefined} partId\n * @property {string|undefined} partName\n * @property {string|undefined} partAbbreviation\n * @property {string|undefined} instrumentId\n * @property {string|undefined} instrumentName\n * @property {string|undefined} instrumentAbbreviation\n * @property {Int|undefined} midiProgram\n * @property {Int|undefined} midiChannel\n * @property {Int|undefined} lowestNote\n * @property {Int|undefined} highestNote\n * @property {music21.interval.Interval|undefined} transposition\n * @property {Boolean} inGMPercMap=false\n * @property {string|undefined} soundfontFn\n * @property {string|undefined} oggSoundfont - url of oggSoundfont for this instrument\n * @property {string|undefined} mp3Soundfont - url of mp3Soundfont for this instrument\n */\nclass Instrument extends base.Music21Object {\n    constructor(instrumentName) {\n        super();\n        this.classSortOrder = -25;\n\n        this.partId = undefined;\n        this.partName = undefined;\n        this.partAbbreviation = undefined;\n\n        this.instrumentId = undefined;\n        this.instrumentName = undefined;\n        this.instrumentAbbreviation = undefined;\n        this.midiProgram = undefined;\n        this._midiChannel = undefined;\n\n        this.lowestNote = undefined;\n        this.highestNote = undefined;\n\n        this.transpostion = undefined;\n\n        this.inGMPercMap = false;\n        this.soundfontFn = undefined;\n\n        if (instrumentName !== undefined) {\n            instrument.find(instrumentName);\n        }\n    }\n    /**\n     * Assign an instrument to an unused midi channel.\n     *\n     * Will use the global list of used channels (`music21.instrument.Instrument.usedChannels`)\n     * if not given.  Assigns up to `music21.instrument.maxMidi` channels (16)\n     * Skips 10 unless this.inGMPercMap is true\n     *\n     * @memberof music21.instrument.Instrument\n     * @param {Array<Int>} [usedChannels]\n     * @returns {Number}\n     */\n    autoAssignMidiChannel(usedChannels) {\n        if (usedChannels === undefined) {\n            usedChannels = instrument.usedChannels;\n        }\n        let startChannel = 0;\n        if (this.inGMPercMap) {\n            startChannel = 10;\n        }\n        for (let ch = startChannel; ch < instrument.maxMidi; ch++) {\n            if (ch % 16 === 10 && this.inGMPercMap !== true) {\n                continue; // skip 10 / percussion.\n            }\n            if (usedChannels[ch] === undefined || usedChannels[ch] === this.midiProgram) {\n                usedChannels[ch] = this.midiProgram;\n                this.midiChannel = ch;\n                return ch;\n            }\n        }\n        // TODO: no channels! throw exception!\n        return undefined;\n    }\n    get oggSounfont() {\n        return this.soundfontFn + '-ogg.js';\n    }\n    get mp3Soundfont() {\n        return this.soundfontFn + '-mp3.js';\n    }\n    get midiChannel() {\n        if (this._midiChannel === undefined) {\n            this.autoAssignMidiChannel();\n        }\n        return this._midiChannel;\n    }\n    set midiChannel(ch) {\n        this._midiChannel = ch;\n    }\n}\ninstrument.Instrument = Instrument;\n\ninstrument.usedChannels = []; // differs from m21p -- stored midiProgram numbers\ninstrument.maxMidi = 16;\n\ninstrument.info = [\n                   { 'fn': 'acoustic_grand_piano', 'name': 'Acoustic Grand Piano', 'midiNumber': 0 },\n                   { 'fn': 'bright_acoustic_piano', 'name': 'Bright Acoustic Piano', 'midiNumber': 1 },\n                   { 'fn': 'electric_grand_piano', 'name': 'Electric Grand Piano', 'midiNumber': 2 },\n                   { 'fn': 'honkytonk_piano', 'name': 'Honky-tonk Piano', 'midiNumber': 3 },\n                   { 'fn': 'electric_piano_1', 'name': 'Electric Piano 1', 'midiNumber': 4 },\n                   { 'fn': 'electric_piano_2', 'name': 'Electric Piano 2', 'midiNumber': 5 },\n                   { 'fn': 'harpsichord', 'name': 'Harpsichord', 'midiNumber': 6 },\n                   { 'fn': 'clavinet', 'name': 'Clavinet', 'midiNumber': 7 },\n                   { 'fn': 'celesta', 'name': 'Celesta', 'midiNumber': 8 },\n                   { 'fn': 'glockenspiel', 'name': 'Glockenspiel', 'midiNumber': 9 },\n                   { 'fn': 'music_box', 'name': 'Music Box', 'midiNumber': 10 },\n                   { 'fn': 'vibraphone', 'name': 'Vibraphone', 'midiNumber': 11 },\n                   { 'fn': 'marimba', 'name': 'Marimba', 'midiNumber': 12 },\n                   { 'fn': 'xylophone', 'name': 'Xylophone', 'midiNumber': 13 },\n                   { 'fn': 'tubular_bells', 'name': 'Tubular Bells', 'midiNumber': 14 },\n                   { 'fn': 'dulcimer', 'name': 'Dulcimer', 'midiNumber': 15 },\n                   { 'fn': 'drawbar_organ', 'name': 'Drawbar Organ', 'midiNumber': 16 },\n                   { 'fn': 'percussive_organ', 'name': 'Percussive Organ', 'midiNumber': 17 },\n                   { 'fn': 'rock_organ', 'name': 'Rock Organ', 'midiNumber': 18 },\n                   { 'fn': 'church_organ', 'name': 'Church Organ', 'midiNumber': 19 },\n                   { 'fn': 'reed_organ', 'name': 'Reed Organ', 'midiNumber': 20 },\n                   { 'fn': 'accordion', 'name': 'Accordion', 'midiNumber': 21 },\n                   { 'fn': 'harmonica', 'name': 'Harmonica', 'midiNumber': 22 },\n                   { 'fn': 'tango_accordion', 'name': 'Tango Accordion', 'midiNumber': 23 },\n                   { 'fn': 'acoustic_guitar_nylon', 'name': 'Acoustic Guitar (nylon)', 'midiNumber': 24 },\n                   { 'fn': 'acoustic_guitar_steel', 'name': 'Acoustic Guitar (steel)', 'midiNumber': 25 },\n                   { 'fn': 'electric_guitar_jazz', 'name': 'Electric Guitar (jazz)', 'midiNumber': 26 },\n                   { 'fn': 'electric_guitar_clean', 'name': 'Electric Guitar (clean)', 'midiNumber': 27 },\n                   { 'fn': 'electric_guitar_muted', 'name': 'Electric Guitar (muted)', 'midiNumber': 28 },\n                   { 'fn': 'overdriven_guitar', 'name': 'Overdriven Guitar', 'midiNumber': 29 },\n                   { 'fn': 'distortion_guitar', 'name': 'Distortion Guitar', 'midiNumber': 30 },\n                   { 'fn': 'guitar_harmonics', 'name': 'Guitar Harmonics', 'midiNumber': 31 },\n                   { 'fn': 'acoustic_bass', 'name': 'Acoustic Bass', 'midiNumber': 32 },\n                   { 'fn': 'electric_bass_finger', 'name': 'Electric Bass (finger)', 'midiNumber': 33 },\n                   { 'fn': 'electric_bass_pick', 'name': 'Electric Bass (pick)', 'midiNumber': 34 },\n                   { 'fn': 'fretless_bass', 'name': 'Fretless Bass', 'midiNumber': 35 },\n                   { 'fn': 'slap_bass_1', 'name': 'Slap Bass 1', 'midiNumber': 36 },\n                   { 'fn': 'slap_bass_2', 'name': 'Slap Bass 2', 'midiNumber': 37 },\n                   { 'fn': 'synth_bass_1', 'name': 'Synth Bass 1', 'midiNumber': 38 },\n                   { 'fn': 'synth_bass_2', 'name': 'Synth Bass 2', 'midiNumber': 39 },\n                   { 'fn': 'violin', 'name': 'Violin', 'midiNumber': 40 },\n                   { 'fn': 'viola', 'name': 'Viola', 'midiNumber': 41 },\n                   { 'fn': 'cello', 'name': 'Cello', 'midiNumber': 42 },\n                   { 'fn': 'contrabass', 'name': 'Contrabass', 'midiNumber': 43 },\n                   { 'fn': 'tremolo_strings', 'name': 'Tremolo Strings', 'midiNumber': 44 },\n                   { 'fn': 'pizzicato_strings', 'name': 'Pizzicato Strings', 'midiNumber': 45 },\n                   { 'fn': 'orchestral_harp', 'name': 'Orchestral Harp', 'midiNumber': 46 },\n                   { 'fn': 'timpani', 'name': 'Timpani', 'midiNumber': 47 },\n                   { 'fn': 'string_ensemble_1', 'name': 'String Ensemble 1', 'midiNumber': 48 },\n                   { 'fn': 'string_ensemble_2', 'name': 'String Ensemble 2', 'midiNumber': 49 },\n                   { 'fn': 'synth_strings_1', 'name': 'Synth Strings 1', 'midiNumber': 50 },\n                   { 'fn': 'synth_strings_2', 'name': 'Synth Strings 2', 'midiNumber': 51 },\n                   { 'fn': 'choir_aahs', 'name': 'Choir Aahs', 'midiNumber': 52 },\n                   { 'fn': 'voice_oohs', 'name': 'Voice Oohs', 'midiNumber': 53 },\n                   { 'fn': 'synth_choir', 'name': 'Synth Choir', 'midiNumber': 54 },\n                   { 'fn': 'orchestra_hit', 'name': 'Orchestra Hit', 'midiNumber': 55 },\n                   { 'fn': 'trumpet', 'name': 'Trumpet', 'midiNumber': 56 },\n                   { 'fn': 'trombone', 'name': 'Trombone', 'midiNumber': 57 },\n                   { 'fn': 'tuba', 'name': 'Tuba', 'midiNumber': 58 },\n                   { 'fn': 'muted_trumpet', 'name': 'Muted Trumpet', 'midiNumber': 59 },\n                   { 'fn': 'french_horn', 'name': 'French Horn', 'midiNumber': 60 },\n                   { 'fn': 'brass_section', 'name': 'Brass Section', 'midiNumber': 61 },\n                   { 'fn': 'synth_brass_1', 'name': 'Synth Brass 1', 'midiNumber': 62 },\n                   { 'fn': 'synth_brass_2', 'name': 'Synth Brass 2', 'midiNumber': 63 },\n                   { 'fn': 'soprano_sax', 'name': 'Soprano Sax', 'midiNumber': 64 },\n                   { 'fn': 'alto_sax', 'name': 'Alto Sax', 'midiNumber': 65 },\n                   { 'fn': 'tenor_sax', 'name': 'Tenor Sax', 'midiNumber': 66 },\n                   { 'fn': 'baritone_sax', 'name': 'Baritone Sax', 'midiNumber': 67 },\n                   { 'fn': 'oboe', 'name': 'Oboe', 'midiNumber': 68 },\n                   { 'fn': 'english_horn', 'name': 'English Horn', 'midiNumber': 69 },\n                   { 'fn': 'bassoon', 'name': 'Bassoon', 'midiNumber': 70 },\n                   { 'fn': 'clarinet', 'name': 'Clarinet', 'midiNumber': 71 },\n                   { 'fn': 'piccolo', 'name': 'Piccolo', 'midiNumber': 72 },\n                   { 'fn': 'flute', 'name': 'Flute', 'midiNumber': 73 },\n                   { 'fn': 'recorder', 'name': 'Recorder', 'midiNumber': 74 },\n                   { 'fn': 'pan_flute', 'name': 'Pan Flute', 'midiNumber': 75 },\n                   { 'fn': 'blown_bottle', 'name': 'Blown bottle', 'midiNumber': 76 },\n                   { 'fn': 'shakuhachi', 'name': 'Shakuhachi', 'midiNumber': 77 },\n                   { 'fn': 'whistle', 'name': 'Whistle', 'midiNumber': 78 },\n                   { 'fn': 'ocarina', 'name': 'Ocarina', 'midiNumber': 79 },\n                   { 'fn': 'lead_1_square', 'name': 'Lead 1 (square)', 'midiNumber': 80 },\n                   { 'fn': 'lead_2_sawtooth', 'name': 'Lead 2 (sawtooth)', 'midiNumber': 81 },\n                   { 'fn': 'lead_3_calliope', 'name': 'Lead 3 (calliope)', 'midiNumber': 82 },\n                   { 'fn': 'lead_4_chiff', 'name': 'Lead 4 chiff', 'midiNumber': 83 },\n                   { 'fn': 'lead_5_charang', 'name': 'Lead 5 (charang)', 'midiNumber': 84 },\n                   { 'fn': 'lead_6_voice', 'name': 'Lead 6 (voice)', 'midiNumber': 85 },\n                   { 'fn': 'lead_7_fifths', 'name': 'Lead 7 (fifths)', 'midiNumber': 86 },\n                   { 'fn': 'lead_8_bass__lead', 'name': 'Lead 8 (bass + lead)', 'midiNumber': 87 },\n                   { 'fn': 'pad_1_new_age', 'name': 'Pad 1 (new age)', 'midiNumber': 88 },\n                   { 'fn': 'pad_2_warm', 'name': 'Pad 2 (warm)', 'midiNumber': 89 },\n                   { 'fn': 'pad_3_polysynth', 'name': 'Pad 3 (polysynth)', 'midiNumber': 90 },\n                   { 'fn': 'pad_4_choir', 'name': 'Pad 4 (choir)', 'midiNumber': 91 },\n                   { 'fn': 'pad_5_bowed', 'name': 'Pad 5 (bowed)', 'midiNumber': 92 },\n                   { 'fn': 'pad_6_metallic', 'name': 'Pad 6 (metallic)', 'midiNumber': 93 },\n                   { 'fn': 'pad_7_halo', 'name': 'Pad 7 (halo)', 'midiNumber': 94 },\n                   { 'fn': 'pad_8_sweep', 'name': 'Pad 8 (sweep)', 'midiNumber': 95 },\n                   { 'fn': 'fx_1_rain', 'name': 'FX 1 (rain)', 'midiNumber': 96 },\n                   { 'fn': 'fx_2_soundtrack', 'name': 'FX 2 (soundtrack)', 'midiNumber': 97 },\n                   { 'fn': 'fx_3_crystal', 'name': 'FX 3 (crystal)', 'midiNumber': 98 },\n                   { 'fn': 'fx_4_atmosphere', 'name': 'FX 4 (atmosphere)', 'midiNumber': 99 },\n                   { 'fn': 'fx_5_brightness', 'name': 'FX 5 (brightness)', 'midiNumber': 100 },\n                   { 'fn': 'fx_6_goblins', 'name': 'FX 6 (goblins)', 'midiNumber': 101 },\n                   { 'fn': 'fx_7_echoes', 'name': 'FX 7 (echoes)', 'midiNumber': 102 },\n                   { 'fn': 'fx_8_scifi', 'name': 'FX 8 (sci-fi)', 'midiNumber': 103 },\n                   { 'fn': 'sitar', 'name': 'Sitar', 'midiNumber': 104 },\n                   { 'fn': 'banjo', 'name': 'Banjo', 'midiNumber': 105 },\n                   { 'fn': 'shamisen', 'name': 'Shamisen', 'midiNumber': 106 },\n                   { 'fn': 'koto', 'name': 'Koto', 'midiNumber': 107 },\n                   { 'fn': 'kalimba', 'name': 'Kalimba', 'midiNumber': 108 },\n                   { 'fn': 'bagpipe', 'name': 'Bagpipe', 'midiNumber': 109 },\n                   { 'fn': 'fiddle', 'name': 'Fiddle', 'midiNumber': 110 },\n                   { 'fn': 'shanai', 'name': 'Shanai', 'midiNumber': 111 },\n                   { 'fn': 'tinkle_bell', 'name': 'Tinkle Bell', 'midiNumber': 112 },\n                   { 'fn': 'agogo', 'name': 'Agogo', 'midiNumber': 113 },\n                   { 'fn': 'steel_drums', 'name': 'Steel Drums', 'midiNumber': 114 },\n                   { 'fn': 'woodblock', 'name': 'Woodblock', 'midiNumber': 115 },\n                   { 'fn': 'taiko_drum', 'name': 'Taiko Drum', 'midiNumber': 116 },\n                   { 'fn': 'melodic_tom', 'name': 'Melodic Tom', 'midiNumber': 117 },\n                   { 'fn': 'synth_drum', 'name': 'Synth Drum', 'midiNumber': 118 },\n                   { 'fn': 'reverse_cymbal', 'name': 'Reverse Cymbal', 'midiNumber': 119 },\n                   { 'fn': 'guitar_fret_noise', 'name': 'Guitar Fret Noise', 'midiNumber': 120 },\n                   { 'fn': 'breath_noise', 'name': 'Breath Noise', 'midiNumber': 121 },\n                   { 'fn': 'seashore', 'name': 'Seashore', 'midiNumber': 122 },\n                   { 'fn': 'bird_tweet', 'name': 'Bird Tweet', 'midiNumber': 123 },\n                   { 'fn': 'telephone_ring', 'name': 'Telephone Ring', 'midiNumber': 124 },\n                   { 'fn': 'helicopter', 'name': 'Helicopter', 'midiNumber': 125 },\n                   { 'fn': 'applause', 'name': 'Applause', 'midiNumber': 126 },\n                   { 'fn': 'gunshot', 'name': 'Gunshot', 'midiNumber': 127 }];\n\n/**\n * Find information for a given instrument (by filename or name)\n * and load it into an instrument object.\n *\n * @function music21.instrument.find\n * @memberof music21.instrument\n * @param {string} fn - name or filename of instrument\n * @param {music21.instrument.Instrument} [inst] - instrument object to load into\n * @returns {music21.instrument.Instrument|undefined}\n */\ninstrument.find = function instrument_find(fn, inst) {\n    if (inst === undefined) {\n        inst = new instrument.Instrument();\n    }\n    for (let i = 0; i < instrument.info.length; i++) {\n        const info = instrument.info[i];\n        if (info.fn === fn || info.name === fn) {\n            inst.soundfontFn = info.fn;\n            inst.instrumentName = info.name;\n            inst.midiProgram = info.midiNumber;\n            return inst;\n        }\n    }\n    return undefined;\n};\n\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/interval -- Interval routines\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006-16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { debug } from './debug';\nimport { prebase } from './prebase';\nimport { pitch } from './pitch';\n\n/**\n * interval module. See {@link music21.interval} for namespace\n *\n * @exports music21/interval\n */\n/**\n * Interval related objects\n *\n * @namespace music21.interval\n * @memberof music21\n * @requires music21/prebase\n * @requires music21/pitch\n */\nexport\tconst interval = {};\n\n/**\n * Interval Directions as an Object/map\n *\n * @memberof music21.interval\n * @example\n * if (music21.interval.IntervalDirections.OBLIQUE >\n *     music21.interval.IntervalDirections.ASCENDING ) {\n *    console.log(music21.interval.IntervalDirections.DESCENDING);\n * }\n *\n */\ninterval.IntervalDirections = {\n    DESCENDING: -1,\n    OBLIQUE: 0,\n    ASCENDING: 1,\n};\n\n/**\n * N.B. a dict in music21p -- the indexes here let IntervalDirections call them + 1\n *\n * @memberof music21.interval\n * @example\n * console.log(music21.interval.IntervalDirectionTerms[music21l.interval.IntervalDirections.OBLIQUE + 1])\n * // \"Oblique\"\n */\ninterval.IntervalDirectionTerms = ['Descending', 'Oblique', 'Ascending'];\n\n/**\n * ordinals for music terms...\n *\n * @memberof music21.interval\n * @example\n * for (var i = 1; // N.B. 0 = undefined\n *      i < music21.interval.MusicOrdinals.length;\n *      i++) {\n *     console.log(i, music21.interval.MusicOrdinals[i]);\n * }\n * // 1, Unison\n * // 2, Second\n * // 3, Third\n * // ...\n * // 8, Octave\n * // ...\n * // 15, Double Octave\n */\ninterval.MusicOrdinals = [\n    undefined, 'Unison', 'Second', 'Third', 'Fourth',\n    'Fifth', 'Sixth', 'Seventh', 'Octave',\n    'Ninth', 'Tenth', 'Eleventh', 'Twelfth',\n    'Thirteenth', 'Fourteenth', 'Double Octave',\n];\n\n/**\n * Represents an interval such as unison, second, etc.\n *\n * Properties are demonstrated below.\n *\n * @class GenericInterval\n * @memberof music21.interval\n * @param {Int} [gi=1] - generic interval (1 or higher, or -2 or lower)\n * @example\n * var gi = new music21.interval.GenericInterval(-14)\n * gi.value\n * // -14\n * gi.directed\n * // -14\n * gi.undirected\n * // 14\n * gi.direction == music21.interval.IntervalDirections.DESCENDING\n * // true\n * gi.isSkip\n * // true\n * gi.isStep\n * // false\n * gi.isDiatonicStep\n * // false  // augmented unisons are not diatonicSteps but can't tell yet..\n * gi.isUnison\n * // false\n * gi.simpleUndirected\n * // 7\n * gi.undirectedOctaves\n * // 1\n * gi.semiSimpleUndirected\n * // 7  -- semiSimple distinguishes between 8 and 1; that's all\n * gi.perfectable\n * // false\n * gi.niceName\n * // \"Fourteenth\"\n * gi.directedNiceName\n * // \"Descending Fourteenth\"\n * gi.simpleNiceName\n * // \"Seventh\"\n * gi.staffDistance\n * // -13\n * gi.mod7inversion\n * // 2  // sevenths invert to seconds\n *\n */\nexport class GenericInterval extends prebase.ProtoM21Object {\n    constructor(gi) {\n        super();\n        this.classes.push('GenericInterval');\n        if (gi === undefined) {\n            gi = 1;\n        }\n        this.value = gi; // todo: convertGeneric() from python\n        this.directed = this.value;\n        this.undirected = Math.abs(this.value);\n\n        if (this.directed === 1) {\n            this.direction = interval.IntervalDirections.OBLIQUE;\n        } else if (this.directed < 0) {\n            this.direction = interval.IntervalDirections.DESCENDING;\n        } else if (this.directed > 1) {\n            this.direction = interval.IntervalDirections.ASCENDING;\n        }\n        // else (raise exception)\n\n        if (this.undirected > 2) {\n            this.isSkip = true;\n        } else {\n            this.isSkip = false;\n        }\n\n        if (this.undirected === 2) {\n            this.isDiatonicStep = true;\n        } else {\n            this.isDiatonicStep = false;\n        }\n\n        this.isStep = this.isDiatonicStep;\n\n        if (this.undirected === 1) {\n            this.isUnison = true;\n        } else {\n            this.isUnison = false;\n        }\n\n        let tempSteps = this.undirected % 7;\n        let tempOctaves = parseInt(this.undirected / 7);\n        if (tempSteps === 0) {\n            tempOctaves -= 1;\n            tempSteps = 7;\n        }\n        this.simpleUndirected = tempSteps;\n        this.undirectedOctaves = tempOctaves;\n        if ((tempSteps === 1) && (tempOctaves >= 1)) {\n            this.semiSimpleUndirected = 8;\n        } else {\n            this.semiSimpleUndirected = this.simpleUndirected;\n        }\n\n        if (this.direction === interval.IntervalDirections.DESCENDING) {\n            this.octaves = -1 * tempOctaves;\n            if (tempSteps !== 1) {\n                this.simpleDirected = -1 * tempSteps;\n            } else {\n                this.simpleDirected = 1;  // no descending unisons...\n            }\n            this.semiSimpleDirected = -1 * this.semiSimpleUndirected;\n        } else {\n            this.octaves = tempOctaves;\n            this.simpleDirected = tempSteps;\n            this.semiSimpleDirected = this.semiSimpleUndirected;\n        }\n        if ((this.simpleUndirected === 1)\n                || (this.simpleUndirected === 4)\n                || (this.simpleUndirected === 5)) {\n            this.perfectable = true;\n        } else {\n            this.perfectable = false;\n        }\n\n        if (this.undirected < interval.MusicOrdinals.length) {\n            this.niceName = interval.MusicOrdinals[this.undirected];\n        } else {\n            this.niceName = this.undirected.toString();\n        }\n\n        this.simpleNiceName = interval.MusicOrdinals[this.simpleUndirected];\n        this.semiSimpleNiceName = interval.MusicOrdinals[this.semiSimpleUndirected];\n\n        if (Math.abs(this.directed) === 1) {\n            this.staffDistance = 0;\n        } else if (this.directed > 1) {\n            this.staffDistance = this.directed - 1;\n        } else if (this.directed < -1) {\n            this.staffDistance = this.directed + 1;\n        }\n        // else: raise IntervalException(\"Non-integer, -1, or 0 not permitted as a diatonic interval\")\n\n        // 2 -> 7; 3 -> 6; 8 -> 1 etc.\n        this.mod7inversion = 9 - this.semiSimpleUndirected;\n\n        if (this.direction === interval.IntervalDirections.DESCENDING) {\n            this.mod7 = this.mod7inversion;  // see chord.semitonesFromChordStep for usage...\n        } else {\n            this.mod7 = this.simpleDirected;\n        }\n    }\n\n    /**\n     * Returns a new GenericInterval which is the mod7inversion; 3rds (and 10ths etc.) to 6ths, etc.\n     *\n     * @memberof music21.interval.GenericInterval\n     * @returns {music21.interval.GenericInterval}\n     */\n    complement() {\n        return new interval.GenericInterval(this.mod7inversion);\n    }\n\n    /**\n     * Returns a new GenericInterval which has the opposite direction (descending becomes ascending, etc.)\n     *\n     * @memberof music21.interval.GenericInterval\n     * @returns {music21.interval.GenericInterval}\n     */\n    reverse() {\n        if (this.undirected === 1) {\n            return new interval.GenericInterval(1);\n        } else {\n            return new interval.GenericInterval(this.undirected * (-1 * this.direction));\n        }\n    }\n    /**\n     * Given a specifier, return a new DiatonicInterval with this generic.\n     *\n     * @memberof music21.interval.GenericInterval\n     * @param {string|Int} specifier - a specifier such as \"P\",\"m\",\"M\",\"A\",\"dd\" etc.\n     * @returns {music21.interval.DiatonicInterval}\n     */\n    getDiatonic(specifier) {\n        return new interval.DiatonicInterval(specifier, this);\n    }\n\n    /**\n     * Transpose a pitch by this generic interval, maintaining accidentals\n     *\n     * @memberof music21.interval.GenericInterval\n     * @param {music21.pitch.Pitch} p\n     * @returns {music21.pitch.Pitch}\n     */\n    transposePitch(p) {\n        const pitch2 = new pitch.Pitch();\n        pitch2.step = p.step;\n        pitch2.octave = p.octave;\n\n        const oldDiatonicNum = p.diatonicNoteNum;\n\n        const distanceToMove = this.staffDistance;\n\n        // if not reverse...\n        const newDiatonicNumber = oldDiatonicNum + distanceToMove;\n        const newInfo = interval.IntervalConvertDiatonicNumberToStep(newDiatonicNumber);\n        pitch2.step = newInfo[0];\n        pitch2.octave = newInfo[1];\n        if (p.accidental !== undefined) {\n            pitch2.accidental = new pitch.Accidental(p.accidental.name);\n        }\n        return pitch2;\n    }\n}\ninterval.GenericInterval = GenericInterval;\n\ninterval.IntervalSpecifiersEnum = {\n    PERFECT: 1,\n    MAJOR: 2,\n    MINOR: 3,\n    AUGMENTED: 4,\n    DIMINISHED: 5,\n    DBLAUG: 6,\n    DBLDIM: 7,\n    TRPAUG: 8,\n    TRPDIM: 9,\n    QUADAUG: 10,\n    QUADDIM: 11,\n};\n\ninterval.IntervalNiceSpecNames = [\n    'ERROR', 'Perfect', 'Major', 'Minor',\n    'Augmented', 'Diminished', 'Doubly-Augmented', 'Doubly-Diminished',\n    'Triply-Augmented', 'Triply-Diminished', 'Quadruply-Augmented', 'Quadruply-Diminished',\n];\ninterval.IntervalPrefixSpecs = [\n    undefined, 'P', 'M', 'm', 'A', 'd', 'AA', 'dd', 'AAA', 'ddd', 'AAAA', 'dddd',\n];\n\n\ninterval.IntervalOrderedPerfSpecs = [\n    'dddd', 'ddd', 'dd', 'd', 'P', 'A', 'AA', 'AAA', 'AAAA',\n];\n\ninterval.IntervalPerfSpecifiers = [\n    interval.IntervalSpecifiersEnum.QUADDMIN,\n    interval.IntervalSpecifiersEnum.TRPDIM,\n    interval.IntervalSpecifiersEnum.DBLDIM,\n    interval.IntervalSpecifiersEnum.DIMINISHED,\n    interval.IntervalSpecifiersEnum.PERFECT,\n    interval.IntervalSpecifiersEnum.AUGMENTED,\n    interval.IntervalSpecifiersEnum.DBLAUG,\n    interval.IntervalSpecifiersEnum.TRPAUG,\n    interval.IntervalSpecifiersEnum.QUADAUG,\n];\ninterval.IntervalPerfOffset = 4;\n\ninterval.IntervalOrderedImperfSpecs = [\n    'dddd', 'ddd', 'dd', 'd', 'm', 'M', 'A', 'AA', 'AAA', 'AAAA',\n];\n\ninterval.IntervalSpecifiers = [\n    interval.IntervalSpecifiersEnum.QUADDMIN,\n    interval.IntervalSpecifiersEnum.TRPDIM,\n    interval.IntervalSpecifiersEnum.DBLDIM,\n    interval.IntervalSpecifiersEnum.DIMINISHED,\n    interval.IntervalSpecifiersEnum.MINOR,\n    interval.IntervalSpecifiersEnum.MAJOR,\n    interval.IntervalSpecifiersEnum.AUGMENTED,\n    interval.IntervalSpecifiersEnum.DBLAUG,\n    interval.IntervalSpecifiersEnum.TRPAUG,\n    interval.IntervalSpecifiersEnum.QUADAUG,\n];\ninterval.IntervalMajOffset = 5;\n\ninterval.IntervalSemitonesGeneric = {\n    1: 0, 2: 2, 3: 4, 4: 5, 5: 7, 6: 9, 7: 11,\n};\ninterval.IntervalAdjustPerfect = {\n    'P': 0, 'A': 1, 'AA': 2, 'AAA': 3, 'AAAA': 4,\n    'd': -1, 'dd': -2, 'ddd': -3, 'dddd': -4,\n}; // offset from Perfect\n\ninterval.IntervalAdjustImperf = {\n    'M': 0, 'm': -1, 'A': 1, 'AA': 2, 'AAA': 3, 'AAAA': 4,\n    'd': -2, 'dd': -3, 'ddd': -4, 'dddd': -5,\n}; // offset from major\n\n\n/**\n * Represents a Diatonic interval.  See example for usage.\n *\n * @class DiatonicInterval\n * @memberof music21.interval\n * @param {string|Int|undefined} [specifier='P'] - a specifier such as \"P\", \"d\", \"m\", \"M\" etc.\n * @param {music21.interval.GenericInterval|Int} [generic=1] - a `GenericInterval` object or a number to be converted to one\n * @example\n * var di = new music21.interval.DiatonicInterval(\"M\", 10);\n * di.generic.isClassOrSubclass('GenericInterval');\n * // true\n * di.specifier;\n * // 'M'\n * di.name;\n * // 'M10'\n * di.direction == music21.interval.IntervalDirections.ASCENDING;\n * // true\n * di.niceName\n * // \"Major Tenth\"\n *\n * // See music21p for more possibilities.\n */\nexport class DiatonicInterval extends prebase.ProtoM21Object {\n    constructor(specifier, generic) {\n        super();\n        this.classes.push('DiatonicInterval');\n\n        if (specifier === undefined) {\n            specifier = 'P';\n        }\n        if (generic === undefined) {\n            generic = new interval.GenericInterval(1);\n        } else if (typeof generic === 'number') {\n            generic = new interval.GenericInterval(generic);\n        }\n\n        this.name = '';\n        if (typeof specifier === 'number') {\n            this.specifier = specifier;\n        } else {\n            this.specifier = interval.IntervalPrefixSpecs.indexOf(specifier); // todo: convertSpecifier();\n        }\n        this.generic = generic;\n\n        if ((generic.undirected !== 1) || (specifier === interval.IntervalSpecifiersEnum.PERFECT)) {\n            this.direction = generic.direction;\n        } else if (interval.IntervalPerfSpecifiers.indexOf(specifier) <= interval.IntervalPerfSpecifiers.indexOf(interval.IntervalSpecifiersEnum.DIMINISHED)) {\n            // diminished unisons -- very controversial\n            this.direction = interval.IntervalDirections.DESCENDING;\n        } else {\n            this.direction = interval.IntervalDirections.ASCENDING;\n        }\n        const diatonicDirectionNiceName = interval.IntervalDirectionTerms[this.direction + 1];\n        this.name = interval.IntervalPrefixSpecs[this.specifier] + generic.undirected.toString();\n        this.niceName = interval.IntervalNiceSpecNames[this.specifier] + ' ' + generic.niceName;\n        this.simpleName = interval.IntervalPrefixSpecs[this.specifier] + generic.simpleUndirected.toString();\n        this.simpleNiceName = interval.IntervalNiceSpecNames[this.specifier] + ' ' + generic.simpleNiceName;\n        this.semiSimpleName = interval.IntervalPrefixSpecs[this.specifier] + generic.semiSimpleUndirected.toString();\n        this.semiSimpleNiceName = interval.IntervalNiceSpecNames[this.specifier] + ' ' + generic.semiSimpleNiceName;\n        this.directedName = interval.IntervalPrefixSpecs[this.specifier] + generic.directed.toString();\n        this.directedNiceName = diatonicDirectionNiceName + ' ' + this.niceName;\n        this.directedSimpleName = interval.IntervalPrefixSpecs[this.specifier] + generic.simpleDirected.toString();\n        this.directedSimpleNiceName = diatonicDirectionNiceName + ' ' + this.simpleNiceName;\n        this.directedSemiSimpleName = interval.IntervalPrefixSpecs[this.specifier] + generic.semiSimpleDirected.toString();\n        this.directedSemiSimpleNiceName = diatonicDirectionNiceName + ' ' + this.semiSimpleNameName;\n        this.specificName = interval.IntervalNiceSpecNames[this.specifier];\n        this.perfectable = generic.perfectable;\n        this.isDiatonicStep = generic.isDiatonicStep;\n        this.isStep = generic.isStep;\n\n        // generate inversions\n        if (this.perfectable) {\n            this.orderedSpecifierIndex = interval.IntervalOrderedPerfSpecs.indexOf(interval.IntervalPrefixSpecs[this.specifier]);\n            this.invertedOrderedSpecIndex = (interval.IntervalOrderedPerfSpecs.length - 1 - this.orderedSpecifierIndex);\n            this.invertedOrderedSpecifier = interval.IntervalOrderedPerfSpecs[this.invertedOrderedSpecIndex];\n        } else {\n            this.orderedSpecifierIndex = interval.IntervalOrderedImperfSpecs.indexOf(interval.IntervalPrefixSpecs[this.specifier]);\n            this.invertedOrderedSpecIndex = (interval.IntervalOrderedImperfSpecs.length - 1 - this.orderedSpecifierIndex);\n            this.invertedOrderedSpecifier = interval.IntervalOrderedImperfSpecs[this.invertedOrderedSpecIndex];\n        }\n\n        this.mod7inversion = this.invertedOrderedSpecifier + generic.mod7inversion.toString();\n        /* ( if (this.direction == interval.IntervalDirections.DESCENDING) {\n\t\t\tthis.mod7 = this.mod7inversion;\n\t\t} else {\n\t\t\tthis.mod7 = this.simpleName;\n\t\t} */\n\n        // TODO: reverse()\n        // TODO: property cents\n    }\n\n    /**\n     * Returns a ChromaticInterval object of the same size.\n     *\n     * @memberof music21.interval.DiatonicInterval\n     * @returns {music21.interval.ChromaticInterval}\n     */\n    getChromatic() {\n        const octaveOffset = Math.floor(Math.abs(this.generic.staffDistance) / 7);\n        const semitonesStart = interval.IntervalSemitonesGeneric[this.generic.simpleUndirected];\n        const specName = interval.IntervalPrefixSpecs[this.specifier];\n\n        let semitonesAdjust = 0;\n        if (this.generic.perfectable) {\n            semitonesAdjust = interval.IntervalAdjustPerfect[specName];\n        } else {\n            semitonesAdjust = interval.IntervalAdjustImperf[specName];\n        }\n\n        let semitones = (octaveOffset * 12) + semitonesStart + semitonesAdjust;\n\n\n        // direction should be same as original\n\n        if (this.generic.direction === interval.IntervalDirections.DESCENDING) {\n            semitones *= -1;\n        }\n        if (debug) {\n            console.log('DiatonicInterval.getChromatic -- octaveOffset: ' + octaveOffset);\n            console.log('DiatonicInterval.getChromatic -- semitonesStart: ' + semitonesStart);\n            console.log('DiatonicInterval.getChromatic -- specName: ' + specName);\n            console.log('DiatonicInterval.getChromatic -- semitonesAdjust: ' + semitonesAdjust);\n            console.log('DiatonicInterval.getChromatic -- semitones: ' + semitones);\n        }\n        return new interval.ChromaticInterval(semitones);\n    }\n}\ninterval.DiatonicInterval = DiatonicInterval;\n\n/**\n * @class ChromaticInterval\n * @memberof music21.interval\n * @param {number} value - number of semitones (positive or negative)\n * @property {number} cents\n * @property {number} value\n * @property {number} undirected - absolute value of value\n * @property {number} mod12 - reduction to one octave\n * @property {number} intervalClass - reduction to within a tritone (11 = 1, etc.)\n *\n */\nexport class ChromaticInterval extends prebase.ProtoM21Object {\n    constructor(value) {\n        super();\n        this.classes.push('ChromaticInterval');\n\n        this.semitones = value;\n        this.cents = Math.round(value * 100.0, 5);\n        this.directed = value;\n        this.undirected = Math.abs(value);\n\n        if (this.directed === 0) {\n            this.direction = interval.IntervalDirections.OBLIQUE;\n        } else if (this.directed === this.undirected) {\n            this.direction = interval.IntervalDirections.ASCENDING;\n        } else {\n            this.direction = interval.IntervalDirections.DESCENDING;\n        }\n\n        this.mod12 = this.semitones % 12;\n        this.simpleUndirected = this.undirected % 12;\n        if (this.direction === interval.IntervalDirections.DESCENDING) {\n            this.simpleDirected = -1 * this.simpleUndirected;\n        } else {\n            this.simpleDirected = this.simpleUndirected;\n        }\n\n        this.intervalClass = this.mod12;\n        if (this.mod12 > 6) {\n            this.intervalClass = 12 - this.mod12;\n        }\n\n        if (this.undirected === 1) {\n            this.isChromaticStep = true;\n        } else {\n            this.isChromaticStep = false;\n        }\n    }\n    reverse() {\n        return new interval.ChromaticInterval(this.undirected * (-1 * this.direction));\n    }\n\n//  TODO: this.getDiatonic()\n\n    /**\n     * Transposes pitches but does not maintain accidentals, etc.\n     *\n     * @memberof music21.interval.ChromaticInterval\n     * @property {music21.pitch.Pitch} p - pitch to transpose\n     * @returns {music21.pitch.Pitch}\n     */\n    transposePitch(p) {\n        let useImplicitOctave = false;\n        if (p.octave === undefined) {\n            // not yet implemented in m21j\n            useImplicitOctave = true;\n        }\n        const pps = p.ps;\n        const newPitch = new pitch.Pitch();\n        newPitch.ps = pps + this.semitones;\n        if (useImplicitOctave) {\n            newPitch.octave = undefined;\n        }\n        return newPitch;\n    }\n}\ninterval.ChromaticInterval = ChromaticInterval;\n\n\ninterval.IntervalStepNames = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\n\n/**\n * @function music21.interval.IntervalConvertDiatonicNumberToStep\n * @memberof music21.interval\n * @param {Int} dn - diatonic number, where 29 = C4, C#4 etc.\n * @returns {Array} two element array of {string} stepName and {Int} octave\n */\ninterval.IntervalConvertDiatonicNumberToStep = function IntervalConvertDiatonicNumberToStep(dn) {\n    let stepNumber;\n    let octave;\n    if (dn === 0) {\n        return ['B', -1];\n    } else if (dn > 0) {\n        octave = Math.floor((dn - 1) / 7);\n        stepNumber = (dn - 1) - (octave * 7);\n    } else { // low notes... test, because js(floor) != py(int);\n        octave = Math.floor(dn / 7);\n        stepNumber = (dn - 1) - ((octave + 1) * 7);\n    }\n    const stepName = interval.IntervalStepNames[stepNumber];\n    return [stepName, octave];\n};\n\n\n/**\n * This is the main, powerful Interval class.\n *\n * Instantiate with either a string (\"M3\") or two {@link music21.pitch.Pitch} or two {@link music21.note.Note}\n *\n * See music21p instructions for usage.\n *\n * @class Interval\n * @memberof music21.interval\n * @example\n * var n1 = new music21.note.Note(\"C4\");\n * var n2 = new music21.note.Note(\"F#5\");\n * var iv = new music21.interval.Interval(n1, n2);\n * iv.isConsonant();\n * // false\n * iv.semitones;\n * // 18\n * iv.niceName\n * // \"Augmented Eleventh\"\n */\nexport class Interval extends prebase.ProtoM21Object {\n\n    constructor(...restArgs) {\n        super();\n        this.classes.push('Interval');\n\n        // todo: allow full range of ways of specifying as in m21p\n        if (restArgs.length === 1) {\n            const arg0 = restArgs[0];\n            if (typeof (arg0) === 'string') {\n                // simple...\n                const specifier = arg0.slice(0, 1);\n                const generic = parseInt(arg0.slice(1));\n                const gI = new interval.GenericInterval(generic);\n                const dI = new interval.DiatonicInterval(specifier, gI);\n                this.diatonic = dI;\n                this.chromatic = this.diatonic.getChromatic();\n            } else if (arg0.specifier !== undefined) {\n                // assume diatonic...\n                this.diatonic = arg0;\n                this.chromatic = this.diatonic.getChromatic();\n            } else {\n                console.error('cant parse string arguments to Interval yet');\n            }\n        } else if (restArgs.length === 2) {\n            if (restArgs[0].pitch === undefined && restArgs[0].diatonicNoteNum === undefined) {\n                this.diatonic = restArgs[0];\n                this.chromatic = restArgs[1];\n            } else {\n                const n1 = restArgs[0];\n                const n2 = restArgs[1];\n                const gInt = interval.notesToGeneric(n1, n2);\n                const cInt = interval.notesToChromatic(n1, n2);\n\n                this.diatonic = interval.intervalsToDiatonic(gInt, cInt);\n                this.chromatic = cInt;\n            }\n        }\n        this.reinit();\n    }\n    get complement() {\n        return new interval.Interval(this.diatonic.mod7inversion);\n    }\n    reinit() {\n        this.direction = this.chromatic.direction;\n        this.specifier = this.diatonic.specifier;\n        this.diatonicType = this.diatonic.specifier;\n        // this.specificName = this.diatonic.specificName;\n        this.generic = this.diatonic.generic;\n\n        this.name = this.diatonic.name;\n        this.niceName = this.diatonic.niceName;\n        this.simpleName = this.diatonic.simpleName;\n        this.simpleNiceName = this.diatonic.simpleNiceName;\n        this.semiSimpleName = this.diatonic.semiSimpleName;\n        this.semiSimpleNiceName = this.diatonic.semiSimpleNiceName;\n\n        this.directedName = this.diatonic.directedName;\n        this.directedNiceName = this.diatonic.directedNiceName;\n        this.directedSimpleName = this.diatonic.directedSimpleName;\n        this.directedSimpleNiceName = this.diatonic.directedSimpleNiceName;\n\n        // other names...\n        this.isDiatonicStep = this.diatonic.isDiatonicStep;\n\n        this.isChromaticStep = this.chromatic.isChromaticStep;\n        this.semitones = this.chromatic.semitones;\n        this.intervalClass = this.chromatic.intervalClass;\n        this.cents = this.chromatic.cents;\n        this.isStep = (this.isChromaticStep || this.isDiatonicStep);\n    }\n\n    /**\n     * @memberof music21.interval.Interval\n     * @returns {Boolean}\n     */\n    isConsonant() {\n        const sn = this.simpleName;\n        const consonantNames = ['P5', 'm3', 'M3', 'm6', 'M6', 'P1'];\n        if (consonantNames.indexOf(sn) !== -1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n//  todo general: microtones\n    /**\n     * @memberof music21.interval.Interval\n     * @param {music21.pitch.Pitch} p - pitch to transpose\n     * @returns {music21.pitch.Pitch}\n     */\n    transposePitch(p) {\n        // todo: reverse, clearAccidentalDisplay, maxAccidental;\n\n        /*\n        var useImplicitOctave = false;\n        if (p.octave === undefined) {\n            useImplicitOctave = true;\n        }\n         */\n        const pitch2 = this.diatonic.generic.transposePitch(p);\n        pitch2.accidental = undefined;\n        // step and octave are right now, but not necessarily accidental\n        const halfStepsToFix = this.chromatic.semitones - parseInt(pitch2.ps - p.ps);\n        if (halfStepsToFix !== 0) {\n            pitch2.accidental = new pitch.Accidental(halfStepsToFix);\n        }\n        if (debug) {\n            console.log('Interval.transposePitch -- new step ' + pitch2.step);\n            console.log('Interval.transposePitch -- new octave ' + pitch2.octave);\n            console.log('Interval.transposePitch -- fixing halfsteps for ' + halfStepsToFix);\n        }\n        return pitch2;\n    }\n}\ninterval.Interval = Interval;\n/**\n * Convert two notes or pitches to a GenericInterval;\n */\ninterval.notesToGeneric = function notesToGeneric(n1, n2) {\n    let p1 = n1;\n    if (n1.pitch !== undefined) {\n        p1 = n1.pitch;\n    }\n    let p2 = n2;\n    if (n2.pitch !== undefined) {\n        p2 = n2.pitch;\n    }\n    const staffDist = p2.diatonicNoteNum - p1.diatonicNoteNum;\n    const genDist = interval.convertStaffDistanceToInterval(staffDist);\n    return new interval.GenericInterval(genDist);\n};\n\ninterval.convertStaffDistanceToInterval = function convertStaffDistanceToInterval(staffDist) {\n    if (staffDist === 0) {\n        return 1;\n    } else if (staffDist > 0) {\n        return staffDist + 1;\n    } else {\n        return staffDist - 1;\n    }\n};\n\ninterval.notesToChromatic = function notesToChromatic(n1, n2) {\n    let p1 = n1;\n    if (n1.pitch !== undefined) {\n        p1 = n1.pitch;\n    }\n    let p2 = n2;\n    if (n2.pitch !== undefined) {\n        p2 = n2.pitch;\n    }\n    return new interval.ChromaticInterval(p2.ps - p1.ps);\n};\n\ninterval.intervalsToDiatonic = function intervalsToDiatonic(gInt, cInt) {\n    const specifier = interval._getSpecifierFromGenericChromatic(gInt, cInt);\n    // todo -- convert specifier...\n    return new interval.DiatonicInterval(specifier, gInt);\n};\n\ninterval._getSpecifierFromGenericChromatic = function _getSpecifierFromGenericChromatic(gInt, cInt) {\n    const noteVals = [undefined, 0, 2, 4, 5, 7, 9, 11];\n    const normalSemis = noteVals[gInt.simpleUndirected] + 12 * gInt.undirectedOctaves;\n    let theseSemis = 0;\n    if (gInt.direction !== cInt.direction\n            && gInt.direction !== interval.IntervalDirections.OBLIQUE\n            && cInt.direction !== interval.IntervalDirections.OBLIQUE) {\n        // intervals like d2 and dd2 etc. (the last test doesn't matter, since -1*0 === 0, but in theory it should be there)\n        theseSemis = -1 * cInt.undirected;\n    } else if (gInt.undirected === 1) {\n        theseSemis = cInt.directed; // matters for unison\n    } else {\n        // all normal intervals\n        theseSemis  = cInt.undirected;\n    }\n    const semisRounded = Math.round(theseSemis);\n    let specifier = '';\n    if (gInt.perfectable) {\n        specifier = interval.IntervalPerfSpecifiers[interval.IntervalPerfOffset + semisRounded - normalSemis];\n    } else {\n        specifier = interval.IntervalSpecifiers[interval.IntervalMajOffset + semisRounded - normalSemis];\n    }\n    return specifier;\n};\n\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/scale -- Scales\n *\n * Does not implement the full range of scales from music21p\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { debug } from './debug';\nimport { pitch } from './pitch';\nimport { interval } from './interval';\n\nimport { Music21Exception } from './exceptions21';\n\n/**\n * Scale module. See {@link music21.scale} namespace\n *\n * @exports music21/scale\n */\n/**\n * Scale namespace.  Right now only supports very simple scales.\n *\n * @namespace music21.scale\n * @memberof music21\n * @requires music21/pitch\n * @requires music21/interval\n */\nexport const scale = {};\n\n/**\n * Function, not class\n *\n * @function music21.scale.SimpleDiatonicScale\n * @param {music21.pitch.Pitch} tonic\n * @param {Array<string>} scaleSteps - an array of diatonic prefixes, generally 'M' (major) or 'm' (minor) describing the seconds.\n * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.\n */\nscale.SimpleDiatonicScale = function SimpleDiatonicScale(tonic, scaleSteps) {\n    if (tonic === undefined) {\n        tonic = new pitch.Pitch('C4');\n    } else if (!(tonic instanceof pitch.Pitch)) {\n        throw new Music21Exception('Cannot make a scale not from ' +\n                'a music21.pitch.Pitch object: ' + tonic);\n    }\n    if (scaleSteps === undefined) {\n        scaleSteps = ['M', 'M', 'm', 'M', 'M', 'M', 'm'];\n    }\n    const gi = new interval.GenericInterval(2);\n    const pitches = [tonic];\n    let lastPitch = tonic;\n    for (let i = 0; i < scaleSteps.length; i++) {\n        const di = new interval.DiatonicInterval(scaleSteps[i], gi);\n        const ii = new interval.Interval(di);\n        const newPitch = ii.transposePitch(lastPitch);\n        if (debug) {\n            console.log('ScaleSimpleMajor -- adding pitch: ' + newPitch.name);\n        }\n        pitches.push(newPitch);\n        lastPitch = newPitch;\n    }\n    return pitches;\n};\n\n/**\n * One octave of a major scale\n *\n * @function music21.scale.ScaleSimpleMajor\n * @param {music21.pitch.Pitch} tonic\n * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.\n */\nscale.ScaleSimpleMajor = function ScaleSimpleMajor(tonic) {\n    const scaleSteps = ['M', 'M', 'm', 'M', 'M', 'M', 'm'];\n    return new scale.SimpleDiatonicScale(tonic, scaleSteps);\n};\n\n/**\n * One octave of a minor scale\n *\n * @function music21.scale.ScaleSimpleMinor\n * @param {music21.pitch.Pitch} tonic\n * @param {string} [minorType='natural] - 'harmonic', 'harmonic-minor', 'melodic', 'melodic-minor', 'melodic-minor-ascending', 'melodic-ascending' or other (=natural/melodic-descending)\n * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.\n */\nscale.ScaleSimpleMinor = function ScaleSimpleMinor(tonic, minorType) {\n    const scaleSteps = ['M', 'm', 'M', 'M', 'm', 'M', 'M'];\n    if (typeof (minorType) === 'string') {\n        // \"harmonic minor\" -> \"harmonic-minor\"\n        minorType = minorType.replace(/\\s/g, '-');\n    }\n    if (minorType === 'harmonic'\n        || minorType === 'harmonic-minor') {\n        scaleSteps[5] = 'A';\n        scaleSteps[6] = 'm';\n    } else if (minorType === 'melodic'\n            || minorType === 'melodic-ascending'\n            || minorType === 'melodic-minor'\n            || minorType === 'melodic-minor-ascending') {\n        scaleSteps[4] = 'M';\n        scaleSteps[6] = 'm';\n    }\n    return new scale.SimpleDiatonicScale(tonic, scaleSteps);\n};\n\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/key -- KeySignature and Key objects\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21';\n\nimport { base } from './base';\nimport { debug } from './debug';\nimport { interval } from './interval';\nimport { pitch } from './pitch';\nimport { scale } from './scale';\n\n/**\n * key and keysignature module. See {@link music21.key} namespace for details\n *\n * @exports music21/key\n */\n/**\n * Key and KeySignature related objects and methods\n *\n * @namespace music21.key\n * @memberof music21\n * @requires music21/base\n * @requires music21/pitch\n * @requires music21/interval\n * @requires music21/scale\n */\nexport const key = {};\n\nkey.modeSharpsAlter = {\n    'major': 0,\n    'minor': -3,\n    'dorian': -2,\n    'phrygian': -4,\n    'lydian': 1,\n    'mixolydian': -1,\n    'locrian': -5,\n};\n\n/**\n * @class KeySignature\n * @memberof music21.key\n * @description Represents a key signature\n * @param {Int} [sharps=0] -- the number of sharps (negative for flats)\n * @property {Int} [sharps=0] -- number of sharps (negative for flats)\n * @extends music21.base.Music21Object\n * @example\n * var ks = new music21.key.KeySignature(-3); //E-flat major or c minor\n * var s = new music21.stream.Stream();\n * s.keySignature = ks;\n * var n = new music21.note.Note('A-'); // A-flat\n * s.append(n);\n * s.appendNewCanvas();\n */\nexport class KeySignature extends base.Music21Object {\n    constructor(sharps) {\n        super();\n        this.classes.push('KeySignature');\n        this._sharps = sharps || 0; // if undefined\n        this._alteredPitchesCache = undefined;\n\n        // 12 flats/sharps enough for now...\n        this.flatMapping = ['C', 'F', 'B-', 'E-', 'A-', 'D-', 'G-', 'C-', 'F-', 'B--', 'E--', 'A--', 'D--'];\n        this.sharpMapping = ['C', 'G', 'D', 'A', 'E', 'B', 'F#', 'C#', 'G#', 'D#', 'A#', 'E#', 'B#'];\n    }\n    get sharps() {\n        return this._sharps;\n    }\n    set sharps(s) {\n        this._alteredPitchesCache = [];\n        this._sharps = s;\n    }\n    /**\n     * Gives the width in pixels necessary to represent the key signature.\n     *\n     * @memberof music21.key.KeySignature#\n     * @var {number} width\n     * @readonly\n     */\n    get width() {\n        if (this.sharps === 0) {\n            return 0;\n        } else { // add 6 to add extra space after the KS...\n            return 12 * Math.abs(this.sharps) + 6;\n        }\n    }\n     /**\n      * An Array of Altered Pitches in KeySignature order (i.e., for flats, Bb, Eb, etc.)\n      *\n      * @memberof music21.key.KeySignature#\n      * @var {Array<music21.pitch.Pitch>} alteredPitches\n      * @readonly\n      * @example\n      * var ks = new music21.key.KeySignature(3)\n      * var ap = ks.alteredPitches\n      * var apName = [];\n      * for (var i = 0; i < ap.length; i++) {\n      *     apName.push(ap[i].name);\n      * }\n      * apName\n      * // [\"F#\", \"C#\", \"G#\"]\n      */\n    get alteredPitches() {\n        if (this._alteredPitchesCache !== undefined) {\n            return this._alteredPitchesCache;\n        }\n        let transStr = 'P5';\n        let startPitch = 'B';\n        if (this.sharps < 0) {\n            transStr = 'P4';\n            startPitch = 'F';\n        }\n        const transInterval = new interval.Interval(transStr);\n        const post = [];\n        let pKeep = new pitch.Pitch(startPitch);\n        for (let i = 0; i < Math.abs(this.sharps); i++) {\n            pKeep = transInterval.transposePitch(pKeep);\n            pKeep.octave = 4;\n            post.push(pKeep);\n        }\n        this._alteredPitchesCache = post;\n        return post;\n    }\n     /**\n      * Return the name of the major key with this many sharps\n      *\n      * @memberof music21.key.KeySignature\n      * @returns {(string|undefined)} name of key\n      * @example\n      * var ks = new music21.key.KeySignature(-3)\n      * ks.majorName()\n      * // \"E-\"\n      */\n    majorName() {\n        if (this.sharps >= 0) {\n            return this.sharpMapping[this.sharps];\n        } else {\n            return this.flatMapping[Math.abs(this.sharps)];\n        }\n    }\n     /**\n      * Return the name of the minor key with this many sharps\n      * @memberof music21.key.KeySignature\n      * @returns {(string|undefined)}\n      */\n    minorName() {\n        const tempSharps = this.sharps + 3;\n        if (tempSharps >= 0) {\n            return this.sharpMapping[tempSharps];\n        } else {\n            return this.flatMapping[Math.abs(tempSharps)];\n        }\n    }\n     /**\n      * returns the vexflow name (just the `majorName()` with \"b\" for \"-\") for\n      * the key signature.  Does not create the object.\n      *\n      * Deprecated.\n      *\n      * @memberof music21.key.KeySignature\n      * @returns {string}\n      */\n    vexflow() {\n        console.log('calling deprecated function KeySignature.vexflow');\n        const tempName = this.majorName();\n        return tempName.replace(/\\-/g, 'b');\n    }\n     /**\n      * Returns the accidental associated with a step in this key, or undefined if none.\n      *\n      * @memberof music21.key.KeySignature\n      * @param {string} step - a valid step name such as \"C\",\"D\", etc., but not \"C#\" etc.\n      * @returns {(music21.pitch.Accidental|undefined)}\n      */\n    accidentalByStep(step) {\n        const aps = this.alteredPitches;\n        for (let i = 0; i < aps.length; i++) {\n            if (aps[i].step === step) {\n                if (aps[i].accidental === undefined) {\n                    return undefined;\n                }\n                 // make a new accidental;\n                return new pitch.Accidental(aps[i].accidental.alter);\n            }\n        }\n        return undefined;\n    }\n     /**\n      * Takes a pitch in C major and transposes it so that it has\n      * the same step position in the current key signature.\n      *\n      * @memberof music21.key.KeySignature\n      * @returns {music21.pitch.Pitch}\n      * @example\n      * var ks = new music21.key.KeySignature(-3)\n      * var p1 = new music21.pitch.Pitch('B')\n      * var p2 = ks.transposePitchFromC(p1)\n      * p2.name\n      * // \"D\"\n      * var p3 = new music21.pitch.Pitch('G-')\n      * var p4 = ks.transposePitchFromC(p3)\n      * p4.name\n      * // \"B--\"\n      */\n    transposePitchFromC(p) {\n        let transInterval;\n        let transTimes;\n        if (this.sharps === 0) {\n            return new pitch.Pitch(p.nameWithOctave);\n        } else if (this.sharps < 0) {\n            transTimes = Math.abs(this.sharps);\n            transInterval = new interval.Interval('P4');\n        } else {\n            transTimes = this.sharps;\n            transInterval = new interval.Interval('P5');\n        }\n        let newPitch = p;\n        for (let i = 0; i < transTimes; i++) {\n            newPitch = transInterval.transposePitch(newPitch);\n            if ((i % 2) === 1) {\n                newPitch.octave -= 1;\n            }\n        }\n        return newPitch;\n    }\n}\nkey.KeySignature = KeySignature;\n\n\n/**\n * Create a Key object. Like a KeySignature but with ideas about Tonic, Dominant, etc.\n *\n * TODO: allow keyName to be a {@link music21.pitch.Pitch}\n *\n * @class Key\n * @memberof music21.key\n * @extends music21.key.KeySignature\n * @param {string} keyName -- a pitch name representing the key (w/ \"-\" for flat)\n * @param {string} [mode] -- if not given then the CASE of the keyName will be used (\"C\" => \"major\", \"c\" => \"minor\")\n */\nexport class Key extends KeySignature {\n    constructor(keyName, mode) {\n        if (keyName === undefined) {\n            keyName = 'C';\n        }\n        if (mode === undefined) {\n            const lowerCase = keyName.toLowerCase();\n            if (keyName === lowerCase) {\n                mode = 'minor';\n            } else {\n                mode = 'major';\n            }\n        }\n\n        const sharpsArray = 'A-- E-- B-- F- C- G- D- A- E- B- F C G D A E B F# C# G# D# A# E# B#'.split(' ');\n        const sharpsIndex = sharpsArray.indexOf(keyName.toUpperCase());\n        if (sharpsIndex === -1) {\n            throw new Music21Exception('Cannot find the key for ' + keyName);\n        }\n        const modeShift = key.modeSharpsAlter[mode] || 0;\n        const sharps = sharpsIndex + modeShift - 11;\n        if (debug) {\n            console.log('Found sharps ' + sharps + ' for key: ' + keyName);\n        }\n        super(sharps);\n        this.tonic = keyName;\n        this.mode = mode;\n    }\n    /**\n     * returns a {@link music21.scale.ScaleSimpleMajor} or {@link music21.scale.ScaleSimpleMinor}\n     * object from the pitch object.\n     *\n     * @memberof music21.key.Key\n     * @param {string|undefined} [scaleType=this.mode] - the type of scale, or the mode.\n     * @returns {object} A music21.scale.Scale subclass.\n     */\n    getScale(scaleType) {\n        if (scaleType === undefined) {\n            scaleType = this.mode;\n        }\n        const pitchObj = new pitch.Pitch(this.tonic);\n        if (scaleType === 'major') {\n            return scale.ScaleSimpleMajor(pitchObj);\n        } else {\n            return scale.ScaleSimpleMinor(pitchObj, scaleType);\n        }\n    }\n}\nkey.Key = Key;\n\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/miditools -- A collection of tools for midi. See the namespace {@link music21.miditools}\n *\n * Copyright (c) 2014-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n * @author Michael Scott Cuthbert\n */\nimport * as $ from 'jquery';\nimport * as eventjs from 'eventjs'; // drag handler...\nimport * as MIDI from 'MIDI';\n\nimport { chord } from './chord';\nimport { common } from './common';\nimport { debug } from './debug';\nimport { instrument } from './instrument';\nimport { note } from './note';\n\n/**\n * A collection of tools for midi. See the namespace {@link music21.miditools}\n *\n * @exports music21/miditools\n */\n/**\n * Module that holds **music21** tools for connecting with MIDI.js and somewhat with the\n * events from the Jazz plugin or the WebMIDI protocol.\n *\n * @namespace music21.miditools\n * @memberof music21\n */\nexport const miditools = {};\n\n/**\n * Number of octaves to transpose all incoming midi signals\n *\n * @type {number}\n * @default 0\n */\nmiditools.transposeOctave = 0;\n/**\n * @class Event\n * @memberof music21.miditools\n * @param {number} t - timing information\n * @param {number} a - midi data 1 (N.B. a >> 4 = midiCommand )\n * @param {number} b - midi data 2\n * @param {number} c - midi data 3\n */\nexport class Event {\n    constructor(t, a, b, c) {\n        this.timing = t;\n        this.data1 = a;\n        this.data2 = b;\n        this.data3 = c;\n        this.midiCommand = (a >> 4);\n\n        this.noteOff = (this.midiCommand === 8);\n        this.noteOn = (this.midiCommand === 9);\n\n        this.midiNote = undefined;\n        if (this.noteOn || this.noteOff) {\n            this.midiNote = this.data2 + 12 * miditools.transposeOctave;\n            this.velocity = this.data3;\n        }\n    }\n    /**\n     * Calls MIDI.noteOn or MIDI.noteOff for the note\n     * represented by the Event (if appropriate)\n     *\n     * @memberof music21.miditools.Event\n     * @returns {undefined}\n     */\n    sendToMIDIjs() {\n        if (MIDI !== undefined) {\n            if (this.noteOn) {\n                MIDI.noteOn(0, this.midiNote, this.velocity, 0);\n            } else if (this.noteOff) {\n                MIDI.noteOff(0, this.midiNote, 0);\n            }\n        } else {\n            console.warn('could not playback note because no MIDIout defined');\n        }\n    }\n    /**\n     * Makes a {@link music21.note.Note} object from the event's midiNote number.\n     *\n     * @memberof music21.miditools.Event\n     * @returns {music21.note.Note} - the {@link music21.note.Note} object represented by Event.midiNote\n     */\n    music21Note() {\n        const m21n = new note.Note();\n        m21n.pitch.ps = this.midiNote;\n        return m21n;\n    }\n}\nmiditools.Event = Event;\n\n/**\n * How long to wait in milliseconds before deciding that a note belongs to another chord. Default 100ms\n *\n * @memberof music21.miditools\n * @type {number}\n */\nmiditools.maxDelay = 100; // in ms\n/**\n * At what time (in ms since Epoch) the chord started.\n *\n * @memberof music21.miditools\n * @type {number}\n */\nmiditools.heldChordTime = 0;\n/**\n * An Array (or undefined) of currently held chords that have not been sent out yet.\n *\n * @memberof music21.miditools\n * @type {Array|undefined}\n */\nmiditools.heldChordNotes = undefined;\n\n/**\n * When, in MS since Jan 1, 1970, was the last {@link music21.note.Note} played.\n * Defaults to the time that the module was loaded.\n *\n * @memberof music21.miditools\n * @type {number}\n */\nmiditools.timeOfLastNote = Date.now(); // in ms\n\nmiditools._baseTempo = 60;\n/**\n * Assign (or query) a Metronome object to run all timing information.\n *\n * @memberof music21.miditools\n * @type {music21.tempo.Metronome}\n */\nmiditools.metronome = undefined;\n\nObject.defineProperties(miditools, {\n    'tempo': {\n        enumerable: true,\n        get() {\n            if (this.metronome === undefined) {\n                return this._baseTempo;\n            } else {\n                return this.metronome.tempo;\n            }\n        },\n        set(t) {\n            if (this.metronome === undefined) {\n                this._baseTempo = t;\n            } else {\n                this.metronome.tempo = t;\n            }\n        },\n    },\n});\n\n/* --------- chords ------------- */\n/**\n *  Clears chords that are older than miditools.heldChordTime\n *\n *  Runs a setTimeout on itself.\n *  Calls miditools.sendOutChord\n *\n *  @memberof music21.miditools\n */\nmiditools.clearOldChords = function clearOldChords() {\n    // clear out notes that may be a chord...\n    const nowInMs = Date.now(); // in ms\n    if ((miditools.heldChordTime +\n            miditools.maxDelay) < nowInMs) {\n        miditools.heldChordTime = nowInMs;\n        if (miditools.heldChordNotes !== undefined) {\n            // console.log('to send out chords');\n            miditools.sendOutChord(miditools.heldChordNotes);\n            miditools.heldChordNotes = undefined;\n        }\n    }\n    setTimeout(miditools.clearOldChords, miditools.maxDelay);\n};\n/**\n *  Take a series of jEvent noteOn objects and convert them to a single Chord object\n *  so long as they are all sounded within miditools.maxDelay milliseconds of each other.\n *  this method stores notes in miditools.heldChordNotes (Array).\n *\n *  @param {music21.miditools.Event} jEvent\n *  @memberof music21.miditools\n *  @returns undefined\n */\nmiditools.makeChords = function makeChords(jEvent) { // jEvent is a miditools.Event object\n    if (jEvent.noteOn) {\n        const m21n = jEvent.music21Note();\n        if (miditools.heldChordNotes === undefined) {\n            miditools.heldChordNotes = [m21n];\n        } else {\n            for (let i = 0; i < miditools.heldChordNotes.length; i++) {\n                const foundNote = miditools.heldChordNotes[i];\n                if (foundNote.pitch.ps === m21n.pitch.ps) {\n                    return;  // no duplicates\n                }\n            }\n            miditools.heldChordNotes.push(m21n);\n        }\n    }\n};\n\n/**\n * The last Note or Chord to be sent out from miditools.  This is an important semi-global\n * attribute, since the last element may need to be quantized by quantizeLastNote() to\n * determine its length, since the note may need to be placed into a staff before its total\n * length can be determined.\n *\n * @memberof music21.miditools\n * @type {music21.chord.Chord|music21.note.Note|undefined}\n */\nmiditools.lastElement = undefined;\n\n/**\n * Take the list of Notes and makes a chord out of it, if appropriate and call\n * {@link music21.miditools.callBacks.sendOutChord} callback with the Chord or Note as a parameter.\n *\n * @memberof music21.miditools\n * @param {Array<music21.note.Note>} chordNoteList - an Array of {@link music21.note.Note} objects\n * @returns {(music21.note.Note|music21.chord.Chord|undefined)} A {@link music21.chord.Chord} object,\n * most likely, but maybe a {@link music21.note.Note} object)\n */\nmiditools.sendOutChord = function sendOutChord(chordNoteList) {\n    let appendObject;\n    if (chordNoteList.length > 1) {\n        // console.log(chordNoteList[0].name, chordNoteList[1].name);\n        appendObject = new chord.Chord(chordNoteList);\n    } else if (chordNoteList.length === 1) {\n        appendObject = chordNoteList[0]; // note object\n    } else {\n        return undefined;\n    }\n    appendObject.stemDirection = 'noStem';\n    miditools.quantizeLastNote();\n    miditools.lastElement = appendObject;\n    if (miditools.callBacks.sendOutChord !== undefined) {\n        miditools.callBacks.sendOutChord(appendObject);\n    }\n    return appendObject;\n};\n\n/* ----------- callbacks --------- */\n// TODO: all callbacks (incl. raw, sendOutChord) should be able to be a function or an array of functions\n\n/**\n* callBacks is an object with three keys:\n*\n* - raw: function (t, a, b,c) to call when any midievent arrives. Default: `function (t, a, b, c) { return new miditools.Event(t, a, b, c); }`\n* - general: function ( miditools.Event() ) to call when an Event object has been created. Default: `[miditools.sendToMIDIjs, miditools.quantizeLastNote]`\n* - sendOutChord: function (array_of_note.Note_objects) to call when a sufficient time has passed to build a chord from input. Default: empty function.\n*\n* At present, only \"general\" can take an Array of event listening functions, but I hope to change that for sendOutChord also.\n*\n* \"general\" is usually the callback list to play around with.\n*\n* @memberof music21.miditools\n*/\nmiditools.callBacks = {\n    raw: (t, a, b, c) => new miditools.Event(t, a, b, c),\n    general: [miditools.sendToMIDIjs,\n              miditools.quantizeLastNote],\n    sendOutChord: (arrayOfNotes) => { },\n};\n\n/**\n * Quantizes the lastElement (passed in) or music21.miditools.lastElement.\n *\n * @memberof music21.miditools\n * @param {music21.note.GeneralNote} lastElement - A {@link music21.note.Note} to be quantized\n * @returns {music21.note.GeneralNote} The same {@link music21.note.Note} object passed in with\n * duration quantized\n */\nmiditools.quantizeLastNote = function quantizeLastNote(lastElement) {\n    if (lastElement === undefined) {\n        lastElement = this.lastElement;\n        if (lastElement === undefined) {\n            return undefined;\n        }\n    }\n    lastElement.stemDirection = undefined;\n    const nowInMS = Date.now();\n    const msSinceLastNote = nowInMS - this.timeOfLastNote;\n    this.timeOfLastNote = nowInMS;\n    const normalQuarterNoteLength = 1000 * 60 / this.tempo;\n    const numQuarterNotes = msSinceLastNote / normalQuarterNoteLength;\n    let roundedQuarterLength = Math.round(4 * numQuarterNotes) / 4;\n    if (roundedQuarterLength >= 4) {\n        roundedQuarterLength = 4;\n    } else if (roundedQuarterLength >= 3) {\n        roundedQuarterLength = 3;\n    } else if (roundedQuarterLength > 2) {\n        roundedQuarterLength = 2;\n    } else if (roundedQuarterLength === 1.25) {\n        roundedQuarterLength = 1;\n    } else if (roundedQuarterLength === 0.75) {\n        roundedQuarterLength = 0.5;\n    } else if (roundedQuarterLength === 0) {\n        roundedQuarterLength = 0.125;\n    }\n    lastElement.duration.quarterLength = roundedQuarterLength;\n    return lastElement;\n};\n\n/* ----------- callbacks --------- */\n/**\n * Callback to midiEvent.sendToMIDIjs.\n *\n * @memberof music21.miditools\n * @param {music21.miditools.Event} midiEvent - event to send out.\n * @returns undefined\n */\nmiditools.sendToMIDIjs = (midiEvent) => {\n    midiEvent.sendToMIDIjs();\n};\n\n/* ------------ MIDI.js ----------- */\n\n/**\n * a mapping of soundfont text names to true, false, or \"loading\".\n *\n * @memberof music21.miditools\n * @type {object}\n */\nmiditools.loadedSoundfonts = {};\n\n/**\n * Called after a soundfont has been loaded. The callback is better to be specified elsewhere\n * rather than overriding this important method.\n *\n * @memberof music21.miditools\n * @param {String} soundfont The name of the soundfont that was just loaded\n * @param {function} callback A function to be called after the soundfont is loaded.\n */\nmiditools.postLoadCallback = function postLoadCallback(soundfont, callback) {\n    // this should be bound to MIDI\n    if (debug) {\n        console.log('soundfont loaded about to execute callback.');\n        console.log('first playing two notes very softly -- seems to flush the buffer.');\n    }\n    $('.loadingSoundfont').remove();\n\n    const isFirefox = typeof InstallTrigger !== 'undefined';   // Firefox 1.0+\n    const isAudioTag = (MIDI.technology === 'HTML Audio Tag');\n    const instrumentObj = instrument.find(soundfont);\n    if (instrumentObj !== undefined) {\n        MIDI.programChange(instrumentObj.midiChannel, instrumentObj.midiProgram);\n        if (debug) {\n            console.log(soundfont + ' (' + instrumentObj.midiProgram + ') loaded on ', instrumentObj.midiChannel);\n        }\n        if ((isFirefox === false) && (isAudioTag === false)) {\n            const c = instrumentObj.midiChannel;\n            // Firefox ignores sound volume! so don't play! as does IE and others using HTML audio tag.\n            MIDI.noteOn(c, 36, 1, 0);     // if no notes have been played before then\n            MIDI.noteOff(c, 36, 1, 0.1);  // the second note to be played is always\n            MIDI.noteOn(c, 48, 1, 0.2);   // very clipped (on Safari at least)\n            MIDI.noteOff(c, 48, 1, 0.3);  // this helps a lot.\n            MIDI.noteOn(c, 60, 1, 0.3);   // chrome needs three?\n            MIDI.noteOff(c, 60, 1, 0.4);\n        }\n    }\n    if (callback !== undefined) {\n        callback(instrumentObj);\n    }\n    miditools.loadedSoundfonts[soundfont] = true;\n};\n\n\n/**\n * method to load soundfonts while waiting for other processes that need them\n * to load first.\n *\n * @memberof music21.miditools\n * @param {String} soundfont The name of the soundfont that was just loaded\n * @param {function} callback A function to be called after the soundfont is loaded.\n * @example\n * s = new music21.stream.Stream();\n * music21.miditools.loadSoundfont(\n *     'clarinet',\n *     function(i) {\n *         console.log('instrument object', i, 'loaded');\n *         s.instrument = i;\n * });\n */\nmiditools.loadSoundfont = function loadSoundfont(soundfont, callback) {\n    if (miditools.loadedSoundfonts[soundfont] === true) {\n        if (callback !== undefined) {\n            const instrumentObj = instrument.find(soundfont);\n            callback(instrumentObj);\n        }\n    } else if (miditools.loadedSoundfonts[soundfont] === 'loading') {\n        const waitThenCall = () => {\n            if (miditools.loadedSoundfonts[soundfont] === true) {\n                if (debug) {\n                    console.log('other process has finished loading; calling callback');\n                }\n                if (callback !== undefined) {\n                    const instrumentObj = instrument.find(soundfont);\n                    callback(instrumentObj);\n                }\n            } else {\n                if (debug) {\n                    console.log('waiting for other process load');\n                }\n                setTimeout(waitThenCall, 100);\n            }\n        };\n        waitThenCall();\n    } else {\n        miditools.loadedSoundfonts[soundfont] = 'loading';\n        if (debug) {\n            console.log('waiting for document ready');\n        }\n        $(document).ready(() => {\n            if (debug) {\n                console.log('document ready, waiting to load soundfont');\n            }\n            $(document.body).append($(\"<div class='loadingSoundfont'><b>Loading MIDI Instrument</b>: \" +\n                                      'audio will begin when this message disappears.</div>'));\n            MIDI.loadPlugin({\n                soundfontUrl: common.urls.soundfontUrl,\n                instrument: soundfont,\n                onsuccess: miditools.postLoadCallback.bind(MIDI, soundfont, callback),\n            });\n        });\n    }\n};\n\n/**\n * MidiPlayer -- an embedded midi player including the ability to create a\n * playback device.\n *\n * @class MidiPlayer\n * @memberOf music21.miditools\n * @property {number} speed - playback speed scaling (1=default).\n * @property {JQueryDOMObject|undefined} $playDiv - div holding the player,\n */\nexport class MidiPlayer {\n    constructor() {\n        this.player = new MIDI.Players.PlayInstance();\n        this.speed = 1.0;\n        this.$playDiv = undefined;\n    }\n    /**\n     * @param where\n     * @returns DOMElement\n     */\n    addPlayer(where) {\n        let $where = where;\n        if (where === undefined) {\n            where = document.body;\n        }\n        if (where.jquery === undefined) {\n            $where = $(where);\n        }\n        const $playDiv = $('<div class=\"midiPlayer\">');\n        const $controls = $('<div class=\"positionControls\">');\n        const $playPause = $('<input type=\"image\" src=\"' + this.playPng() +\n                '\" align=\"absmiddle\" value=\"play\" class=\"playPause\">');\n        const $stop = $('<input type=\"image\" src=\"' + this.stopPng() +\n                '\" align=\"absmiddle\" value=\"stop\" class=\"stopButton\">');\n\n        $playPause.on('click', this.pausePlayStop.bind(this));\n        $stop.on('click', this.stopButton.bind(this));\n        $controls.append($playPause);\n        $controls.append($stop);\n        $playDiv.append($controls);\n\n        const $time = $('<div class=\"timeControls\">');\n        const $timePlayed = $('<span class=\"timePlayed\">0:00</span>');\n        const $capsule = $('<span class=\"capsule\"><span class=\"cursor\"></span></span>');\n        const $timeRemaining = $('<span class=\"timeRemaining\">-0:00</span>');\n        $time.append($timePlayed);\n        $time.append($capsule);\n        $time.append($timeRemaining);\n        $playDiv.append($time);\n\n        $where.append($playDiv);\n        this.$playDiv = $playDiv;\n        return $playDiv;\n    }\n\n    stopButton() {\n        this.pausePlayStop('yes');\n    }\n\n    playPng() {\n        return common.urls.midiPlayer + '/play.png';\n    }\n    pausePng() {\n        return common.urls.midiPlayer + '/pause.png';\n    }\n    stopPng() {\n        return common.urls.midiPlayer + '/stop.png';\n    }\n\n    pausePlayStop(stop) {\n        let d;\n        if (this.$playDiv === undefined) {\n            d = { src: 'doesnt matter' };\n        } else {\n            d = this.$playDiv.find('.playPause')[0];\n        }\n        if (stop === 'yes') {\n            this.player.stop();\n            d.src = this.playPng();\n        } else if (this.player.playing || stop === 'pause') {\n            d.src = this.playPng();\n            this.player.pause(true);\n        } else {\n            d.src = this.pausePng();\n            this.player.resume();\n        }\n    }\n\n\n    base64Load(b64data) {\n        const player = this.player;\n        player.timeWarp = this.speed;\n\n        const m21midiplayer = this;\n        miditools.loadSoundfont('acoustic_grand_piano', () => {\n            player.loadFile(b64data, () => {   // success\n                m21midiplayer.fileLoaded();\n            },\n            undefined,  // loading\n            (e) => {  // failure\n                console.log(e);\n            });\n        });\n    }\n\n    songFinished() {\n        this.pausePlayStop('yes');\n    }\n\n    fileLoaded() {\n        this.updatePlaying();\n    }\n\n    startAndUpdate() {\n        this.player.start();\n        this.updatePlaying();\n    }\n\n\n    updatePlaying() {\n        const self = this;\n        const player = this.player;\n        if (this.$playDiv === undefined) {\n            return;\n        }\n        const $d = this.$playDiv;\n        // update the timestamp\n        const timePlayed = $d.find('.timePlayed')[0];\n        const timeRemaining = $d.find('.timeRemaining')[0];\n        const timeCursor = $d.find('.cursor')[0];\n        const $capsule = $d.find('.capsule');\n        //\n        eventjs.add($capsule[0], 'drag', (event, self) => {\n            eventjs.cancel(event);\n            const player = this.player;\n            player.currentTime = (self.x) / 420 * player.endTime;\n            if (player.currentTime < 0) {\n                player.currentTime = 0;\n            }\n            if (player.currentTime > player.endTime) {\n                player.currentTime = player.endTime;\n            }\n            if (self.state === 'down') {\n                this.pausePlayStop('pause');\n            } else if (self.state === 'up') {\n                this.pausePlayStop('play');\n            }\n        });\n        //\n        function timeFormatting(n) {\n            const minutes = n / 60 >> 0;\n            let seconds = String(n - (minutes * 60) >> 0);\n            if (seconds.length === 1) {\n                seconds = '0' + seconds;\n            }\n            return minutes + ':' + seconds;\n        }\n\n        player.setAnimation((data) => {\n            const percent = data.now / data.end;\n            const now = data.now >> 0; // where we are now\n            const end = data.end >> 0; // end of song\n            if (now === end) { // go to next song\n                self.songFinished();\n            }\n            // display the information to the user\n            timeCursor.style.width = (percent * 100) + '%';\n            timePlayed.innerHTML = timeFormatting(now);\n            timeRemaining.innerHTML = '-' + timeFormatting(end - now);\n        });\n    }\n}\nmiditools.MidiPlayer = MidiPlayer;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/keyboard -- PianoKeyboard rendering and display objects\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\n\n// Minimum usage:\n\n// var kd = document.getElementById('keyboardDiv');\n// k = new music21.keyboard.Keyboard();\n// k.appendKeyboard(kd, 6, 57); // 88 key keyboard\n\n// configurable:\n// k.scaleFactor = 1.2;  // default 1\n// k.whiteKeyWidth = 40; // default 23\nimport * as $ from 'jquery';\nimport * as MIDI from 'MIDI';\n\nimport { common } from './common';\nimport { miditools } from './miditools';\nimport { pitch } from './pitch';\n\n\n/**\n * Keyboard module, see {@link music21.keyboard} namespace\n *\n * @exports music21/keyboard\n */\n/**\n * keyboard namespace -- tools for creating an onscreen keyboard and interacting with it.\n *\n * @namespace music21.keyboard\n * @memberof music21\n * @requires music21/pitch\n * @requires music21/common\n * @requires music21/miditools\n * @requires jquery\n * @requires MIDI\n */\nexport const keyboard = {};\n/**\n * Represents a single Key\n *\n * @class Key\n * @memberof music21.keyboard\n * @property {Array<function>} callbacks - called when key is clicked/selected\n * @property {number} [scaleFactor=1]\n * @property {music21.keyboard.Keyboard|undefined} parent\n * @property {Int} id - midinumber associated with the key.\n * @property {music21.pitch.Pitch|undefined} pitchObj\n * @property {DOMObject|undefined} svgObj - SVG representing the drawing of the key\n * @property {DOMObject|undefined} noteNameSvgObj - SVG representing the note name drawn on the key\n * @property {string} keyStyle='' - css style information for the key\n * @property {string} keyClass='' - css class information for the key (\"keyboardkey\" + this is the class)\n * @property {number} width - width of key\n * @property {number} height - height of key\n */\nexport class Key {\n    constructor() {\n        this.classes = ['Key']; // name conflict with key.Key\n        this.callbacks = [];\n        this.scaleFactor = 1;\n        this.parent = undefined;\n        this.id = 0;\n        this.width = 23;\n        this.height = 120;\n        this.pitchObj = undefined;\n        this.svgObj = undefined;\n        this.noteNameSvgObj = undefined;\n        this.keyStyle = '';\n        this.keyClass = '';\n    }\n    /**\n     * Gets an SVG object for the key\n     *\n     * @method music21.keyboard.Key#makeKey\n     * @memberof music21.keyboard.Key\n     * @param {number} startX - X position in pixels from left of keyboard to draw key at\n     * @returns {DOMObject} a SVG rectangle for the key\n     */\n    makeKey(startX) {\n        const keyattrs = {\n            style: this.keyStyle,\n            x: startX,\n            y: 0,\n            'class': 'keyboardkey ' + this.keyClass,\n            'id': this.id,\n            width: this.width * this.scaleFactor,\n            height: this.height * this.scaleFactor,\n            rx: 3,\n            ry: 3,\n        };\n        const keyDOM = common.makeSVGright('rect', keyattrs);\n        for (const x in this.callbacks) {\n            if ({}.hasOwnProperty.call(this.callbacks, x)) {\n                keyDOM.addEventListener(x, this.callbacks[x], false);\n            }\n        }\n        this.svgObj = keyDOM;\n        return keyDOM;\n    }\n    /**\n     * Adds a circle (red) on the key (to mark middle C etc.)\n     *\n     * @method music21.keyboard.Key#addCircle\n     * @param {string} [strokeColor='red']\n     * @returns {DOMObject}\n     */\n    addCircle(strokeColor) {\n        if ((this.svgObj === undefined) ||\n                (this.parent === undefined) ||\n                (this.parent.svgObj === undefined)\n        ) {\n            return undefined;\n        }\n        if (strokeColor === undefined) {\n            strokeColor = 'red';\n        }\n        const x = parseInt(this.svgObj.getAttribute('x'));\n        const cx = x + this.parent.scaleFactor * (this.width) / 2;\n        // console.log('cx', cx);\n        const keyattrs = {\n            stroke: strokeColor,\n            'stroke-width': 3,\n            fill: 'none',\n            cx,\n            cy: (this.height - 10) * this.parent.scaleFactor,\n            'class': 'keyboardkeyannotation',\n            r: this.width * this.parent.scaleFactor / 4,\n        };\n\n        const circleDom = common.makeSVGright('circle', keyattrs);\n        this.parent.svgObj.appendChild(circleDom);\n        // console.log(circleDom);\n        return circleDom;\n    }\n    /**\n     * Adds the note name on the key\n     *\n     * @method music21.keyboard.Key#addNoteName\n     * @param {Boolean} [labelOctaves=false] - use octave numbers too?\n     * @returns {DOMObject}\n     */\n    addNoteName(labelOctaves) {\n        if ((this.svgObj === undefined)\n                || (this.parent === undefined)\n                || (this.parent.svgObj === undefined)) {\n            return this;\n        }\n        if ((this.id === 0) && (this.pitchObj === undefined)) {\n            return this;\n        } else if (this.pitchObj === undefined) {\n            this.pitchObj = new pitch.Pitch();\n            this.pitchObj.ps = this.id;\n        }\n        if ((this.pitchObj.accidental !== undefined) &&\n                (this.pitchObj.accidental.alter !== 0)) {\n            return this;\n        }\n        let x = parseInt(this.svgObj.getAttribute('x'));\n        let idStr = this.pitchObj.name;\n        let fontSize = 14;\n        if (labelOctaves === true) {\n            idStr = this.pitchObj.nameWithOctave;\n            fontSize = 12;\n            x -= 2;\n        }\n        fontSize = Math.floor(fontSize * parent.scaleFactor);\n\n        let textfill = 'white';\n        if (this.keyClass === 'whitekey') {\n            textfill = 'black';\n        }\n        const textattrs = {\n            fill: textfill,\n            x: x + this.parent.scaleFactor * (this.width / 2 - 5),\n            y: this.parent.scaleFactor * (this.height - 20),\n            'class': 'keyboardkeyname',\n            'font-size': fontSize,\n        };\n\n        const textDom = common.makeSVGright('text', textattrs);\n        const textNode = document.createTextNode(idStr);\n        textDom.appendChild(textNode);\n        this.noteNameSvgObj = textDom; // store for removing...\n        this.parent.svgObj.appendChild(textDom);\n        return this;\n    }\n    /**\n     * Removes the note name from the key (if exists)\n     *\n     * @method music21.keyboard.Key#removeNoteName\n     * @returns {undefined}\n     */\n    removeNoteName() {\n        if ((this.svgObj === undefined)\n                || (this.parent === undefined)\n                || (this.parent.svgObj === undefined)\n        ) {\n            return;\n        }\n        if (this.noteNameSvgObj === undefined) {\n            return;\n        }\n        if (this.noteNameSvgObj.parentNode === this.parent.svgObj) {\n            this.parent.svgObj.removeChild(this.noteNameSvgObj);\n        }\n        this.noteNameSvgObj = undefined;\n    }\n\n}\nkeyboard.Key = Key;\n\n/**\n * Defaults for a WhiteKey (width, height, keyStyle, keyClass)\n *\n * @class WhiteKey\n * @memberof music21.keyboard\n * @extends music21.keyboard.Key\n */\nexport class WhiteKey extends Key {\n    constructor() {\n        super();\n        this.classes.push('WhiteKey');\n        this.width = 23;\n        this.height = 120;\n        this.keyStyle = 'fill:#fffff6;stroke:black';\n        this.keyClass = 'whitekey';\n    }\n}\nkeyboard.WhiteKey = WhiteKey;\n/**\n * Defaults for a BlackKey (width, height, keyStyle, keyClass)\n *\n * @class BlackKey\n * @memberof music21.keyboard\n * @extends music21.keyboard.Key\n */\nexport class BlackKey extends Key {\n    constructor() {\n        super();\n        this.classes.push('BlackKey');\n        this.width = 13;\n        this.height = 80;\n        this.keyStyle = 'fill:black;stroke:black';\n        this.keyClass = 'blackkey';\n    }\n}\n\nkeyboard.BlackKey = BlackKey;\n\n\n/**\n * A Class representing a whole Keyboard full of keys.\n *\n * @class Keyboard\n * @memberof music21.keyboard\n * @property {number} whiteKeyWidth - default 23\n * @property {number} scaleFactor - default 1\n * @property {object} keyObjects - a mapping of id to {@link music21.keyboard.Key} objects\n * @property {DOMObject} svgObj - the SVG object of the keyboard\n * @property {Boolean} markC - default true\n * @property {Boolean} showNames - default false\n * @property {Boolean} showOctaves - default false\n * @property {string} startPitch - default \"C3\"\n * @property {string} endPitch - default \"C5\"\n * @property {Boolean} hideable - default false -- add a way to hide and show keyboard\n * @property {Boolean} scrollable - default false -- add scroll bars to change octave\n */\nexport class Keyboard {\n    constructor() {\n        this.whiteKeyWidth = 23;\n        this._defaultWhiteKeyWidth = 23;\n        this._defaultBlackKeyWidth = 13;\n        this.scaleFactor = 1;\n        this.height = 120; // does nothing right now...\n        this.keyObjects = {};\n        this.svgObj = undefined;\n\n        this.markC = true;\n        this.showNames = false;\n        this.showOctaves = false;\n\n        this.startPitch = 'C3';\n        this.endPitch = 'C5';\n        this._startDNN = undefined;\n        this._endDNN = undefined;\n\n        this.hideable = false;\n        this.scrollable = false;\n        /**\n         * An object of callbacks on events.\n         *\n         * default:\n         *\n         * - click: this.clickhandler\n         *\n         * @name callbacks\n         * @type {object}\n         * @memberof music21.keyboard.Keyboard#\n         */\n        this.callbacks = {\n            click: this.clickhandler,\n        };\n        //   more accurate offsets from http://www.mathpages.com/home/kmath043.htm\n        this.sharpOffsets = { 0: 14.3333, 1: 18.6666, 3: 13.25, 4: 16.25, 5: 19.75 };\n    }\n    /**\n     * Redraws the SVG associated with this Keyboard\n     *\n     * @method music21.keyboard.Keyboard#redrawSVG\n     * @returns {DOMObject} new svgDOM\n     */\n    redrawSVG() {\n        if (this.svgObj === undefined) {\n            return undefined;\n        }\n        const oldSVG = this.svgObj;\n        const svgParent = oldSVG.parentNode;\n        this.keyObjects = {};\n        const svgDOM = this.createSVG();\n        svgParent.replaceChild(svgDOM, oldSVG);\n        return svgDOM;\n    }\n    /**\n     * Appends a keyboard to the `where` parameter\n     *\n     * @method music21.keyboard.Keyboard#appendKeyboard\n     * @param {JQueryDOMObject|DOMObject} [where]\n     * @returns {music21.keyboard.Keyboard} this\n     */\n    appendKeyboard(where) {\n        if (where === undefined) {\n            where = document.body;\n        } else if (where.jquery !== undefined) {\n            where = where[0];\n        }\n\n        let svgDOM = this.createSVG();\n\n        if (this.scrollable) {\n            svgDOM = this.wrapScrollable(svgDOM)[0];\n        }\n\n        if (this.hideable) {\n            // make it so the keyboard can be shown or hidden...\n            this.appendHideableKeyboard(where, svgDOM);\n        } else {\n            where.appendChild(svgDOM); // svg must use appendChild, not append.\n        }\n        return this;\n    }\n    /**\n     * Handle a click on a given SVG object\n     *\n     * @method music21.keyboard.Keyboard#clickhandler\n     * @param {DOMObject} keyRect - the dom object with the keyboard.\n     */\n    clickhandler(keyRect) {\n        // to-do : integrate with jazzHighlight...\n        const id = keyRect.id;\n        const thisKeyObject = this.keyObjects[id];\n        if (thisKeyObject === undefined) {\n            return; // not on keyboard;\n        }\n        const storedStyle = thisKeyObject.keyStyle;\n        let fillColor = '#c0c000';\n        if (thisKeyObject.keyClass === 'whitekey') {\n            fillColor = 'yellow';\n        }\n        keyRect.setAttribute('style', 'fill:' + fillColor + ';stroke:black');\n        miditools.loadSoundfont('acoustic_grand_piano', (i) => {\n            MIDI.noteOn(i.midiChannel, id, 100, 0);\n            MIDI.noteOff(i.midiChannel, id, 500);\n        });\n        setTimeout(() => {\n            keyRect.setAttribute('style', storedStyle);\n        }, 500);\n    }\n\n    /**\n     * Draws the SVG associated with this Keyboard\n     *\n     * @method music21.keyboard.Keyboard#createSVG\n     * @returns {DOMObject} new svgDOM\n     */\n    createSVG() {\n        // DNN = pitch.diatonicNoteNum;\n        // this._endDNN = final key note. I.e., the last note to be included, not the first note not included.\n        // 6, 57 gives a standard 88-key keyboard;\n        if (this._startDNN === undefined) {\n            if (typeof this.startPitch === 'string') {\n                const tempP = new pitch.Pitch(this.startPitch);\n                this._startDNN = tempP.diatonicNoteNum;\n            }  else {\n                this._startDNN = this.startPitch;\n            }\n        }\n\n        if (this._endDNN === undefined) {\n            if (typeof this.endPitch === 'string') {\n                const tempP = new pitch.Pitch(this.endPitch);\n                this._endDNN = tempP.diatonicNoteNum;\n            } else {\n                this._endDNN = this.endPitch;\n            }\n        }\n\n        let currentIndex = (this._startDNN - 1) % 7; // C = 0\n        const keyboardDiatonicLength = 1 + this._endDNN - this._startDNN;\n        const totalWidth = this.whiteKeyWidth * this.scaleFactor * keyboardDiatonicLength;\n        const height = 120 * this.scaleFactor;\n        const heightString = height.toString() + 'px';\n\n        const svgDOM = common.makeSVGright('svg', {\n            'xml:space': 'preserve',\n            'height': heightString,\n            'width': totalWidth.toString() + 'px',\n            'class': 'keyboardSVG',\n        });\n        const movingPitch = new pitch.Pitch('C4');\n        const blackKeys = [];\n        const thisKeyboardObject = this;\n\n        for (let wki = 0; wki < keyboardDiatonicLength; wki++) {\n            movingPitch.diatonicNoteNum = this._startDNN + wki;\n            const wk = new keyboard.WhiteKey();\n            wk.id = movingPitch.midi;\n            wk.parent = this;\n            this.keyObjects[movingPitch.midi] = wk;\n            wk.scaleFactor = this.scaleFactor;\n            wk.width = this.whiteKeyWidth;\n            wk.callbacks.click = function whitekeyCallbacksClick() { thisKeyboardObject.clickhandler(this); };\n\n            const wkSVG = wk.makeKey(this.whiteKeyWidth * this.scaleFactor * wki);\n            svgDOM.appendChild(wkSVG);\n\n            if (((currentIndex === 0)\n                    || (currentIndex === 1)\n                    || (currentIndex === 3)\n                    || (currentIndex === 4)\n                    || (currentIndex === 5)) && (wki !== keyboardDiatonicLength - 1)) {\n                // create but do not append blackkey to the right of whitekey\n                const bk = new keyboard.BlackKey();\n                bk.id = movingPitch.midi + 1;\n                this.keyObjects[movingPitch.midi + 1] = bk;\n                bk.parent = this;\n\n                bk.scaleFactor = this.scaleFactor;\n                bk.width = this._defaultBlackKeyWidth * this.whiteKeyWidth / this._defaultWhiteKeyWidth;\n                bk.callbacks.click = function blackKeyClicksCallback() { thisKeyboardObject.clickhandler(this); };\n\n                let offsetFromWhiteKey = this.sharpOffsets[currentIndex];\n                offsetFromWhiteKey *= this.whiteKeyWidth / this._defaultWhiteKeyWidth * this.scaleFactor;\n                const bkSVG = bk.makeKey(this.whiteKeyWidth * this.scaleFactor * wki + offsetFromWhiteKey);\n                blackKeys.push(bkSVG);\n            }\n            currentIndex += 1;\n            currentIndex %= 7;\n        }\n        // append blackkeys later since they overlap white keys;\n        for (let bki = 0; bki < blackKeys.length; bki++) {\n            svgDOM.appendChild(blackKeys[bki]);\n        }\n\n        this.svgObj = svgDOM;\n        if (this.markC) { this.markMiddleC(); }\n        if (this.showNames) { this.markNoteNames(this.showOctaves); }\n\n        return svgDOM;\n    }\n\n    /**\n     * Puts a circle on middle c.\n     *\n     * @method music21.keyboard.Keyboard#markMiddleC\n     * @param {string} [strokeColor='red']\n     */\n    markMiddleC(strokeColor) {\n        const midC = this.keyObjects[60];\n        if (midC !== undefined) {\n            midC.addCircle('red');\n        }\n    }\n    /**\n     * Puts note names on every white key.\n     *\n     * @method music21.keyboard.Keyboard#markNoteNames\n     * @param {Boolean} [labelOctaves=false]\n     */\n    markNoteNames(labelOctaves) {\n        this.removeNoteNames(); // in case...\n        for (const midi in this.keyObjects) {\n            if ({}.hasOwnProperty.call(this.keyObjects, midi)) {\n                const keyObj = this.keyObjects[midi];\n                keyObj.addNoteName(labelOctaves);\n            }\n        }\n    }\n\n    /**\n     * Remove note names on the keys, if they exist\n     *\n     * @method music21.keyboard.Keyboard#removeNoteNames\n     */\n    removeNoteNames() {\n        for (const midi in this.keyObjects) {\n            if ({}.hasOwnProperty.call(this.keyObjects, midi)) {\n                const keyObj = this.keyObjects[midi];\n                keyObj.removeNoteName();\n            }\n        }\n    }\n\n\n    /**\n     * Wraps the SVG object inside a scrollable set of buttons\n     *\n     * Do not call this directly, just use createSVG after changing the\n     * scrollable property on the keyboard to True.\n     *\n     * @method music21.keyboard.Keyboard#wrapScrollable\n     * @param {DOMObject} svgDOM\n     * @returns {JQueryDOMObject}\n     */\n    wrapScrollable(svgDOM) {\n        const $wrapper = $(\"<div class='keyboardScrollableWrapper'></div>\").css({\n            display: 'inline-block',\n        });\n        const $bDown = $(\"<button class='keyboardOctaveDown'>&lt;&lt;</button>\").css({\n            'font-size': Math.floor(this.scaleFactor * 15).toString() + 'px',\n        }).bind('click', () => {\n            miditools.transposeOctave -= 1;\n            this._startDNN -= 7;\n            this._endDNN -= 7;\n            this.redrawSVG();\n        });\n        const $bUp = $(\"<button class='keyboardOctaveUp'>&gt;&gt;</button>\").css({\n            'font-size': Math.floor(this.scaleFactor * 15).toString() + 'px',\n        }).bind('click', () => {\n            miditools.transposeOctave += 1;\n            this._startDNN += 7;\n            this._endDNN += 7;\n            this.redrawSVG();\n        });\n        const $kWrapper = $(\"<div style='display:inline-block; vertical-align: middle' class='keyboardScrollableInnerDiv'></div>\");\n        $kWrapper[0].appendChild(svgDOM);\n        $wrapper.append($bDown);\n        $wrapper.append($kWrapper);\n        $wrapper.append($bUp);\n        return $wrapper;\n    }\n    /**\n     * Puts a hideable keyboard inside a Div with the proper controls.\n     *\n     * Do not call this directly, just use createSVG after changing the\n     * hideable property on the keyboard to True.\n     *\n     * @method music21.keyboard.Keyboard#appendHideableKeyboard\n     * @param {DOMObject} where\n     * @param {DOMObject} keyboardSVG\n     */\n    appendHideableKeyboard(where, keyboardSVG) {\n        const $container = $(\"<div class='keyboardHideableContainer'/>\");\n        const $bInside = $(\"<div class='keyboardToggleInside'>↥</div>\").css({\n            display: 'inline-block',\n            'padding-top': '40px',\n            'font-size': '40px',\n        });\n        const $b = $(\"<div class='keyboardToggleOutside'/>\").css({\n            display: 'inline-block',\n            'vertical-align': 'top',\n            background: 'white',\n        });\n        $b.append($bInside);\n        $b.data('defaultDisplay', $container.find('.keyboardSVG').css('display'));\n        $b.data('state', 'down');\n        $b.click(keyboard.triggerToggleShow);\n        const $explain = $(\"<div class='keyboardExplain'>Show keyboard</div>\")\n        .css({\n            'display': 'none',\n            'background-color': 'white',\n            'padding': '10px 10px 10px 10px',\n            'font-size': '12pt',\n        });\n        $b.append($explain);\n        $container.append($b);\n        $container[0].appendChild(keyboardSVG); // svg must use appendChild, not append.\n        $(where).append($container);\n        return $container;\n    }\n}\n\n/**\n * triggerToggleShow -- event for keyboard is shown or hidden.\n *\n * @function music21.keyboard.triggerToggleShow\n * @param {Event} e\n */\nkeyboard.triggerToggleShow = function triggerToggleShow(e) {\n    // \"this\" refers to the object clicked\n    // e -- event is not used.\n    const $t = $(this);\n    const state = $t.data('state');\n    const $parent = $t.parent();\n    let $k = $parent.find('.keyboardScrollableWrapper');\n    if ($k.length === 0) { // not scrollable\n        $k = $parent.find('.keyboardSVG');\n    }\n    const $bInside = $t.find('.keyboardToggleInside');\n    const $explain = $parent.find('.keyboardExplain');\n    if (state === 'up') {\n        $bInside.text('↥');\n        $bInside.css('padding-top', '40px');\n        $explain.css('display', 'none');\n        let dd = $t.data('defaultDisplay');\n        if (dd === undefined) {\n            dd = 'inline';\n        }\n        $k.css('display', dd);\n        $t.data('state', 'down');\n    } else {\n        $k.css('display', 'none');\n        $explain.css('display', 'inline-block');\n        $bInside.text('↧');\n        $bInside.css('padding-top', '10px');\n        $t.data('state', 'up');\n    }\n};\n\n/**\n * highlight the keyboard stored in \"this\" appropriately\n *\n * @function music21.keyboard.jazzHighlight\n * @param {Event} e\n * @example\n * var midiCallbacksPlay = [music21.miditools.makeChords,\n *                          music21.miditools.sendToMIDIjs,\n *                          music21.keyboard.jazzHighlight.bind(k)];\n */\nkeyboard.jazzHighlight = function jazzHighlight(e) {\n    // e is a miditools.event object -- call with this = keyboard.Keyboard object via bind...\n    if (e === undefined) {\n        return;\n    }\n    if (e.noteOn) {\n        const midiNote = e.midiNote;\n        if (this.keyObjects[midiNote] !== undefined) {\n            const keyObj = this.keyObjects[midiNote];\n            const svgObj = keyObj.svgObj;\n            let intensityRGB = '';\n            let normalizedVelocity = (e.velocity + 25) / 127;\n            if (normalizedVelocity > 1) {\n                normalizedVelocity = 1.0;\n            }\n\n            if (keyObj.keyClass === 'whitekey') {\n                const intensity = normalizedVelocity.toString();\n                intensityRGB = 'rgba(255, 255, 0, ' + intensity + ')';\n            } else {\n                const intensity = (Math.floor(normalizedVelocity * 255)).toString();\n                intensityRGB = 'rgb(' + intensity + ',' + intensity + ',0)';\n                // console.log(intensityRGB);\n            }\n            svgObj.setAttribute('style', 'fill:' + intensityRGB + ';stroke:black');\n        }\n    } else if (e.noteOff) {\n        const midiNote = e.midiNote;\n        if (this.keyObjects[midiNote] !== undefined) {\n            const keyObj = this.keyObjects[midiNote];\n            const svgObj = keyObj.svgObj;\n            svgObj.setAttribute('style', keyObj.keyStyle);\n        }\n    }\n}; // call this with a bind(keyboard.Keyboard object)...\n\nkeyboard.Keyboard = Keyboard;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/meter -- TimeSignature objects\n *\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as Vex from 'vexflow';\nimport { base } from './base';\nimport { duration } from './duration';\n\n/**\n * meter module. See {@link music21.meter} namespace for details.\n *\n * @exports music21/meter\n */\n\n/**\n * Meter and TimeSignature Classes (esp. {@link music21.meter.TimeSignature} ) and methods.\n *\n * @namespace music21.meter\n * @memberof music21\n * @requires music21/base\n * @requires music21/duration\n */\nexport const meter = {};\n\n\n/**\n * A MUCH simpler version of the music21p TimeSignature object.\n *\n * @class TimeSignature\n * @memberof music21.meter\n * @param {string} meterString - a string (\"4/4\", \"3/8\" etc.) to initialize the TimeSignature.\n * @property {Int} [numerator=4]\n * @property {Int} [denominator=4]\n * @property {Array<Array<Int>>} beatGroups - groupings of beats; inner arrays are numerator, denominator\n * @property {string} ratioString - a string like \"4/4\"\n * @property {music21.duration.Duration} barDuration - a Duration object representing the expressed total length of the TimeSignature.\n */\nexport class TimeSignature extends base.Music21Object {\n    constructor(meterString) {\n        super();\n        this.classes.push('TimeSignature');\n        this._numerator = 4;\n        this._denominator = 4;\n        this.beatGroups = [];\n        if (typeof (meterString) === 'string') {\n            this.ratioString = meterString;\n        }\n    }\n    get numerator() {\n        return this._numerator;\n    }\n    set numerator(s) {\n        this._numerator = s;\n    }\n    get denominator() {\n        return this._denominator;\n    }\n    set denominator(s) {\n        this._denominator = s;\n    }\n    get ratioString() {\n        return this.numerator.toString() + '/' + this.denominator.toString();\n    }\n    set ratioString(meterString) {\n        const meterList = meterString.split('/');\n        this.numerator = parseInt(meterList[0]);\n        this.denominator = parseInt(meterList[1]);\n    }\n    get barDuration() {\n        const ql = 4.0 * this._numerator / this._denominator;\n        return new duration.Duration(ql);\n    }\n    /**\n     * Compute the Beat Group according to this time signature.\n     *\n     * @memberof music21.meter.TimeSignature\n     * @returns {Array<Array<Int>>} a list of numerator and denominators, find a list of beat groups.\n     */\n    computeBeatGroups() {\n        const tempBeatGroups = [];\n        let numBeats = this.numerator;\n        let beatValue = this.denominator;\n        if (beatValue < 8 && numBeats >= 5) {\n            const beatsToEighthNoteRatio = 8 / beatValue; // hopefully Int -- right Brian Ferneyhough?\n            beatValue = 8;\n            numBeats *= beatsToEighthNoteRatio;\n        }\n\n        if (beatValue >= 8) {\n            while (numBeats >= 5) {\n                tempBeatGroups.push([3, beatValue]);\n                numBeats -= 3;\n            }\n            if (numBeats === 4) {\n                tempBeatGroups.push([2, beatValue]);\n                tempBeatGroups.push([2, beatValue]);\n            } else if (numBeats > 0) {\n                tempBeatGroups.push([numBeats, beatValue]);\n            }\n        } else if (beatValue === 2) {\n            tempBeatGroups.push([1, 2]);\n        } else if (beatValue <= 1) {\n            tempBeatGroups.push([1, 1]);\n        } else { // 4/4, 2/4, 3/4, standard stuff\n            tempBeatGroups.push([2, 8]);\n        }\n        return tempBeatGroups;\n    }\n    /**\n     * Compute the Beat Group according to this time signature for VexFlow. For beaming.\n     *\n     * @memberof music21.meter.TimeSignature\n     * @param {Vex} Vex - a reference to the Vex object\n     * @returns {Array<Vex.Flow.Fraction>} a list of numerator and denominator groups, for VexFlow\n     */\n    vexflowBeatGroups() {\n        let tempBeatGroups;\n        if (this.beatGroups.length > 0) {\n            tempBeatGroups = this.beatGroups;\n        } else {\n            tempBeatGroups = this.computeBeatGroups();\n        }\n        // console.log(tempBeatGroups);\n        const vfBeatGroups = [];\n        for (let i = 0; i < tempBeatGroups.length; i++) {\n            const bg = tempBeatGroups[i];\n            vfBeatGroups.push(new Vex.Flow.Fraction(bg[0], bg[1]));\n        }\n        return vfBeatGroups;\n\n        //  if (numBeats % 3 == 0 && beatValue < 4) {\n        //  // 6/8, 3/8, 9/8, etc.\n        //  numBeats = numBeats / 3;\n        //  beatValue = beatValue / 3;\n        //  }\n    }\n}\n\nmeter.TimeSignature = TimeSignature;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/renderOptions -- an object that defines the render options for a Stream\n *\n * note: no parallel in music21p\n *\n * Copyright (c) 2013-14, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–14, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { common } from './common';\n/**\n * renderOptions module, see {@link music21.renderOptions}\n *\n * @exports music21/renderOptions\n */\n/**\n * Options for rendering a stream\n *\n * @namespace music21.renderOptions\n * @memberof music21\n */\nexport const renderOptions = {};\n\n/**\n * An object that contains information on rendering the current stream\n *\n * Found on every Stream as `.renderOptions`\n *\n * @class RenderOptions\n * @memberof music21.renderOptions\n */\nexport class RenderOptions {\n    constructor() {\n        const defaultOptions = {\n            displayClef: true,\n            displayTimeSignature: true,\n            displayKeySignature: true,\n\n            scaleFactor: { x: 0.7, y: 0.7 },\n\n            top: 0,\n            left: undefined,\n            width: undefined,\n            overriddenWidth: undefined,\n            height: undefined,\n            naiveHeight: 120,\n\n            systemIndex: 0,\n            partIndex: 0,\n            measureIndex: 0,\n\n            systemMeasureIndex: 0,\n            systemPadding: undefined,\n            naiveSystemPadding: 40,\n\n            stemDirection: undefined,\n\n            maxSystemWidth: undefined,\n            rightBarline: undefined,\n            staffLines: 5,\n            staffConnectors: ['single', 'brace'],\n            staffPadding: 60,\n            events: {\n                'click': 'play',\n                'dblclick': undefined,\n                // resize\n            },\n            startNewSystem: false,\n            startNewPage: false,\n            showMeasureNumber: undefined,\n        };\n        common.merge(this, defaultOptions);\n    }\n}\nrenderOptions.RenderOptions = RenderOptions;\n","import * as $ from 'jquery';\nimport { common } from './common';\n\n/**\n * module with tools for working with Streams. See {@link music21.streamInteraction} namespace.\n *\n * @exports music21/streamInteraction\n */\n/**\n * Objects that work with Streams to provide interactions\n *\n * @namespace music21.streamInteraction\n * @memberof music21\n * @requires music21/common\n * @requires music21/stream\n */\nexport const streamInteraction = {};\n\n/**\n * Object for adding scrolling while playing.\n *\n * @class ScrollPlayer\n * @memberof music21.streamInteraction\n * @param {music21.stream.Stream} s -- Stream\n * @param {canvas} c -- canvas\n * @property {music21.streamInteraction.PixelMapper} pixelMapper - an object that can map current pixel to notes and vice versa.\n * @property {number} [tempo=s.tempo]\n * @property {number} lastX - last X value\n * @property {Int} lastNoteIndex - index of last note played\n * @property {SVGDOMObject} barDOM - DOM object representing the scrolling bar\n * @property {SVGDOMObject} svgDOM - DOM object holding the scrolling bar (overlaid on top of canvas)\n * @property {DOMObject} canvasParent - the parent DOM object for `this.canvas`\n * @property {Int} lastTimeout - a numerical reference to a timeout object created by `setTimeout`\n * @property {number} startTime - the time in ms when the scrolling started\n * @property {Int} [previousSystemIndex=0] - the last systemIndex being scrolled\n * @property {number} [eachSystemHeight=120] - currently all systems need to have the same height.\n * @property {Int} [timingMS=50] - amount of time between polls to scroll\n * @property {function} savedRenderOptionClick - starting ScrollPlayer overrides the `'click'` event for the stream, switching it to Stop. this saves it for restoring later.\n */\nexport class ScrollPlayer {\n    constructor(s, c) {\n        this.pixelMapper = new streamInteraction.PixelMapper(s);\n        this.stream = s;\n        this.canvas = c;\n        this.tempo = s.tempo;\n        this.lastX = 0;\n        this.lastNoteIndex = -1;\n        this.barDOM = undefined;\n        this.svgDOM = undefined;\n        this.canvasParent = undefined;\n        this.lastTimeout = undefined;\n        this.startTime = new Date().getTime();\n        this.previousSystemIndex = 0;\n        this.eachSystemHeight = 120;\n        this.timingMS = 50;\n        this.savedRenderOptionClick = undefined;\n        /**\n         * function, bound to `this` to scroll the barDOM.\n         *\n         * calls itself until a stop click is received or the piece ends.\n         *\n         * @method streamInteraction.ScrollPlayer#scrollScore\n         * @memberof music21.streamInteraction.ScrollPlayer\n         */\n        this.scrollScore = (function scrollScore() {\n            const timeSinceStartInMS = new Date().getTime() - this.startTime;\n            const offset = timeSinceStartInMS / 1000 * this.tempo / 60;\n            const pm = this.pixelMapper;\n            const systemIndex = pm.getSystemIndexAtOffset(offset);\n\n            if (systemIndex > this.previousSystemIndex) {\n                this.lastX = -100; // arbitrary negative...\n                this.previousSystemIndex = systemIndex;\n                this.barDOM.setAttribute('y', systemIndex * this.eachSystemHeight);\n            }\n            let x = pm.getXAtOffset(offset);\n            x = Math.floor(x);\n\n            // console.log(x);\n\n            if (x > this.lastX) {\n                this.barDOM.setAttribute('x', x);\n                this.lastX = x;\n            }\n            // pm is a pixelMap not a Stream\n            for (let j = 0; j < pm.allMaps.length; j++) {\n                const pmOff = pm.allMaps[j].offset;\n                if (j <= this.lastNoteIndex)  {\n                    continue;\n                } else if (Math.abs(offset - pmOff) > 0.1) {\n                    continue;\n                }\n                const elList = pm.allMaps[j].elements;\n                for (let elIndex = 0; elIndex < elList.length; elIndex++) {\n                    const el = elList[elIndex];\n                    if (el !== undefined && el.playMidi !== undefined) {\n                        el.playMidi(this.tempo);\n                    }\n                }\n                this.lastNoteIndex = j;\n            }\n            // console.log(x, offset);\n            // console.log(barDOM.setAttribute);\n            let newTimeout;\n            if (x < pm.maxX || systemIndex < pm.maxSystemIndex) {\n                // console.log(x, pm.maxX);\n                newTimeout = setTimeout(this.scrollScore, this.timingMS);\n                this.lastTimeout = newTimeout;\n            } else {\n                const fauxEvent = undefined;\n                this.stopPlaying(fauxEvent);\n            }\n        }).bind(this);\n    }\n\n\n    /**\n     * Create the scrollbar (barDOM), the svg to place it in (svgDOM)\n     * and append it over the stream.\n     *\n     * Sets as a consequence:\n     * - this.barDOM\n     * - this.svgDOM\n     * - this.eachSystemHeight\n     * - this.canvasParent\n     *\n     * @memberof music21.streamInteraction.ScrollPlayer\n     * @returns {SVGDOMObject} scroll bar\n     */\n    createScrollBar() {\n        const canvas = this.canvas;\n        const svgDOM = common.makeSVGright('svg', {\n            'height': canvas.height.toString() + 'px',\n            'width': canvas.width.toString() + 'px',\n            'style': 'position:absolute; top: 0px; left: 0px;',\n        });\n        const scaleY = this.stream.renderOptions.scaleFactor.y;\n        const eachSystemHeight = canvas.height / (scaleY * (this.pixelMapper.maxSystemIndex + 1));\n        const barDOM = common.makeSVGright('rect', {\n            width: 10,\n            height: eachSystemHeight - 6,  // small fudge for separation\n            x: this.pixelMapper.startX,\n            y: 3,\n            style: 'fill: rgba(255, 255, 20, .5);stroke:white',\n        });\n        barDOM.setAttribute('transform', 'scale(' + scaleY  + ')');\n        svgDOM.appendChild(barDOM);\n\n        const canvasParent = $(canvas).parent()[0];\n        canvasParent.appendChild(svgDOM);\n        this.barDOM = barDOM;\n        this.svgDOM = svgDOM;\n        this.canvasParent = canvasParent;\n        this.eachSystemHeight = eachSystemHeight;\n        return barDOM;\n    }\n\n    /**\n     * start playing! Create a scroll bar and start scrolling\n     *\n     * (set this to an event on stream, or something...)\n     *\n     * currently called from {@link music21.stream.Stream#scrollScoreStart} via\n     * {@link music21.stream.Stream#renderScrollableCanvas}. Will change.\n     *\n     * @memberof music21.streamInteraction.ScrollPlayer\n     */\n    startPlaying() {\n        this.createScrollBar();\n\n        this.savedRenderOptionClick = this.stream.renderOptions.events.click;\n        this.stream.renderOptions.events.click = (function startPlayingClick(e) { this.stopPlaying(e); }).bind(this);\n        this.stream.setRenderInteraction(this.canvasParent);\n        this.scrollScore();\n    }\n\n    /**\n     * Called when the ScrollPlayer should stop playing\n     *\n     * @memberof music21.streamInteraction.ScrollPlayer\n     * @param {DOMEvent} [event]\n     */\n    stopPlaying(event) {\n        this.stream.renderOptions.events.click = this.savedRenderOptionClick;\n        this.barDOM.setAttribute('style', 'display:none');\n        // TODO: generalize...\n        this.canvasParent.removeChild(this.svgDOM);\n        if (this.lastTimeout !== undefined) {\n            clearTimeout(this.lastTimeout);\n        }\n        this.stream.setRenderInteraction(this.canvasParent);\n        if (event !== undefined) {\n            event.stopPropagation();\n        }\n    }\n}\nstreamInteraction.ScrollPlayer = ScrollPlayer;\n\n\n/**\n * A `PixelMapper` is an object that knows how to map offsets to pixels on a flat Stream.\n *\n * Helper for ScrollPlayer and soon other places...\n *\n * @class PixelMapper\n * @memberof music21.streamInteraction\n * @param {music21.stream.Stream} s - stream object\n * @property {Array<music21.streamInteraction.PixelMap>} allMaps - a `PixelMap` object for each offset in the Stream and one additional one for the end of the Stream.\n * @property {music21.stream.Stream} s - stream object\n * @property {music21.stream.Stream} notesAndRests - `this.stream.flat.notesAndRests`\n * @property {number} pixelScaling - `this.stream.renderOptions.scaleFactor.x`\n * @property {number} startX - (readonly) starting x\n * @property {number} maxX - (readonly) ending x\n * @property {Int} maxSystemIndex - the index of the last system.\n */\nexport class PixelMapper {\n    constructor(s) {\n        this.allMaps = [];\n        this.stream = s;\n        this.notesAndRests = this.stream.flat.notesAndRests;\n        this.pixelScaling = s.renderOptions.scaleFactor.x;\n        this.processStream(s);\n    }\n    get startX() {\n        return this.allMaps[0].x;\n    }\n    get maxX() {\n        const m = this.allMaps[this.allMaps.length - 1];\n        return m.x;\n    }\n    get maxSystemIndex() {\n        return this.allMaps[this.allMaps.length - 1].systemIndex;\n    }\n    /**\n     * Creates `PixelMap` objects for every note in the stream, and an extra\n     * one mapping the end of the final offset.\n     *\n     * @memberof music21.streamInteraction.PixelMapper\n     * @returns {Array<music21.streamInteraction.PixelMap>}\n     */\n    processStream() {\n        const ns = this.notesAndRests;\n        for (let i = 0; i < ns.length; i++) {\n            const n = ns.get(i);\n            this.addNoteToMap(n);\n        }\n        // prepare final map.\n        const finalStave =  ns.get(-1).activeVexflowNote.stave;\n        const finalX = (finalStave.x + finalStave.width);\n        const endOffset = ns.get(-1).duration.quarterLength + ns.get(-1).offset;\n\n        const lastMap = new streamInteraction.PixelMap(this, endOffset);\n        lastMap.elements = [undefined];\n        lastMap.x = finalX;\n        lastMap.systemIndex = this.allMaps[this.allMaps.length - 1].systemIndex;\n        this.allMaps.push(lastMap);\n        return this.allMaps;\n    }\n\n\n    /**\n     * Adds a {@link music21.base.Music21Object}, usually a {@link music21.note.Note} object,\n     * to the maps for the PixelMapper if a {@link music21.streamInteraction.PixelMap} object\n     * already exists at that location, or creates a new `PixelMap` if one does not exist.\n     *\n     * @memberof music21.streamInteraction.PixelMapper\n     * @param {music21.base.Music21Object} n - note or other object\n     * @returns {music21.streamInteraction.PixelMap} PixelMap added to.\n     */\n    addNoteToMap(n) {\n        const currentOffset = n.offset;\n        const properMap = this.findMapForExactOffset(currentOffset);\n        if (properMap !== undefined) {\n            properMap.elements.push(n);\n            return properMap;\n        } else {\n            const pmap = new streamInteraction.PixelMap(this, currentOffset);\n            pmap.elements = [n];\n            this.allMaps.push(pmap);\n            return pmap;\n        }\n    }\n    /**\n     * Finds a `PixelMap` object if one matches this exact offset. Otherwise returns undefined\n     *\n     * @memberof music21.streamInteraction.PixelMapper\n     * @param {number} o offset\n     * @returns {music21.streamInteraction.PixelMap|undefined}\n     */\n    findMapForExactOffset(o) {\n        for (let j = this.allMaps.length - 1; j >= 0; j -= 1) {\n            // find the last map with this offset. searches backwards for speed.\n            if (this.allMaps[j].offset === o) {\n                return this.allMaps[j];\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     *  returns an array of two pixel maps: the previous/current one and the\n            next/current one (i.e., if the offset is exactly the offset of a pixel map\n            the prevNoteMap and nextNoteMap will be the same; similarly if the offset is\n            beyond the end of the score)\n\n     * @memberof music21.streamInteraction.PixelMapper\n     * @param {number} offset\n     * @returns {Array<music21.streamInteraction.PixelMap|undefined>} returns two PixelMaps; or either (but not both) can be undefined\n     * @example\n     * var s = new music21.tinyNotation.TinyNotation('3/4 c4 d8 e f4 g4 a4 b4');\n     * var can = s.appendNewCanvas();\n     * var pm = new music21.streamInteraction.PixelMapper(s);\n     * var pmaps = pm.getPixelMapsAropundOffset(1.25);\n     * var prev = pmaps[0];\n     * var next = pmaps[1];\n     * prev.offset\n     * // 1\n     * next.offset\n     * // 1.5\n     * prev.x\n     * // 97...\n     * next.x\n     * // 123...\n     */\n    getPixelMapsAroundOffset(offset) {\n        let prevNoteMap;\n        let nextNoteMap;\n        for (let i = 0; i < this.allMaps.length; i++) {\n            const thisMap = this.allMaps[i];\n            if (thisMap.offset <= offset) {\n                prevNoteMap = thisMap;\n            }\n            if (thisMap.offset >= offset) {\n                nextNoteMap = thisMap;\n                break;\n            }\n        }\n        if (prevNoteMap === undefined && nextNoteMap === undefined) {\n            const lastNoteMap = this.allMaps[this.allMaps.length - 1];\n            prevNoteMap = lastNoteMap;\n            nextNoteMap = lastNoteMap;\n        } else if (prevNoteMap === undefined) {\n            prevNoteMap = nextNoteMap;\n        } else if (nextNoteMap === undefined) {\n            nextNoteMap = prevNoteMap;\n        }\n        return [prevNoteMap, nextNoteMap];\n    }\n    /**\n     * Uses the stored offsetToPixelMaps to get the pixel X for the offset.\n     *\n     * @memberof music21.streamInteraction.PixelMapper\n     * @param {number} offset\n     * @param {Array<music21.streamInteraction.PixelMap>} offsetToPixelMaps\n     * @returns {number}\n     * @example\n     * var s = new music21.tinyNotation.TinyNotation('3/4 c4 d8 e f4 g4 a4 b4');\n     * var can = s.appendNewCanvas();\n     * var pm = new music21.streamInteraction.PixelMapper(s);\n     * pm.getXAtOffset(0.0); // exact placement of a note\n     * // 89.94...\n     * pm.getXAtOffset(0.5); // between two notes\n     * // 138.63...\n     */\n    getXAtOffset(offset) {\n        // returns the proper\n        const twoNoteMaps = this.getPixelMapsAroundOffset(offset);\n        const prevNoteMap = twoNoteMaps[0];\n        const nextNoteMap = twoNoteMaps[1];\n        const pixelScaling = this.pixelScaling;\n        const offsetFromPrev = offset - prevNoteMap.offset;\n        const offsetDistance = nextNoteMap.offset - prevNoteMap.offset;\n        let pixelDistance = nextNoteMap.x - prevNoteMap.x;\n        if (nextNoteMap.systemIndex !== prevNoteMap.systemIndex) {\n            const stave = prevNoteMap.elements[0].activeVexflowNote.stave;\n            pixelDistance = (stave.x + stave.width) * pixelScaling - prevNoteMap.x;\n        }\n        let offsetToPixelScale = 0;\n        if (offsetDistance !== 0) {\n            offsetToPixelScale = pixelDistance / offsetDistance;\n        } else {\n            offsetToPixelScale = 0;\n        }\n        const pixelsFromPrev = offsetFromPrev * offsetToPixelScale;\n        const offsetX = prevNoteMap.x + pixelsFromPrev;\n        return offsetX / pixelScaling;\n    }\n\n    /**\n     * Uses the stored offsetToPixelMaps to get the systemIndex active at the current time.\n     *\n     * @memberof music21.streamInteraction.PixelMapper\n     * @param {number} offset\n     * @returns {number} systemIndex of the offset\n     */\n    getSystemIndexAtOffset(offset) {\n        const twoNoteMaps = this.getPixelMapsAroundOffset(offset);\n        const prevNoteMap = twoNoteMaps[0];\n        return prevNoteMap.systemIndex;\n    }\n}\nstreamInteraction.PixelMapper = PixelMapper;\n\n\n/*  PIXEL MAP */\n\n/**\n * A PixelMap maps one offset to one x location.\n *\n * The offset does NOT have to be the offset of an element. Offsets are generally\n * measured from the start of the flat stream.\n *\n * @class PixelMap\n * @memberof music21.streamInteraction\n * @param {music21.streamInteraction.PixelMapper} mapper - should eventually be a weakref...\n * @param {number} offset - the offset that is being mapped.\n * @property {Array<music21.base.Music21Object>} elements -- elements being mapped to.\n * @property {number} offset - the offset inputted\n * @property {number} x - x value in pixels for this offset\n * @property {Int} systemIndex - the systemIndex at which this offset appears.\n * @example\n * // not a particularly realistic example, since it requires so much setup...\n * var s = new music21.tinyNotation.TinyNotation('3/4 c4 d8 e f4 g4 a4 b4');\n * var can = s.appendNewCanvas();\n * var pmapper = new music21.streamInteraction.PixelMapper(s);\n * var pmapA = new music21.streamInteraction.PixelMap(pmapper, 2.0);\n * pmapA.elements = [s.flat.get(3)];\n * pmapA.offset;\n * // 2\n * pmapA.x;\n * // 149.32...\n * pmapA.systemIndex\n * // 0\n */\nexport class PixelMap {\n    constructor(mapper, offset) {\n        this.pixelScaling = mapper.pixelScaling; // should be a Weakref...\n        this.elements = [];\n        this.offset = offset; // important\n        this._x = undefined;\n        this._systemIndex = undefined;\n    }\n    get x() {\n        if (this._x !== undefined) {\n            return this._x;\n        } else if (this.elements.length === 0) {\n            return 0; // error!\n        } else {\n            return this.elements[0].x * this.pixelScaling;\n        }\n    }\n    set x(x) {\n        this._x = x;\n    }\n    get systemIndex() {\n        if (this._systemIndex !== undefined) {\n            return this._systemIndex;\n        } else if (this.elements.length === 0) {\n            return 0; // error!\n        } else {\n            return this.elements[0].systemIndex;\n        }\n    }\n    set systemIndex(systemIndex) {\n        this._systemIndex = systemIndex;\n    }\n}\nstreamInteraction.PixelMap = PixelMap;\n\n/*  NOT DONE YET */\nexport class CursorSelect {\n    constructor(s) {\n        this.stream = s;\n        this.activeElementHierarchy = [undefined];\n    }\n}\nstreamInteraction.CursorSelect = CursorSelect;\n","import * as $ from 'jquery';\nimport * as Vex from 'vexflow';\n\nimport { debug } from './debug';\nimport { duration } from './duration';\n/**\n * for rendering vexflow. Will eventually go to music21/converter/vexflow\n *\n * See {@link music21.vfShow} namespace for details\n *\n * @exports music21/vfShow\n */\n/**\n * Vexflow display related objects and methods.\n *\n * @namespace music21.vfShow\n * @memberof music21\n * @requires music21/common\n * @requires vexflow\n */\nexport const vfShow = {};\n\n/**\n * Represents a stack of objects that need to be rendered together.\n *\n * An intermediary state for showing created by {@link music21.vfShow.Renderer}.\n *\n * @class RenderStack\n * @memberof music21.vfShow\n * @property {Array<Vex.Flow.Voice>} voices - Vex.Flow.Voice objects\n * @property {Array<music21.stream.Stream>} streams - {@link music21.stream.Stream} objects associated with the voices\n * @property {Array} textVoices - Vex.Flow.Voice objects for the text.\n */\nexport class RenderStack {\n    constructor() {\n        this.voices = [];\n        this.streams = [];\n        this.textVoices = [];\n    }\n    /**\n     * @memberof music21.vfShow.RenderStack\n     * @returns {Array} this.voices and this.textVoices as one array\n     */\n    allTickables() {\n        const t = [];\n        t.push(...this.voices);\n        t.push(...this.textVoices);\n        return t;\n    }\n}\nvfShow.RenderStack = RenderStack;\n\n\n/**\n * Renderer is a function that takes a stream, an\n * optional existing canvas element and a DOM\n * element where the canvas element should be placed\n * and renders the stream as Vexflow on the\n * canvas element, placing it then in the where\n * DOM.\n *\n * \"s\" can be any type of Stream.\n *\n * \"canvas\" and \"where\" can be either a DOM\n * element or a jQuery object.\n *\n * @class Renderer\n * @memberof music21.vfShow\n * @param {music21.stream.Stream} s - main stream to render\n * @param {canvas} [canvas] - existing canvas element\n * @param {DOMObject|jQueryDOMObject} [where=document.body] - where to render the stream\n * @property {Vex.Flow.Renderer} vfRenderer - a Vex.Flow.Renderer to use (will create if not existing)\n * @property {Vex.Flow.Context} ctx - a Vex.Flow.Context (Canvas or Raphael [not yet]) to use.\n * @property {canvas} canvas - canvas element\n * @property {jQueryDOMObject} $canvas - jQuery canvas element\n * @property {jQueryDOMObject} $where - jQuery element to render onto\n * @property {Vex.Flow.Formatter} activeFormatter - formatter\n * @property {Array<Vex.Flow.Beam>} beamGroups - beamGroups\n * @property {Array<Vex.Flow.StaveTie>} ties - ties\n * @property {Array<number>} systemBreakOffsets - where to break the systems\n * @property {Array<Vex.Flow.Tuplet>} vfTuplets - tuplets represented in Vexflow\n * @property {Array<music21.vfShow.RenderStack>} stacks - array of RenderStack objects\n */\nexport class Renderer {\n    constructor(s, canvas, where) {\n        this.stream = s;\n        // this.streamType = s.classes[-1];\n\n        this.canvas = undefined;\n        this.$canvas = undefined;\n        this.$where = undefined;\n        this.activeFormatter = undefined;\n        this._vfRenderer = undefined;\n        this._ctx = undefined;\n        this.beamGroups = [];\n        this.stacks = []; // an Array of RenderStacks: {voices: [Array of Vex.Flow.Voice objects],\n        //                            streams: [Array of Streams, usually Measures]}\n        this.ties = [];\n        this.systemBreakOffsets = [];\n        this.vfTuplets = [];\n        // this.measureFormatters = [];\n        if (where !== undefined) {\n            if (where.jquery !== undefined) {\n                this.$where = where;\n            } else {\n                this.$where = $(where);\n            }\n        }\n        if (canvas !== undefined) {\n            if (canvas.jquery !== undefined) {\n                this.$canvas = canvas;\n                this.canvas = canvas[0];\n            } else {\n                this.canvas = canvas;\n                this.$canvas = $(canvas);\n            }\n        }\n    }\n    get vfRenderer() {\n        if (this._vfRenderer !== undefined) {\n            return this._vfRenderer;\n        } else {\n            this._vfRenderer = new Vex.Flow.Renderer(this.canvas, Vex.Flow.Renderer.Backends.CANVAS);\n            return this._vfRenderer;\n        }\n    }\n    set vfRenderer(vfr) {\n        this._vfRenderer = vfr;\n    }\n    get ctx() {\n        if (this._ctx !== undefined) {\n            return this._ctx;\n        } else {\n            this._ctx = this.vfRenderer.getContext();\n            if (this.stream && this.stream.renderOptions) {\n                this._ctx.scale(this.stream.renderOptions.scaleFactor.x,\n                        this.stream.renderOptions.scaleFactor.y);\n            }\n            return this._ctx;\n        }\n    }\n    set ctx(ctx) {\n        this._ctx = ctx;\n    }\n    /**\n     *\n     * main function to render a Stream.\n     *\n     * if s is undefined, uses the stored Stream from\n     * the constructor object.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} [s=this.stream]\n     */\n    render(s) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n\n        let isScorelike = false;\n        let isPartlike = false;\n        const hasSubStreams = s.hasSubStreams();\n\n        if (s.isClassOrSubclass('Score')) {\n            isScorelike = true;\n        } else if (hasSubStreams && s.get(0).hasSubStreams()) {\n            isScorelike = true;\n        } else if (hasSubStreams) {\n            isPartlike = true;\n        }\n        // requires organization Score -> Part -> Measure -> elements...\n        if (isScorelike) {\n            this.prepareScorelike(s);\n        } else if (isPartlike) {\n            this.preparePartlike(s);\n        } else {\n            this.prepareArrivedFlat(s);\n        }\n        this.formatMeasureStacks();\n        this.drawTies();\n        this.drawMeasureStacks();\n        this.drawBeamGroups();\n        this.drawTuplets();\n    }\n    /**\n     * Prepares a scorelike stream (i.e., one with parts or\n     * Streams that should be rendered vertically like parts)\n     * for rendering and adds Staff Connectors\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Score} s - prepare a stream of parts (i.e., Score)\n     */\n    prepareScorelike(s) {\n        // console.log('prepareScorelike called');\n        for (let i = 0; i < s.length; i++) {\n            const subStream = s.get(i);\n            this.preparePartlike(subStream);\n        }\n        this.addStaffConnectors(s);\n    }\n    /**\n     *\n     * Prepares a Partlike stream (that is one with Measures\n     * or substreams that should be considered like Measures)\n     * for rendering.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Part} p\n     */\n    preparePartlike(p) {\n        // console.log('preparePartlike called');\n        this.systemBreakOffsets = [];\n        for (let i = 0; i < p.length; i++) {\n            const subStream = p.get(i);\n            if (subStream.renderOptions.startNewSystem) {\n                this.systemBreakOffsets.push(subStream.offset);\n            }\n            if (i === p.length - 1) {\n                subStream.renderOptions.rightBarline = 'end';\n            }\n            if (this.stacks[i] === undefined) {\n                this.stacks[i] = new vfShow.RenderStack();\n            }\n            this.prepareMeasure(subStream, this.stacks[i]);\n        }\n        this.prepareTies(p);\n    }\n    /**\n     *\n     * Prepares a score that arrived flat... sets up\n     * stacks and ties after calling prepareFlat\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} m - a flat stream (maybe a measure or voice)\n     */\n    prepareArrivedFlat(m) {\n        const stack = new vfShow.RenderStack();\n        this.prepareMeasure(m, stack);\n        this.stacks[0] = stack;\n        this.prepareTies(m);\n    }\n    /**\n     *\n     * Prepares a measure (w/ or w/o voices) or generic Stream -- makes accidentals,\n     * associates a Vex.Flow.Stave with the stream and\n     * returns a vexflow Voice object\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Measure} m - a measure object (w or w/o voices)\n     * @param {music21.vfShow.RenderStack} stack - a RenderStack object to prepare into.\n     */\n    prepareMeasure(m, stack) {\n        if (m.hasVoices === undefined || m.hasVoices() === false) {\n            this.prepareFlat(m, stack);\n        } else {\n            // TODO: don't assume that all elements are Voices;\n            let stave;\n            const rendOp = m.renderOptions; // get render options from Measure;\n            for (let voiceIndex = 0; voiceIndex < m.length; voiceIndex++) {\n                const voiceStream = m.get(voiceIndex);\n                stave = this.prepareFlat(voiceStream, stack, stave, rendOp);\n            }\n        }\n        return stack;\n    }\n    /**\n     * Main internal routine to prepare a flat stream\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s - a flat stream object\n     * @param {music21.vfShow.RenderStack} stack - a RenderStack object to prepare into.\n     * @param {Vex.Flow.Stave} [optionalStave] - an optional existing stave.\n     * @param {object} [optional_renderOp] - render options. Passed to {@link music21.vfShow.Renderer#renderStave}\n     * @returns {Vex.Flow.Stave} staff to return too (also changes the `stack` parameter and runs `makeAccidentals` on s)\n     */\n    prepareFlat(s, stack, optionalStave, optional_renderOp) {\n        s.makeAccidentals();\n        let stave;\n        if (optionalStave !== undefined) {\n            stave = optionalStave;\n        } else {\n            stave = this.renderStave(s, optional_renderOp);\n        }\n        s.activeVFStave = stave;\n        const voice = this.getVoice(s, stave);\n        stack.voices.push(voice);\n        stack.streams.push(s);\n\n        if (s.hasLyrics()) {\n            stack.textVoices.push(this.getLyricVoice(s, stave));\n        }\n\n        return stave;\n    }\n    /**\n     * Render the Vex.Flow.Stave from a flat stream and draws it.\n     *\n     * Just draws the stave, not the notes, etc.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} [m=this.stream] - a flat stream\n     * @param {object} [optional_rendOp] - render options, passed to {@link music21.vfShow.Renderer#newStave} and {@link music21.vfShow.Renderer#setClefEtc}\n     * @returns {Vex.Flow.Stave} stave\n     */\n    renderStave(m, optional_rendOp) {\n        if (m === undefined) {\n            m = this.stream;\n        }\n        const ctx = this.ctx;\n        // stave will be passed in from Measure when we have Voices\n        const stave = this.newStave(m, optional_rendOp);\n\n        this.setClefEtc(m, stave, optional_rendOp);\n        stave.setContext(ctx);\n        stave.draw();\n        return stave;\n    }\n    /**\n     * Draws the Voices (music and text) from `this.stacks`\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    drawMeasureStacks() {\n        const ctx = this.ctx;\n        for (let i = 0; i < this.stacks.length; i++) {\n            const voices = this.stacks[i].allTickables();\n            for (let j = 0; j < voices.length; j++) {\n                const v = voices[j];\n                v.draw(ctx);\n            }\n        }\n    }\n    /**\n     * draws the tuplets.\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    drawTuplets() {\n        const ctx = this.ctx;\n        this.vfTuplets.forEach((vft) => {\n            vft.setContext(ctx).draw();\n        });\n    }\n    /**\n     * draws the ties\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    drawTies() {\n        const ctx = this.ctx;\n        for (let i = 0; i < this.ties.length; i++) {\n            this.ties[i].setContext(ctx).draw();\n        }\n    }\n    /**\n     * Finds all tied notes and creates the proper Vex.Flow.StaveTie objects in\n     * `this.ties`.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Part} p - a Part or similar object\n     */\n    prepareTies(p) {\n        const pf = p.flat.notesAndRests;\n        // console.log('newSystemsAt', this.systemBreakOffsets);\n        for (let i = 0; i < pf.length - 1; i++) {\n            const thisNote = pf.get(i);\n            if (thisNote.tie === undefined || thisNote.tie.type === 'stop') {\n                continue;\n            }\n            const nextNote = pf.get(i + 1);\n            let onSameSystem = true;\n            // this.systemBreakOffsets.length will be 0 for a flat score\n            for (let sbI = 0; sbI < this.systemBreakOffsets.length; sbI++) {\n                const thisSystemBreak = this.systemBreakOffsets[sbI];\n                if (thisNote.offset < thisSystemBreak && nextNote.offset >= thisSystemBreak) {\n                    onSameSystem = false;\n                    break;\n                }\n            }\n            if (onSameSystem) {\n                const vfTie = new Vex.Flow.StaveTie({\n                    first_note: thisNote.activeVexflowNote,\n                    last_note: nextNote.activeVexflowNote,\n                    first_indices: [0],\n                    last_indices: [0],\n                });\n                this.ties.push(vfTie);\n            } else {\n                // console.log('got me a tie across systemBreaks!');\n                const vfTie1 = new Vex.Flow.StaveTie({\n                    first_note: thisNote.activeVexflowNote,\n                    first_indices: [0],\n                });\n                this.ties.push(vfTie1);\n                const vfTie2 = new Vex.Flow.StaveTie({\n                    last_note: nextNote.activeVexflowNote,\n                    first_indices: [0],\n                });\n                this.ties.push(vfTie2);\n            }\n        }\n    }\n    /**\n     * Returns a Vex.Flow.Voice object with all the tickables (i.e., Notes, Voices, etc.)\n     *\n     * Does not draw it...\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} [s=this.stream] -- usually a Measure or Voice\n     * @param {Vex.Flow.Stave} stave - not optional (would never fly in Python...)\n     * @returns {Vex.Flow.Voice}\n     */\n    getVoice(s, stave) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n\n        // gets a group of notes as a voice, but completely unformatted and not drawn.\n        const notes = this.vexflowNotes(s, stave);\n        const voice = this.vexflowVoice(s);\n        voice.setStave(stave);\n\n        voice.addTickables(notes);\n        return voice;\n    }\n    /**\n     * Returns a Vex.Flow.Voice with the lyrics set to render in the proper place.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s -- usually a Measure or Voice\n     * @param {Vex.Flow.Stave} stave\n     * @returns {Vex.Flow.Voice}\n     */\n    getLyricVoice(s, stave) {\n        const textVoice = this.vexflowVoice(s);\n        const lyrics = this.vexflowLyrics(s, stave);\n        textVoice.setStave(stave);\n        textVoice.addTickables(lyrics);\n        return textVoice;\n    }\n    /**\n     * Aligns all of `this.stacks` (after they've been prepared) so they align properly.\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    formatMeasureStacks() {\n        // adds formats the voices, then adds the formatter information to every note in a voice...\n        for (let i = 0; i < this.stacks.length; i++) {\n            const stack = this.stacks[i];\n            const voices = stack.voices;\n            const measures = stack.streams;\n            const formatter = this.formatVoiceGroup(stack);\n            for (let j = 0; j < measures.length; j++) {\n                const m = measures[j];\n                const v = voices[j];\n                this.applyFormatterInformationToNotes(v.stave, m, formatter);\n            }\n        }\n    }\n    /**\n     * Formats a single voice group from a stack.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.vfShow.RenderStack} stack\n     * @param {Boolean} [autoBeam=measures[0].autoBeam]\n     * @returns {Vex.Flow.Formatter}\n     */\n    formatVoiceGroup(stack, autoBeam) {\n        // formats a group of voices to use the same formatter; returns the formatter\n        // if autoBeam is true then it will apply beams for each voice and put them in\n        // this.beamGroups;\n        const allTickables = stack.allTickables();\n        const voices = stack.voices;\n        const measures = stack.streams;\n        if (autoBeam === undefined) {\n            autoBeam = measures[0].autoBeam;\n        }\n\n        const formatter = new Vex.Flow.Formatter();\n        // var minLength = formatter.preCalculateMinTotalWidth([voices]);\n        // console.log(minLength);\n        if (voices.length === 0) {\n            return formatter;\n        }\n        let maxGlyphStart = 0; // find the stave with the farthest start point -- diff key sig, etc.\n        for (let i = 0; i < allTickables.length; i++) {\n            // console.log(voices[i], voices[i].stave, i);\n            if (allTickables[i].stave.start_x > maxGlyphStart) {\n                maxGlyphStart = allTickables[i].stave.start_x;\n            }\n        }\n        for (let i = 0; i < allTickables.length; i++) {\n            allTickables[i].stave.start_x = maxGlyphStart; // corrected!\n        }\n        // TODO: should do the same for end_x -- for key sig changes, etc...\n\n        const stave = voices[0].stave; // all staves should be same length, so does not matter;\n        formatter.joinVoices(allTickables);\n        formatter.formatToStave(allTickables, stave);\n        if (autoBeam) {\n            for (let i = 0; i < voices.length; i++) {\n                // find beam groups -- n.b. this wipes out stemDirection. worth it usually...\n                const voice = voices[i];\n                let beatGroups = [new Vex.Flow.Fraction(2, 8)]; // default beam groups\n                if (measures[i] !== undefined && measures[i].timeSignature !== undefined) {\n                    beatGroups = measures[i].timeSignature.vexflowBeatGroups(Vex); // TODO: getContextByClass...\n                    // console.log(beatGroups);\n                }\n                const beamGroups = Vex.Flow.Beam.applyAndGetBeams(voice, undefined, beatGroups);\n                this.beamGroups.push(...beamGroups);\n            }\n        }\n        return formatter;\n    }\n    /**\n     * Draws the beam groups.\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    drawBeamGroups() {\n        const ctx = this.ctx;\n        for (let i = 0; i < this.beamGroups.length; i++) {\n            this.beamGroups[i].setContext(ctx).draw();\n        }\n    }\n    /**\n     * Return a new Vex.Flow.Stave object, which represents\n     * a single MEASURE of notation in m21j\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s\n     * @returns {Vex.Flow.Stave}\n     */\n    newStave(s, rendOp) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        if (rendOp === undefined) {\n            rendOp = s.renderOptions;\n        }\n        // measure level...\n        let width = rendOp.width;\n        if (width === undefined) {\n            width = s.estimateStaffLength() + rendOp.staffPadding;\n        }\n        let top = rendOp.top;// * rendOp.scaleFactor.y;\n        if (top === undefined) {\n            top = 0;\n        }\n        let left = rendOp.left;\n        if (left === undefined) {\n            left = 10;\n        }\n        // console.log('streamLength: ' + streamLength);\n        if (debug) {\n            console.log('creating new stave: left:' + left + ' top: ' + top + ' width: ' + width);\n        }\n        const stave = new Vex.Flow.Stave(left, top, width);\n        return stave;\n    }\n    /**\n     * Sets the number of stafflines, puts the clef on the Stave, adds keySignature, timeSignature, and rightBarline\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s\n     * @param {Vex.Flow.Stave} stave\n     * @param {object} [rendOp=s.renderOptions] - a {@link music21.renderOptions.RenderOptions} object that might have `{showMeasureNumber: boolean, rightBarLine: string<{'single', 'double', 'end'}>}`\n     */\n    setClefEtc(s, stave, rendOp) {\n        if (rendOp === undefined) {\n            rendOp = s.renderOptions;\n        }\n        this.setStafflines(s, stave);\n        if (rendOp.showMeasureNumber) {\n            stave.setMeasure(rendOp.measureIndex + 1);\n        }\n        if (rendOp.displayClef) {\n            let ottava;\n            const size = 'default';\n            if (s.clef.octaveChange === 1) {\n                ottava = '8va';\n            } else if (s.clef.octaveChange === -1) {\n                ottava = '8vb';\n            }\n            stave.addClef(s.clef.name, size, ottava);\n        }\n        if ((s.keySignature !== undefined) && (rendOp.displayKeySignature)) {\n            stave.addKeySignature(s.keySignature.vexflow());\n        }\n\n        if ((s.timeSignature !== undefined) && (rendOp.displayTimeSignature)) {\n            stave.addTimeSignature(\n                    s.timeSignature.numerator.toString() + '/' +\n                    s.timeSignature.denominator.toString()); // TODO: convertToVexflow...\n        }\n        if (rendOp.rightBarline !== undefined) {\n            const bl = rendOp.rightBarline;\n            const barlineMap = {\n                'single': 'SINGLE',\n                'double': 'DOUBLE',\n                'end': 'END',\n            };\n            const vxBL = barlineMap[bl];\n            if (vxBL !== undefined) {\n                stave.setEndBarType(Vex.Flow.Barline.type[vxBL]);\n            }\n        }\n    }\n    /**\n     * Sets the number of stafflines properly for the Stave object.\n     *\n     * This method does not just set Vex.Flow.Stave#setNumLines() except\n     * if the number of lines is 0 or >=4, because the default in VexFlow is\n     * to show the bottom(top?), not middle, lines and that looks bad.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s - stream to get the `.staffLines` from `s.renderOptions` from -- should allow for overriding.\n     * @param {Vex.Flow.Stave} vexflowStave - stave to set the staff lines for.\n     */\n    setStafflines(s, vexflowStave) {\n        const rendOp = s.renderOptions;\n        if (rendOp.staffLines !== 5) {\n            if (rendOp.staffLines === 0) {\n                vexflowStave.setNumLines(0);\n            } else if (rendOp.staffLines === 1) {\n                // Vex.Flow.Stave.setNumLines hides all but the top line.\n                // this is better\n                vexflowStave.options.line_config = [{ visible: false },\n                                                    { visible: false },\n                                                    { visible: true }, // show middle\n                                                    { visible: false },\n                                                    { visible: false },\n                                                    ];\n            } else if (rendOp.staffLines === 2) {\n                vexflowStave.options.line_config = [{ visible: false },\n                                                    { visible: false },\n                                                    { visible: true }, // show middle\n                                                    { visible: true },\n                                                    { visible: false },\n                                                    ];\n            } else if (rendOp.staffLines === 3) {\n                vexflowStave.options.line_config = [{ visible: false },\n                                                    { visible: true },\n                                                    { visible: true }, // show middle\n                                                    { visible: true },\n                                                    { visible: false },\n                                                    ];\n            } else {\n                vexflowStave.setNumLines(rendOp.staffLines);\n            }\n        }\n    }\n    /**\n     *\n     * Gets the Vex.Flow.StaveNote objects from a Stream.\n     *\n     * Also changes `this.vfTuplets`.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} [s=this.stream] - flat stream to find notes in\n     * @param {Vex.Flow.Stave} stave\n     * @returns {Array<Vex.Flow.StaveNote>} notes to return\n     */\n    vexflowNotes(s, stave) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        // runs on a flat stream, returns a list of voices...\n        const notes = [];\n        const vfTuplets = [];\n        let activeTuplet;\n        let activeTupletLength = 0.0;\n        let activeTupletVexflowNotes = [];\n\n        const options = { clef: s.clef, stave };\n        for (let i = 0; i < s.length; i++) {\n            const thisEl = s.get(i);\n            if (thisEl.isClassOrSubclass('GeneralNote') && (thisEl.duration !== undefined)) {\n                const vfn = thisEl.vexflowNote(options);\n                if (vfn === undefined) {\n                    console.error('Cannot create a vexflowNote from: ', thisEl);\n                }\n                // sets thisEl.activeVexflowNote -- may be overwritten but not so fast...\n                if (stave !== undefined) {\n                    vfn.setStave(stave);\n                }\n                notes.push(vfn);\n\n                // account for tuplets...\n                if (thisEl.duration.tuplets.length > 0) {\n                    // only support one tuplet -- like vexflow\n                    const m21Tuplet = thisEl.duration.tuplets[0];\n                    if (activeTuplet === undefined) {\n                        activeTuplet = m21Tuplet;\n                    }\n                    activeTupletVexflowNotes.push(vfn);\n                    activeTupletLength += thisEl.duration.quarterLength;\n                    // console.log(activeTupletLength, activeTuplet.totalTupletLength());\n                    if (activeTupletLength >= activeTuplet.totalTupletLength() ||\n                            Math.abs(activeTupletLength - activeTuplet.totalTupletLength()) < 0.001) {\n                        // console.log(activeTupletVexflowNotes);\n                        const tupletOptions = { num_notes: activeTuplet.numberNotesActual,\n                                notes_occupied: activeTuplet.numberNotesNormal };\n                        // console.log('tupletOptions', tupletOptions);\n                        const vfTuplet = new Vex.Flow.Tuplet(activeTupletVexflowNotes,\n                                tupletOptions);\n                        if (activeTuplet.tupletNormalShow === 'ratio') {\n                            vfTuplet.setRatioed(true);\n                        }\n\n                        vfTuplets.push(vfTuplet);\n                        activeTupletLength = 0.0;\n                        activeTuplet = undefined;\n                        activeTupletVexflowNotes = [];\n                    }\n                }\n            }\n        }\n        if (activeTuplet !== undefined) {\n            console.warn('incomplete tuplet found in stream: ', s);\n        }\n        if (vfTuplets.length > 0) {\n            this.vfTuplets.push(...vfTuplets);\n        }\n        return notes;\n    }\n\n    /**\n     * Gets an Array of `Vex.Flow.TextNote` objects from any lyrics found in s\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s - flat stream to search.\n     * @param {Vex.Flow.Stave} stave\n     * @returns {Array<Vex.Flow.TextNote>}\n     */\n    vexflowLyrics(s, stave) {\n        const getTextNote = (text, font, d) => {\n            // console.log(text, font, d);\n            const t1 = new Vex.Flow.TextNote({\n                text,\n                font,\n                duration: d,\n            }).setLine(11).setStave(stave).setJustification(Vex.Flow.TextNote.Justification.LEFT);\n            return t1;\n        };\n\n        if (s === undefined) {\n            s = this.stream;\n        }\n        const font = {\n            family: 'Serif',\n            size: 12,\n            weight: '',\n        };\n        // runs on a flat, gapless, no-overlap stream, returns a list of TextNote objects...\n        const lyricsObjects = [];\n        for (let i = 0; i < s.length; i++) {\n            const el = s.get(i);\n            const lyricsArray = el.lyrics;\n            let text;\n            let d = el.duration.vexflowDuration;\n            let addConnector = false;\n            if (lyricsArray.length === 0) {\n                text = '';\n            } else {\n                text = lyricsArray[0].text;\n                if (text === undefined) {\n                    text = '';\n                }\n                if (lyricsArray[0].syllabic === 'middle' || lyricsArray[0].syllabic === 'begin') {\n                    addConnector = ' ' + lyricsArray[0].lyricConnector;\n                    const tempQl = el.duration.quarterLength / 2.0;\n                    d = new duration.Duration(tempQl).vexflowDuration;\n                }\n            }\n            const t1 = getTextNote(text, font, d);\n            lyricsObjects.push(t1);\n            if (addConnector !== false) {\n                const connector = getTextNote(addConnector, font, d);\n                lyricsObjects.push(connector);\n            }\n        }\n        return lyricsObjects;\n    }\n    /**\n     * Creates a Vex.Flow.Voice of the appropriate length given a Stream.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s\n     * @returns {Vex.Flow.Voice}\n     */\n    vexflowVoice(s) {\n        const totalLength = s.duration.quarterLength;\n\n        let num1024 = Math.round(totalLength / (1 / 256));\n        let beatValue = 1024;\n\n        if (num1024 % 512 === 0)  {\n            beatValue = 2;\n            num1024 /= 512;\n        } else if (num1024 % 256 === 0)  {\n            beatValue = 4;\n            num1024 /= 256;\n        } else if (num1024 % 128 === 0)  {\n            beatValue = 8;\n            num1024 /= 128;\n        } else if (num1024 % 64 === 0)  {\n            beatValue = 16;\n            num1024 /= 64;\n        } else if (num1024 % 32 === 0)  {\n            beatValue = 32;\n            num1024 /= 32;\n        } else if (num1024 % 16 === 0)  {\n            beatValue = 64;\n            num1024 /= 16;\n        } else if (num1024 % 8 === 0)  {\n            beatValue = 128;\n            num1024 /= 8;\n        } else if (num1024 % 4 === 0)  {\n            beatValue = 256;\n            num1024 /= 4;\n        } else if (num1024 % 2 === 0)  {\n            beatValue = 512;\n            num1024 /= 2;\n        }\n        // console.log('creating voice');\n        if (debug) {\n            console.log('New voice, num_beats: ' + num1024.toString() + ' beat_value: ' + beatValue.toString());\n        }\n        const vfv = new Vex.Flow.Voice({ num_beats: num1024,\n            beat_value: beatValue,\n            resolution: Vex.Flow.RESOLUTION });\n\n        // from vexflow/src/voice.js\n        //\n        // Modes allow the addition of ticks in three different ways:\n        //\n        // STRICT: This is the default. Ticks must fill the voice.\n        // SOFT:   Ticks can be added without restrictions.\n        // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n        //         tick length.\n        vfv.setMode(Vex.Flow.Voice.Mode.SOFT);\n        return vfv;\n    }\n    staffConnectorsMap(connectorType) {\n        const connectorMap = {\n            'brace': Vex.Flow.StaveConnector.type.BRACE,\n            'single': Vex.Flow.StaveConnector.type.SINGLE,\n            'double': Vex.Flow.StaveConnector.type.DOUBLE,\n            'bracket': Vex.Flow.StaveConnector.type.BRACKET,\n        };\n        return connectorMap[connectorType];\n    }\n\n    /**\n     * If a stream has parts (NOT CHECKED HERE) create and draw an appropriate Vex.Flow.StaveConnector\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Score} s\n     */\n    addStaffConnectors(s) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        const numParts = s.length;\n        if (numParts < 2) {\n            return;\n        }\n\n        const firstPart = s.get(0);\n        const lastPart = s.get(-1);\n        const numMeasures = firstPart.length;\n        for (let mIndex = 0; mIndex < numMeasures; mIndex++) {\n            const thisPartMeasure = firstPart.get(mIndex);\n            const lastPartMeasure = lastPart.get(mIndex); // only needed once per system but\n            // good for symmetry.\n            if (thisPartMeasure.renderOptions.startNewSystem) {\n                const topVFStaff = thisPartMeasure.activeVFStave;\n                const bottomVFStaff = lastPartMeasure.activeVFStave;\n                /* TODO: warning if no staves... */\n                for (let i = 0; i < s.renderOptions.staffConnectors.length; i++) {\n                    const sc = new Vex.Flow.StaveConnector(topVFStaff, bottomVFStaff);\n                    const scTypeM21 = s.renderOptions.staffConnectors[i];\n                    const scTypeVF = this.staffConnectorsMap(scTypeM21);\n                    sc.setType(scTypeVF);\n                    sc.setContext(this.ctx);\n                    sc.draw();\n                }\n            }\n        }\n    }\n\n    /**\n     * The process of putting a Stream onto a canvas affects each of the\n     * elements in the Stream by adding pieces of information to\n     * each {@link music21.base.Music21Object} -- see `applyFormatterInformationToNotes`\n     *\n     * You might want to remove this information; this routine does that.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s - can have parts, measures, etc.\n     * @param {boolean} [recursive=false]\n     */\n    removeFormatterInformation(s, recursive) {\n        s.storedVexflowStave = undefined;\n        for (let i = 0; i < s.length; i++) {\n            const el = s.get(i);\n            el.x = undefined;\n            el.y = undefined;\n            el.width = undefined;\n            el.systemIndex = undefined;\n            el.activeVexflowNote = undefined;\n            if (recursive && el.isClassOrSubclass('Stream')) {\n                this.removeFormatterInformation(el, recursive);\n            }\n        }\n    }\n\n    /**\n     * Adds the following pieces of information to each Note\n     *\n     * - el.x -- x location in pixels\n     * - el.y -- y location in pixels\n     * - el.width - width of element in pixels.\n     * - el.systemIndex -- which system is it on\n     * - el.activeVexflowNote - which Vex.Flow.StaveNote is it connected with.\n     *\n     * mad props to our friend Vladimir Viro for figuring this out! Visit http://peachnote.com/\n     *\n     * Also sets s.storedVexflowStave to stave.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {Vex.Flow.Stave} stave\n     * @param {music21.stream.Stream} [s=this.stream]\n     * @param {Vex.Flow.Formatter} formatter\n     */\n    applyFormatterInformationToNotes(stave, s, formatter) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        let noteOffsetLeft = 0;\n        // var staveHeight = 80;\n        if (stave !== undefined) {\n            noteOffsetLeft = stave.start_x + stave.glyph_start_x;\n            if (debug) {\n                console.log('noteOffsetLeft: ' + noteOffsetLeft + ' ; stave.start_x: ' + stave.start_x);\n                console.log('Bottom y: ' + stave.getBottomY());\n            }\n            // staveHeight = stave.height;\n        }\n\n        let nextTicks = 0;\n        for (let i = 0; i < s.length; i++) {\n            const el = s.get(i);\n            if (el.isClassOrSubclass('GeneralNote')) {\n                const vfn = el.activeVexflowNote;\n                if (vfn === undefined) {\n                    continue;\n                }\n                const nTicks = parseInt(vfn.ticks);\n                const formatterNote = formatter.tickContexts.map[String(nextTicks)];\n                nextTicks += nTicks;\n                el.x = vfn.getAbsoluteX();\n                // these are a bit hacky...\n                el.systemIndex = s.renderOptions.systemIndex;\n\n                // console.log(i + \" \" + el.x + \" \" + formatterNote.x + \" \" + noteOffsetLeft);\n                if (formatterNote === undefined) {\n                    continue;\n                }\n\n                el.width = formatterNote.width;\n                if (el.pitch !== undefined) { // note only...\n                    el.y = (stave.getBottomY() - (s.clef.lowestLine - el.pitch.diatonicNoteNum) *\n                            stave.options.spacing_between_lines_px);\n                    // console.log('Note DNN: ' + el.pitch.diatonicNoteNum + \" ; y: \" + el.y);\n                }\n            }\n        }\n        if (debug) {\n            for (let i = 0; i < s.length; i++) {\n                const n = s.get(i);\n                if (n.pitch !== undefined) {\n                    console.log(n.pitch.diatonicNoteNum + ' ' + n.x + ' ' + (n.x + n.width));\n                }\n            }\n        }\n        s.storedVexflowStave = stave;\n    }\n}\nvfShow.Renderer = Renderer;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/stream -- Streams -- objects that hold other Music21Objects\n *\n * Does not implement the full features of music21p Streams by a long shot...\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006-16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as $ from 'jquery';\nimport * as MIDI from 'MIDI';\n\nimport { Music21Exception } from './exceptions21';\n\nimport { base } from './base';\nimport { clef } from './clef';\nimport { common } from './common';\nimport { debug } from './debug';\nimport { duration } from './duration';\nimport { instrument } from './instrument';\nimport { meter } from './meter';\nimport { pitch } from './pitch';\nimport { renderOptions } from './renderOptions';\nimport { streamInteraction } from './streamInteraction';\nimport { vfShow } from './vfShow';\n\n/**\n * powerful stream module, See {@link music21.stream} namespace\n * @exports music21/stream\n */\n/**\n * Streams are powerful music21 objects that hold Music21Object collections,\n * such as {@link music21.note.Note} or {@link music21.chord.Chord} objects.\n *\n * Understanding the {@link music21.stream.Stream} object is of fundamental\n * importance for using music21.  Definitely read the music21(python) tutorial\n * on using Streams before proceeding\n *\n * @namespace music21.stream\n * @memberof music21\n * @requires music21/base\n * @requires music21/renderOptions\n * @requires music21/clef\n * @requires music21/vfShow\n * @requires music21/duration\n * @requires music21/common\n * @requires music21/meter\n * @requires music21/pitch\n * @requires music21/streamInteraction\n * @requires jquery\n */\nexport const stream = {};\n\n/**\n * A generic Stream class -- a holder for other music21 objects\n * Will be subclassed into {@link music21.stream.Score},\n * {@link music21.stream.Part},\n * {@link music21.stream.Measure},\n * {@link music21.stream.Voice}, but most functions will be found here.\n *\n * @class Stream\n * @memberof music21.stream\n * @extends music21.base.Music21Object\n *\n * @property {Array<music21.base.Music21Object>} elements - the elements in the stream. DO NOT MODIFY individual components (consider it like a Python tuple)\n * @property {Int} length - (readonly) the number of elements in the stream.\n * @property {music21.duration.Duration} duration - the total duration of the stream's elements\n * @property {music21.clef.Clef} clef - the clef for the Stream (if there is one; if there are multiple, then the first clef)\n * @property {music21.meter.TimeSignature} timeSignature - the first TimeSignature of the Stream\n * @property {music21.key.KeySignature} keySignature - the first KeySignature for the Stream\n * @property {music21.renderOptions.RenderOptions} renderOptions - an object specifying how to render the stream\n * @property {music21.stream.Stream} flat - (readonly) a flattened representation of the Stream\n * @property {music21.stream.Stream} notes - (readonly) the stream with only {@link music21.note.Note} and {@link music21.chord.Chord} objects included\n * @property {music21.stream.Stream} notesAndRests - (readonly) like notes but also with {@link music21.note.Rest} objects included\n * @property {music21.stream.Stream} parts - (readonly) a filter on the Stream to just get the parts (NON-recursive)\n * @property {music21.stream.Stream} measures - (readonly) a filter on the Stream to just get the measures (NON-recursive)\n * @property {number} tempo - tempo in beats per minute (will become more sophisticated later, but for now the whole stream has one tempo\n * @property {music21.instrument.Instrument|undefined} instrument - an instrument object associated with the stream (can be set with a string also, but will return an `Instrument` object)\n * @property {Boolean} autoBeam - whether the notes should be beamed automatically or not (will be moved to `renderOptions` soon)\n * @property {Int} [staffLines=5] - number of staff lines\n * @property {function|undefined} changedCallbackFunction - function to call when the Stream changes through a standard interface\n * @property {number} maxSystemWidth - confusing... should be in renderOptions\n */\nexport class Stream extends base.Music21Object {\n    constructor() {\n        super();\n        this.classes.push('Stream');\n        this.isStream = true;\n        this._duration = undefined;\n\n        this._elements = [];\n        this._elementOffsets = [];\n        this._clef = undefined;\n        this.displayClef = undefined;\n\n        this._keySignature =  undefined; // a music21.key.KeySignature object\n        this._timeSignature = undefined; // a music21.meter.TimeSignature object\n        this._instrument = undefined;\n\n        this._autoBeam = undefined;\n        this.activeVFStave = undefined;\n        this.renderOptions = new renderOptions.RenderOptions();\n        this._tempo = undefined;\n\n        this.staffLines = 5;\n\n        this._stopPlaying = false;\n        this._allowMultipleSimultaneousPlays = true; // not implemented yet.\n        this.changedCallbackFunction = undefined; // for editable canvases\n        /**\n         * A function bound to the current stream that\n         * will changes the stream. Used in editableAccidentalCanvas, among other places.\n         *\n         *      var can = s.appendNewCanvas();\n         *      $(can).on('click', s.canvasChangerFunction);\n         *\n         * @memberof music21.stream.Stream\n         * @param {Event} e\n         * @returns {music21.base.Music21Object|undefined} - returns whatever changedCallbackFunction does.\n         */\n        this.canvasChangerFunction = (e) => {\n            const canvasElement = e.currentTarget;\n            const [clickedDiatonicNoteNum, foundNote] = this.findNoteForClick(canvasElement, e);\n            if (foundNote === undefined) {\n                if (debug) {\n                    console.log('No note found');\n                }\n                return undefined;\n            }\n            return this.noteChanged(clickedDiatonicNoteNum, foundNote, canvasElement);\n        };\n    }\n    get duration() {\n        if (this._duration !== undefined) {\n            return this._duration;\n        }\n        let highestTime = 0.0;\n        for (let i = 0; i < this.length; i++) {\n            const el = this.get(i);\n            let endTime = el.offset;\n            if (el.duration !== undefined) {\n                endTime += el.duration.quarterLength;\n            }\n            if (endTime > highestTime) {\n                highestTime = endTime;\n            }\n        }\n        return new duration.Duration(highestTime);\n    }\n    set duration(newDuration) {\n        this._duration = newDuration;\n    }\n    get flat() {\n        if (this.hasSubStreams()) {\n            const tempEls = [];\n            for (let i = 0; i < this.length; i++) {\n                const el = this.get(i);\n                // console.log(i, this.length);\n                if (el.elements !== undefined) {\n                    const offsetShift = el.offset;\n                    // console.log('offsetShift', offsetShift, el.classes[el.classes.length -1]);\n                    const elFlat = el.flat;\n                    for (let j = 0; j < elFlat.length; j++) {\n                        // offset should NOT be null because already in Stream\n                        elFlat.get(j).offset += offsetShift;\n                    }\n                    tempEls.push(...elFlat._elements);\n                } else {\n                    tempEls.push(el);\n                }\n            }\n            const newSt = this.clone(false);\n            newSt.elements = tempEls;\n            return newSt;\n        } else {\n            return this;\n        }\n    }\n    get notes() { return this.getElementsByClass(['Note', 'Chord']); }\n    get notesAndRests() {\n        return this.getElementsByClass('GeneralNote');\n    }\n    get tempo() {\n        if (this._tempo === undefined && this.activeSite !== undefined) {\n            return this.activeSite.tempo;\n        } else if (this._tempo === undefined) {\n            return 150;\n        } else {\n            return this._tempo;\n        }\n    }\n    set tempo(newTempo) {\n        this._tempo = newTempo;\n    }\n    get instrument() {\n        if (this._instrument === undefined && this.activeSite !== undefined) {\n            return this.activeSite.instrument;\n        } else {\n            return this._instrument;\n        }\n    }\n    set instrument(newInstrument) {\n        if (typeof newInstrument === 'string') {\n            newInstrument = new instrument.Instrument(newInstrument);\n        }\n        this._instrument = newInstrument;\n    }\n    get clef() {\n        if (this._clef === undefined && this.activeSite === undefined) {\n            return new clef.Clef('treble');\n        } else if (this._clef === undefined) {\n            return this.activeSite.clef;\n        } else {\n            return this._clef;\n        }\n    }\n    set clef(newClef) {\n        this._clef = newClef;\n    }\n    get keySignature() {\n        if (this._keySignature === undefined && this.activeSite !== undefined) {\n            return this.activeSite.keySignature;\n        } else {\n            return this._keySignature;\n        }\n    }\n    set keySignature(newKeySignature) {\n        this._keySignature = newKeySignature;\n    }\n    get timeSignature() {\n        if (this._timeSignature === undefined && this.activeSite !== undefined) {\n            return this.activeSite.timeSignature;\n        } else {\n            return this._timeSignature;\n        }\n    }\n    set timeSignature(newTimeSignature) {\n        if (typeof (newTimeSignature) === 'string') {\n            newTimeSignature = new meter.TimeSignature(newTimeSignature);\n        }\n        this._timeSignature = newTimeSignature;\n    }\n    get autoBeam() {\n        if (this._autoBeam === undefined && this.activeSite !== undefined) {\n            return this.activeSite.autoBeam;\n        } else if (this._autoBeam !== undefined) {\n            return this._autoBeam;\n        } else {\n            return true; // default...\n        }\n    }\n    set autoBeam(ab) {\n        this._autoBeam = ab;\n    }\n    get maxSystemWidth() {\n        let baseMaxSystemWidth = 750;\n        if (this.renderOptions.maxSystemWidth === undefined\n                && this.activeSite !== undefined) {\n            baseMaxSystemWidth = this.activeSite.maxSystemWidth;\n        } else if (this.renderOptions.maxSystemWidth !== undefined) {\n            baseMaxSystemWidth = this.renderOptions.maxSystemWidth;\n        }\n        return (baseMaxSystemWidth / this.renderOptions.scaleFactor.x);\n    }\n    set maxSystemWidth(newSW) {\n        this.renderOptions.maxSystemWidth = newSW * this.renderOptions.scaleFactor.x;\n    }\n    get parts() {\n        const parts = [];\n        for (let i = 0; i < this.length; i++) {\n            const el = this.get(i);\n            if (el.isClassOrSubclass('Part')) {\n                parts.push(el);\n            }\n        }\n        return parts;\n    }\n    /* TODO -- make it return a Stream.Part and not list. to match music21p\n     * but okay for now */\n    get measures() {\n        const measures = [];\n        for (let i = 0; i < this.length; i++) {\n            const el = this.get(i);\n            if (el.isClassOrSubclass('Measure')) {\n                measures.push(el);\n            }\n        }\n        return measures;\n    }\n    get length() {\n        return this._elements.length;\n    }\n    get elements() {\n        return this._elements;\n    }\n    set elements(newElements) {\n        let highestOffsetSoFar = 0.0;\n        this._elements = [];\n        this._elementOffsets = [];\n        const tempInsert = [];\n        let i;\n        let thisEl;\n        for (i = 0; i < newElements.length; i++) {\n            thisEl = newElements[i];\n            const thisElOffset = thisEl.offset;\n            if (thisElOffset === null || thisElOffset === highestOffsetSoFar) {\n                // append\n                this._elements.push(thisEl);\n                thisEl.offset = highestOffsetSoFar;\n                this._elementOffsets.push(highestOffsetSoFar);\n                if (thisEl.duration === undefined) {\n                    console.error('No duration for ', thisEl, ' in ', this);\n                }\n                highestOffsetSoFar += thisEl.duration.quarterLength;\n            } else { // append -- slow\n                tempInsert.push(thisEl);\n            }\n        }\n        // console.warn('end', highestOffsetSoFar, tempInsert);\n        for (i = 0; i < tempInsert.length; i++) {\n            thisEl = tempInsert[i];\n            this.insert(thisEl.offset, thisEl);\n        }\n    }\n\n    /* override protoM21Object.clone() */\n    clone(deep) {\n        const ret = Object.create(this.constructor.prototype);\n        for (const key in this) {\n            if ({}.hasOwnProperty.call(this, key) === false) {\n                continue;\n            }\n            if (key === 'activeSite') {\n                ret[key] = this[key];\n            } else if (key === 'renderOptions') {\n                ret[key] = common.merge({}, this[key]);\n            } else if (deep !== true && (key === '_elements' || key === '_elementOffsets')) {\n                ret[key] = this[key].slice(); // shallow copy...\n            } else if (deep && (key === '_elements' || key === '_elementOffsets')) {\n                if (key === '_elements') {\n                    // console.log('got elements for deepcopy');\n                    ret._elements = [];\n                    ret._elementOffsets = [];\n                    for (let j = 0; j < this._elements.length; j++) {\n                        ret._elementOffsets[j] = this._elementOffsets[j];\n                        const el = this._elements[j];\n                        // console.log('cloning el: ', el.name);\n                        const elCopy = el.clone(deep);\n                        elCopy.activeSite = ret;\n                        ret._elements[j] = elCopy;\n                    }\n                }\n            } else if (key === 'activeVexflowNote' || key === 'storedVexflowstave') {\n                // do nothing -- do not copy vexflowNotes -- permanent recursion\n            } else if (\n                    Object.getOwnPropertyDescriptor(this, key).get !== undefined\n                    || Object.getOwnPropertyDescriptor(this, key).set !== undefined\n            ) {\n                // do nothing\n            } else if (typeof (this[key]) === 'function') {\n                // do nothing -- events might not be copied.\n            } else if (this[key] !== null && this[key] !== undefined && this[key].isMusic21Object === true) {\n                // console.log('cloning...', key);\n                ret[key] = this[key].clone(deep);\n            } else {\n                ret[key] = this[key];\n            }\n        }\n        return ret;\n    }\n\n    /**\n     * Add an element to the end of the stream, setting its `.offset` accordingly\n     *\n     * @memberof music21.stream.Stream\n     * @param {music21.base.Music21Object} el - element to append\n     * @returns {this}\n     */\n    append(el) {\n        try {\n            if ((el.isClassOrSubclass !== undefined) && el.isClassOrSubclass('NotRest')) {\n                // set stem direction on output...;\n            }\n            let elOffset = 0.0;\n            if (this._elements.length > 0) {\n                const lastQL = this._elements[this._elements.length - 1].duration.quarterLength;\n                elOffset = this._elementOffsets[this._elementOffsets.length - 1] + lastQL;\n            }\n            this._elementOffsets.push(elOffset);\n            this._elements.push(el);\n            el.offset = elOffset;\n            el.activeSite = this; // would prefer weakref, but does not exist in JS.\n        } catch (err) {\n            console.error('Cannot append element ', el, ' to stream ', this, ' : ', err);\n        }\n        return this;\n    }\n\n    /**\n     * Add an element to the specified place in the stream, setting its `.offset` accordingly\n     *\n     * @memberof music21.stream.Stream\n     * @param {number} offset - offset to place.\n     * @param {music21.base.Music21Object} el - element to append\n     * @returns {this}\n     */\n    insert(offset, el) {\n        try {\n            if ((el.isClassOrSubclass !== undefined) && el.isClassOrSubclass('NotRest')) {\n                // set stem direction on output\n                // this.clef.setStemDirection(el);\n            }\n            for (let i = 0; i < this._elements.length; i++) {\n                const testOffset = this._elementOffsets[i];\n                if (testOffset <= offset) {\n                    continue;\n                } else {\n                    this._elementOffsets.splice(i, 0, offset);\n                    this._elements.splice(i, 0, el);\n                    el.offset = offset;\n                    el.activeSite = this;\n                    return this;\n                }\n            }\n            // no element found. insert at end;\n            this._elementOffsets.push(offset);\n            this._elements.push(el);\n            el.offset = offset;\n            el.activeSite = this; // would prefer weakref, but does not exist in JS.\n        } catch (err) {\n            console.error('Cannot insert element ', el, ' to stream ', this, ' : ', err);\n        }\n        return this;\n    }\n\n    /**\n     * Remove and return the last element in the stream, or return undefined if the stream is empty\n     *\n     * @memberof music21.stream.Stream\n     * @returns {music21.base.Music21Object|undefined} last element in the stream\n     */\n    pop() {\n        // remove last element;\n        if (this.length > 0) {\n            const el = this.get(-1);\n            this._elementOffsets.pop();\n            this._elements.pop();\n            return el;\n        } else {\n            return undefined;\n        }\n    }\n\n    /**\n     * Get the `index`th element from the Stream.  Equivalent to the\n     * music21p format of s[index].  Can use negative indexing to get from the end.\n     *\n     * @memberof music21.stream.Stream\n     * @param {Int} index - can be -1, -2, to index from the end, like python\n     * @returns {music21.base.Music21Object|undefined}\n     */\n    get(index) {\n        // substitute for Python stream __getitem__; supports -1 indexing, etc.\n        let el;\n        if (index === undefined) {\n            return undefined;\n        } else if (Math.abs(index) > this._elements.length) {\n            return undefined;\n        } else if (index === this._elements.length) {\n            return undefined;\n        } else if (index < 0) {\n            el = this._elements[this._elements.length + index];\n            el.offset = this._elementOffsets[this._elements.length + index];\n            return el;\n        } else {\n            el = this._elements[index];\n            el.offset = this._elementOffsets[index];\n            return el;\n        }\n    }\n    /*  --- ############# END ELEMENT FUNCTIONS ########## --- */\n\n    /**\n     * Returns Boolean about whether this stream contains any other streams.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {Boolean}\n     */\n    hasSubStreams() {\n        let hasSubStreams = false;\n        for (let i = 0; i < this.length; i++) {\n            const el = this.elements[i];\n            if (el.isClassOrSubclass('Stream')) {\n                hasSubStreams = true;\n                break;\n            }\n        }\n        return hasSubStreams;\n    }\n    /**\n     * Takes a stream and places all of its elements into\n     * measures (:class:`~music21.stream.Measure` objects)\n     * based on the :class:`~music21.meter.TimeSignature` objects\n     * placed within\n     * the stream. If no TimeSignatures are found in the\n     * stream, a default of 4/4 is used.\n\n     * If `options.inPlace` is true, the original Stream is modified and lost\n     * if `options.inPlace` is False, this returns a modified deep copy.\n\n     * @memberof music21.stream.Stream\n     * @param {object} options\n     * @returns {music21.stream.Stream}\n     */\n    makeMeasures(options) {\n        const params = {\n            meterStream: undefined,\n            refStreamOrTimeRange: undefined,\n            searchContext: false,\n            innerBarline: undefined,\n            finalBarline: 'final',\n            bestClef: false,\n            inPlace: false,\n        };\n        common.merge(params, options);\n        let voiceCount;\n        if (this.hasVoices()) {\n            voiceCount = this.getElementsByClass('Voice').length;\n        } else {\n            voiceCount = 0;\n        }\n        // meterStream\n        const meterStream = this.getElementsByClass('TimeSignature');\n        if (meterStream.length === 0) {\n            meterStream.append(this.timeSignature);\n        }\n        // getContextByClass('Clef')\n        const clefObj = this.clef;\n        const offsetMap = this.offsetMap();\n        let oMax = 0;\n        for (let i = 0; i < offsetMap.length; i++) {\n            if (offsetMap[i].endTime > oMax) {\n                oMax = offsetMap[i].endTime;\n            }\n        }\n        // console.log('oMax: ', oMax);\n        const post = new this.constructor();\n        // derivation\n        let o = 0.0;\n        let measureCount = 0;\n        let lastTimeSignature;\n        let m;\n        let mStart;\n        while (measureCount === 0 || o < oMax) {\n            m = new stream.Measure();\n            m.number = measureCount + 1;\n            // var thisTimeSignature = meterStream.getElementAtOrBefore(o);\n            const thisTimeSignature = this.timeSignature;\n            if (thisTimeSignature === undefined) {\n                break;\n            }\n            const oneMeasureLength = thisTimeSignature.barDuration.quarterLength;\n            if (oneMeasureLength === 0) {\n                // if for some reason we are advancing not at all, then get out!\n                break;\n            }\n            if (measureCount === 0) {\n                // simplified...\n            }\n            m.clef = clefObj;\n            m.timeSignature = thisTimeSignature.clone();\n\n            for (let voiceIndex = 0; voiceIndex < voiceCount; voiceIndex++) {\n                const v = new stream.Voice();\n                v.id = voiceIndex;\n                m.insert(0, v);\n            }\n            post.insert(o, m);\n            o += oneMeasureLength;\n            measureCount += 1;\n        }\n        for (let i = 0; i < offsetMap.length; i++) {\n            const ob = offsetMap[i];\n            const e = ob.element;\n            const start = ob.offset;\n            const voiceIndex = ob.voiceIndex;\n\n            // if 'Spanner' in e.classes;\n            lastTimeSignature = undefined;\n            for (let j = 0; j < post.length; j++) {\n                m = post.get(j); // nothing but measures...\n                if (m.timeSignature !== undefined) {\n                    lastTimeSignature = m.timeSignature;\n                }\n                mStart = m.getOffsetBySite(post);\n                const mEnd = mStart + lastTimeSignature.barDuration.quarterLength;\n                if (start >= mStart && start < mEnd) {\n                    break;\n                }\n            }\n            // if not match, raise Exception;\n            const oNew = start - mStart;\n            if (m.clef === e) {\n                continue;\n            }\n            if (oNew === 0 && e.isClassOrSubclass('TimeSignature')) {\n                continue;\n            }\n            let insertStream = m;\n            if (voiceIndex !== undefined) {\n                insertStream = m.getElementsByClass('Voice').get(voiceIndex);\n            }\n            insertStream.insert(oNew, e);\n        }\n        // set barlines, etc.\n        if (params.inPlace !== true) {\n            return post;\n        } else {\n            this.elements = [];\n            // endElements\n            // elementsChanged;\n            for (let i = 0; i < post.length; i++) {\n                const e = post.get(i);\n                this.insert(e.offset, e);\n            }\n            return this; // javascript style;\n        }\n    }\n\n    /**\n     * Returns true if any note in the stream has lyrics, otherwise false\n     *\n     * @memberof music21.stream.Stream\n     * @returns {Boolean}\n     */\n    hasLyrics() {\n        for (let i = 0; i < this.length; i++) {\n            const el = this.elements[i];\n            if (el.lyric !== undefined) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns a list of OffsetMap objects\n     *\n     * @memberof music21.stream.Stream\n     * @returns [music21.stream.OffsetMap]\n     */\n    offsetMap() {\n        const offsetMap = [];\n        let groups = [];\n        if (this.hasVoices()) {\n            $.each(this.getElementsByClass('Voice').elements, (i, v) => {\n                groups.push([v.flat, i]);\n            });\n        } else {\n            groups = [[this, undefined]];\n        }\n        for (let i = 0; i < groups.length; i++) {\n            const group = groups[i][0];\n            const voiceIndex = groups[i][1];\n            for (let j = 0; j < group.length; j++) {\n                const e = group.get(j);\n                const dur = e.duration.quarterLength;\n                const offset = e.offset; // TODO: getOffsetBySite(group)\n                const endTime = offset + dur;\n                const thisOffsetMap = new stream.OffsetMap(e, offset, endTime, voiceIndex);\n                offsetMap.push(thisOffsetMap);\n            }\n        }\n        return offsetMap;\n    }\n\n\n    /**\n     * Find all elements with a certain class; if an Array is given, then any\n     * matching class will work.\n     *\n     * @memberof music21.stream.Stream\n     * @param {Array<string>|string} classList - a list of classes to find\n     * @returns {music21.stream.Stream}\n     */\n    getElementsByClass(classList) {\n        const tempEls = [];\n        for (let i = 0; i < this.length; i++) {\n            const thisEl = this.get(i);\n            // console.warn(thisEl);\n            if (thisEl.isClassOrSubclass === undefined) {\n                console.err('what the hell is a ', thisEl, 'doing in a Stream?');\n            } else if (thisEl.isClassOrSubclass(classList)) {\n                tempEls.push(thisEl);\n            }\n        }\n        const newSt = new stream.Stream(); // TODO: take Stream class Part, etc.\n        newSt.elements = tempEls;\n        return newSt;\n    }\n    /**\n     * Sets Pitch.accidental.displayStatus for every element with a\n     * pitch or pitches in the stream. If a natural needs to be displayed\n     * and the Pitch does not have an accidental object yet, adds one.\n     *\n     * Called automatically before appendCanvas routines are called.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {music21.stream.Stream} this\n     */\n    makeAccidentals() {\n        // cheap version of music21p method\n        const extendableStepList = {};\n        const stepNames = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\n        for (let i = 0; i < stepNames.length; i++) {\n            const stepName = stepNames[i];\n            let stepAlter = 0;\n            if (this.keySignature !== undefined) {\n                const tempAccidental = this.keySignature.accidentalByStep(stepName);\n                if (tempAccidental !== undefined) {\n                    stepAlter = tempAccidental.alter;\n                    // console.log(stepAlter + \" \" + stepName);\n                }\n            }\n            extendableStepList[stepName] = stepAlter;\n        }\n        const lastOctaveStepList = [];\n        let lastStepDict;\n        let p;\n        for (let i = 0; i < 10; i++) {\n            lastStepDict = $.extend({}, extendableStepList);\n            lastOctaveStepList.push(lastStepDict);\n        }\n        const lastOctavelessStepDict = $.extend({}, extendableStepList); // probably unnecessary, but safe...\n        for (let i = 0; i < this.length; i++) {\n            const el = this.get(i);\n            if (el.pitch !== undefined) { // note\n                p = el.pitch;\n                lastStepDict = lastOctaveStepList[p.octave];\n                this._makeAccidentalForOnePitch(p, lastStepDict, lastOctavelessStepDict);\n            } else if (el._notes !== undefined) { // chord\n                for (let j = 0; j < el._notes.length; j++) {\n                    p = el._notes[j].pitch;\n                    lastStepDict = lastOctaveStepList[p.octave];\n                    this._makeAccidentalForOnePitch(p, lastStepDict, lastOctavelessStepDict);\n                }\n            }\n        }\n        return this;\n    }\n\n//  returns pitch\n    _makeAccidentalForOnePitch(p, lastStepDict, lastOctavelessStepDict) {\n        let newAlter;\n        if (p.accidental === undefined) {\n            newAlter = 0;\n        } else {\n            newAlter = p.accidental.alter;\n        }\n        // console.log(p.name + \" \" + lastStepDict[p.step].toString());\n        if ((lastStepDict[p.step] !== newAlter)\n                || (lastOctavelessStepDict[p.step] !== newAlter)) {\n            if (p.accidental === undefined) {\n                p.accidental = new pitch.Accidental('natural');\n            }\n            p.accidental.displayStatus = true;\n            // console.log(\"setting displayStatus to true\");\n        } else if ((lastStepDict[p.step] === newAlter)\n                && (lastOctavelessStepDict[p.step] === newAlter)) {\n            if (p.accidental !== undefined) {\n                p.accidental.displayStatus = false;\n            }\n            // console.log(\"setting displayStatus to false\");\n        }\n        lastStepDict[p.step] = newAlter;\n        lastOctavelessStepDict[p.step] = newAlter;\n        return p;\n    }\n\n    /**\n     * Sets the render options for any substreams (such as placing them\n     * in systems, etc.) DOES NOTHING for music21.stream.Stream, but is\n     * overridden in subclasses.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {music21.stream.Stream} this\n     */\n    setSubstreamRenderOptions() {\n        /* does nothing for standard streams ... */\n        return this;\n    }\n    /**\n     * Resets all the RenderOptions back to defaults. Can run recursively\n     * and can also preserve the `RenderOptions.events` object.\n     *\n     * @memberof music21.stream.Stream\n     * @param {Boolean} [recursive=false]\n     * @param {Boolean} [preserveEvents=false]\n     * @returns {music21.stream.Stream} this\n     */\n    resetRenderOptions(recursive, preserveEvents) {\n        const oldEvents = this.renderOptions.events;\n        this.renderOptions = new renderOptions.RenderOptions();\n        if (preserveEvents) {\n            this.renderOptions.events = oldEvents;\n        }\n\n        if (recursive) {\n            for (let i = 0; i < this.length; i++) {\n                const el = this.get(i);\n                if (el.isClassOrSubclass('Stream')) {\n                    el.resetRenderOptions(recursive, preserveEvents);\n                }\n            }\n        }\n        return this;\n    }\n\n\n//  * *********  VexFlow functionality\n\n    /**\n     * Uses {@link music21.vfShow.Renderer} to render Vexflow onto an\n     * existing canvas object.\n     *\n     * Sets canvas.storedStream to this\n     *\n     * Runs `this.setRenderInteraction` on the canvas.\n     *\n     * Will be moved to vfShow eventually when converter objects are enabled...maybe.\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject|JQueryDOMObject} canvas - a canvas object\n     * @returns {music21.stream.Stream} this\n     */\n    renderVexflowOnCanvas(canvas) {\n        if (canvas.jquery) {\n            canvas = canvas[0];\n        }\n        const vfr = new vfShow.Renderer(this, canvas);\n        vfr.render();\n        canvas.storedStream = this;\n        this.setRenderInteraction(canvas);\n        return this;\n    }\n\n    /**\n     * Estimate the stream height for the Stream.\n     *\n     * If there are systems they will be incorporated into the height unless `ignoreSystems` is `true`.\n     *\n     * @memberof music21.stream.Stream\n     * @param {Boolean} [ignoreSystems=false]\n     * @returns {number} height in pixels\n     */\n    estimateStreamHeight(ignoreSystems) {\n        const staffHeight = this.renderOptions.naiveHeight;\n        const systemPadding = this.systemPadding;\n        let numSystems;\n        if (this.isClassOrSubclass('Score')) {\n            const numParts = this.length;\n            numSystems = this.numSystems();\n            if (numSystems === undefined || ignoreSystems) {\n                numSystems = 1;\n            }\n            const scoreHeight = (numSystems * staffHeight * numParts) + ((numSystems - 1) * systemPadding);\n            // console.log('scoreHeight of ' + scoreHeight);\n            return scoreHeight;\n        } else if (this.isClassOrSubclass('Part')) {\n            numSystems = 1;\n            if (!ignoreSystems) {\n                numSystems = this.numSystems();\n            }\n            if (debug) {\n                console.log('estimateStreamHeight for Part: numSystems [' + numSystems +\n                        '] * staffHeight [' + staffHeight + '] + (numSystems [' + numSystems +\n                        '] - 1) * systemPadding [' + systemPadding + '].'\n                );\n            }\n            return (numSystems * staffHeight) + ((numSystems - 1) * systemPadding);\n        } else {\n            return staffHeight;\n        }\n    }\n\n    /**\n     * Estimates the length of the Stream in pixels.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {number} length in pixels\n     */\n    estimateStaffLength() {\n        let i;\n        let totalLength;\n        if (this.renderOptions.overriddenWidth !== undefined) {\n            // console.log(\"Overridden staff width: \" + this.renderOptions.overriddenWidth);\n            return this.renderOptions.overriddenWidth;\n        }\n        if (this.hasVoices()) {\n            let maxLength = 0;\n            for (i = 0; i < this.length; i++) {\n                const v = this.get(i);\n                if (v.isClassOrSubclass('Stream')) {\n                    const thisLength = v.estimateStaffLength() + v.renderOptions.staffPadding;\n                    if (thisLength > maxLength) {\n                        maxLength = thisLength;\n                    }\n                }\n            }\n            return maxLength;\n        } else if (this.hasSubStreams()) { // part\n            totalLength = 0;\n            for (i = 0; i < this.length; i++) {\n                const m = this.get(i);\n                if (m.isClassOrSubclass('Stream')) {\n                    totalLength += m.estimateStaffLength() + m.renderOptions.staffPadding;\n                    if ((i !== 0) && (m.renderOptions.startNewSystem === true)) {\n                        break;\n                    }\n                }\n            }\n            return totalLength;\n        } else {\n            const rendOp = this.renderOptions;\n            totalLength = 30 * this.length;\n            totalLength += rendOp.displayClef ? 30 : 0;\n            totalLength += (rendOp.displayKeySignature && this.keySignature) ? this.keySignature.width : 0;\n            totalLength += rendOp.displayTimeSignature ? 30 : 0;\n            // totalLength += rendOp.staffPadding;\n            return totalLength;\n        }\n    }\n\n//  * ***** MIDI related routines...\n\n    /**\n     * Plays the Stream through the MIDI/sound playback (for now, only MIDI.js is supported)\n     *\n     * `options` can be an object containing:\n     * - instrument: {@link music21.instrument.Instrument} object (default, `this.instrument`)\n     * - tempo: number (default, `this.tempo`)\n     *\n     * Does not have functionality for stopping etc., will be removed eventually\n     * and replaced with something better in {@link music21.streamInteraction}\n     *\n     * @memberof music21.stream.Stream\n     * @param {object} [options] - object of playback options\n     * @returns {music21.stream.Stream} this\n     */\n    playStream(options) {\n        const params = {\n            instrument: this.instrument,\n            tempo: this.tempo,\n            done: undefined,\n            startNote: undefined,\n        };\n        common.merge(params, options);\n        const startNote = params.startNote;\n        let currentNote = 0;\n        if (startNote !== undefined) {\n            currentNote = startNote;\n        }\n        const flatEls = this.flat.elements;\n        const lastNote = flatEls.length;\n        this._stopPlaying = false;\n        const thisStream = this;\n\n        const playNext = function playNext(elements, params) {\n            if (currentNote < lastNote && !thisStream._stopPlaying) {\n                const el = elements[currentNote];\n                let nextNote;\n                if (currentNote < lastNote + 1) {\n                    nextNote = elements[currentNote + 1];\n                }\n                let milliseconds = 0;\n                if (el.playMidi !== undefined) {\n                    milliseconds = el.playMidi(params.tempo, nextNote, params);\n                }\n                currentNote += 1;\n                setTimeout(() => { playNext(elements, params); }, milliseconds);\n            } else if (params && params.done) {\n                params.done.call();\n            }\n        };\n        playNext(flatEls, params);\n        return this;\n    }\n\n    /**\n     * Stops a stream from playing if it currently is.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {musci21.stream.Stream} this\n     */\n    stopPlayStream() {\n        // turns off all currently playing MIDI notes (on any stream) and stops playback.\n        this._stopPlaying = true;\n        for (let i = 0; i < 127; i++) {\n            MIDI.noteOff(0, i, 0);\n        }\n        return this;\n    }\n    /* ----------------------------------------------------------------------\n     *\n     *  Canvas routines -- to be factored out eventually.\n     *\n     */\n\n    /**\n     * Creates and returns a new `&lt;canvas&gt;` object.\n     *\n     * Calls setSubstreamRenderOptions() first.\n     *\n     * Does not render on canvas.\n     *\n     * @memberof music21.stream.Stream\n     * @param {number|string|undefined} width - will use `this.estimateStaffLength()` + `this.renderOptions.staffPadding` if not given\n     * @param {number|string|undefined} height - if undefined will use `this.renderOptions.height`. If still undefined, will use `this.estimateStreamHeight()`\n     * @returns {JQueryDOMObject} canvas in jquery.\n     */\n    createNewCanvas(width, height) {\n        if (this.hasSubStreams()) {\n            this.setSubstreamRenderOptions();\n        }\n\n        const newCanvas = $('<canvas/>'); // .css('border', '1px red solid');\n\n        if (width !== undefined) {\n            if (typeof width === 'string') {\n                width = common.stripPx(width);\n            }\n            newCanvas.attr('width', width);\n        } else {\n            const computedWidth = this.estimateStaffLength() + this.renderOptions.staffPadding + 0;\n            newCanvas.attr('width', computedWidth);\n        }\n        if (height !== undefined) {\n            newCanvas.attr('height', height);\n        } else {\n            let computedHeight;\n            if (this.renderOptions.height === undefined) {\n                computedHeight = this.estimateStreamHeight();\n                // console.log('computed Height estim: ' + computedHeight);\n            } else {\n                computedHeight = this.renderOptions.height;\n                // console.log('computed Height: ' + computedHeight);\n            }\n            newCanvas.attr('height', computedHeight * this.renderOptions.scaleFactor.y);\n        }\n        return newCanvas;\n    }\n\n    /**\n     * Creates a rendered, playable canvas where clicking plays it.\n     *\n     * Called from appendNewCanvas() etc.\n     *\n     * @memberof music21.stream.Stream\n     * @param {number|string|undefined} width\n     * @param {number|string|undefined} height\n     * @returns {JQueryDOMObject} canvas\n     */\n    createPlayableCanvas(width, height) {\n        this.renderOptions.events.click = 'play';\n        return this.createCanvas(width, height);\n    }\n\n    /**\n     * Creates a new canvas and renders vexflow on it\n     *\n     * @memberof music21.stream.Stream\n     * @param {number|string|undefined} [width]\n     * @param {number|string|undefined} [height]\n     * @returns {JQueryDOMObject} canvas\n     */\n    createCanvas(width, height) {\n        const $newCanvas = this.createNewCanvas(width, height);\n        this.renderVexflowOnCanvas($newCanvas);\n        return $newCanvas;\n    }\n    /**\n     * Creates a new canvas, renders vexflow on it, and appends it to the DOM.\n     *\n     * @memberof music21.stream.Stream\n     * @param {JQueryDOMObject|DOMObject} [appendElement=document.body] - where to place the canvas\n     * @param {number|string} [width]\n     * @param {number|string} [height]\n     * @returns {DOMObject} canvas (not the jQueryDOMObject -- this is a difference with other routines and should be fixed. TODO: FIX)\n     *\n     */\n    appendNewCanvas(appendElement, width, height) {\n        if (appendElement === undefined) {\n            appendElement = 'body';\n        }\n        let $appendElement = appendElement;\n        if (appendElement.jquery === undefined) {\n            $appendElement = $(appendElement);\n        }\n\n//      if (width === undefined && this.renderOptions.maxSystemWidth === undefined) {\n//      var $bodyElement = bodyElement;\n//      if (bodyElement.jquery === undefined) {\n//      $bodyElement = $(bodyElement);\n//      }\n//      width = $bodyElement.width();\n//      };\n\n        const canvasBlock = this.createCanvas(width, height);\n        $appendElement.append(canvasBlock);\n        return canvasBlock[0];\n    }\n\n    /**\n     * Replaces a particular Canvas with a new rendering of one.\n     *\n     * Note that if 'where' is empty, will replace all canvases on the page.\n     *\n     * @memberof music21.stream.Stream\n     * @param {JQueryDOMObject|DOMObject} [where] - the canvas to replace or a container holding the canvas(es) to replace.\n     * @param {Boolean} [preserveCanvasSize=false]\n     * @returns {JQueryDOMObject} the canvas\n     */\n    replaceCanvas(where, preserveCanvasSize) {\n        // if called with no where, replaces all the canvases on the page...\n        if (where === undefined) {\n            where = 'body';\n        }\n        let $where;\n        if (where.jquery === undefined) {\n            $where = $(where);\n        } else {\n            $where = where;\n            where = $where[0];\n        }\n        let $oldCanvas;\n        if ($where.prop('tagName') === 'CANVAS') {\n            $oldCanvas = $where;\n        } else {\n            $oldCanvas = $where.find('canvas');\n        }\n        // TODO: Max Width!\n        if ($oldCanvas.length === 0) {\n            throw new Music21Exception('No canvas defined for replaceCanvas!');\n        } else if ($oldCanvas.length > 1) {\n            // change last canvas...\n            // replacing each with canvasBlock doesn't work\n            // anyhow, it just resizes the canvas but doesn't\n            // draw.\n            $oldCanvas = $($oldCanvas[$oldCanvas.length - 1]);\n        }\n\n        let canvasBlock;\n        if (preserveCanvasSize) {\n            const width = $oldCanvas.width();\n            const height = $oldCanvas.height();\n            canvasBlock = this.createCanvas(width, height);\n        } else {\n            canvasBlock = this.createCanvas();\n        }\n\n        $oldCanvas.replaceWith(canvasBlock);\n        return canvasBlock;\n    }\n\n    /**\n     * Renders a canvas which has a scrollbar when clicked.\n     *\n     * (this is a dumb way of doing this.  Expect it to disappear...)\n     *\n     * @memberof music21.stream.Stream\n     * @param {JQueryDOMObject|DOMObject} [where]\n     * @returns {DOMObject} canvas\n     */\n    renderScrollableCanvas(where) {\n        let $where = where;\n        if (where === undefined) {\n            $where = $(document.body);\n        } else if (where.jquery === undefined) {\n            $where = $(where);\n        }\n        const $innerDiv = $('<div>').css('position', 'absolute');\n        let c;\n        this.renderOptions.events.click = (function renderOptionsOuterEventClick(storedThis) {\n            return (function renderOptionsInnerEventClick(event) {\n                storedThis.scrollScoreStart(c, event);\n            });\n        }(this)); // create new function with this stream as storedThis\n        c = this.appendNewCanvas($innerDiv);\n        this.setRenderInteraction($innerDiv);\n        $where.append($innerDiv);\n        return c;\n    }\n\n    /**\n     * Sets up a {@link music21.streamInteraction.ScrollPlayer} for this\n     * canvas.\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} c - canvas\n     * @param {Event} [event] - the event that caused the scrolling to start\n     * (needed because `event.stopPropagation()` is called)\n     * @returns {music21.streamInteraction.ScrollPlayer}\n     */\n    scrollScoreStart(c, event) {\n        const scrollPlayer = new streamInteraction.ScrollPlayer(this, c);\n        scrollPlayer.startPlaying();\n        if (event !== undefined) {\n            event.stopPropagation();\n        }\n        return scrollPlayer;\n    }\n\n\n    /**\n     * Set the type of interaction on the canvas based on\n     *    - Stream.renderOptions.events.click\n     *    - Stream.renderOptions.events.dblclick\n     *    - Stream.renderOptions.events.resize\n     *\n     * Currently the only options available for each are:\n     *    - 'play' (string)\n     *    - 'reflow' (string; only on event.resize)\n     *    - customFunction (will receive event as a first variable; should set up a way to\n     *                    find the original stream; var s = this; var f = function () { s...}\n     *                   )\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} canvasOrDiv - canvas or the Div surrounding it.\n     * @returns {music21.stream.Stream} this\n     */\n    setRenderInteraction(canvasOrDiv) {\n        let $canvas = canvasOrDiv;\n        if (canvasOrDiv === undefined) {\n            return this;\n        } else if (canvasOrDiv.jquery === undefined) {\n            $canvas = $(canvasOrDiv);\n        }\n        // TODO: assumes that canvas has a .storedStream function? can this be done by setting\n        // a variable var storedStream = this; and thus get rid of the assumption?\n        const playFunc = (function playStreamBound() { this.playStream(); }).bind(this);\n\n        $.each(this.renderOptions.events, $.proxy(function setRenderInteractionProxy(eventType, eventFunction) {\n            $canvas.off(eventType);\n            if (typeof (eventFunction) === 'string' && eventFunction === 'play') {\n                $canvas.on(eventType, playFunc);\n            } else if (typeof (eventFunction) === 'string' && eventType === 'resize' && eventFunction === 'reflow') {\n                this.windowReflowStart($canvas);\n            } else if (eventFunction !== undefined) {\n                $canvas.on(eventType, eventFunction);\n            }\n        }, this));\n        return this;\n    }\n\n    /**\n     *\n     * Recursively search downward for the closest storedVexflowStave...\n     *\n     * @memberof music21.stream.Stream\n     * @returns {Vex.Flow.Stave|undefined}\n     */\n    recursiveGetStoredVexflowStave() {\n        let storedVFStave = this.storedVexflowStave;\n        if (storedVFStave === undefined) {\n            if (!this.hasSubStreams()) {\n                return undefined;\n            } else {\n                const subStreams = this.getElementsByClass('Stream');\n                storedVFStave = subStreams.get(0).storedVexflowStave;\n                if (storedVFStave === undefined) {\n                    // TODO: bad programming ... should support continuous recurse\n                    // but good enough for now...\n                    if (subStreams.get(0).hasSubStreams()) {\n                        storedVFStave = subStreams.get(0).get(0).storedVexflowStave;\n                    }\n                }\n            }\n        }\n        return storedVFStave;\n    }\n\n    /**\n     * Given a mouse click, or other event with .pageX and .pageY,\n     * find the x and y for the canvas.\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} canvas\n     * @param {Event} e\n     * @returns {Array<number>} two-elements, [x, y] in pixels.\n     */\n    getUnscaledXYforCanvas(canvas, e) {\n        let offset = null;\n        if (canvas === undefined) {\n            offset = { left: 0, top: 0 };\n        } else {\n            offset = $(canvas).offset();\n        }\n        /*\n         * mouse event handler code from: http://diveintohtml5.org/canvas.html\n         */\n        let xClick;\n        let yClick;\n        if (e.pageX !== undefined && e.pageY !== undefined) {\n            xClick = e.pageX;\n            yClick = e.pageY;\n        } else {\n            xClick = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n            yClick = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n        }\n        const xPx = (xClick - offset.left);\n        const yPx = (yClick - offset.top);\n        return [xPx, yPx];\n    }\n\n    /**\n     * return a list of [scaledX, scaledY] for\n     * a canvas element.\n     *\n     * xScaled refers to 1/scaleFactor.x -- for instance, scaleFactor.x = 0.7 (default)\n     * x of 1 gives 1.42857...\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} canvas\n     * @param {Event} e\n     * @returns {Array<number>} [scaledX, scaledY]\n     */\n    getScaledXYforCanvas(canvas, e) {\n        const [xPx, yPx] = this.getUnscaledXYforCanvas(canvas, e);\n        const pixelScaling = this.renderOptions.scaleFactor;\n\n        const yPxScaled = yPx / pixelScaling.y;\n        const xPxScaled = xPx / pixelScaling.x;\n        return [xPxScaled, yPxScaled];\n    }\n    /**\n     *\n     * Given a Y position find the diatonicNoteNum that a note at that position would have.\n     *\n     * searches this.storedVexflowStave\n     *\n     * Y position must be offset from the start of the stave...\n     *\n     * @memberof music21.stream.Stream\n     * @param {number} yPxScaled\n     * @returns {Int}\n     */\n    diatonicNoteNumFromScaledY(yPxScaled) {\n        const storedVFStave = this.recursiveGetStoredVexflowStave();\n        // for (var i = -10; i < 10; i++) {\n        //    console.log(\"line: \" + i + \" y: \" + storedVFStave.getYForLine(i));\n        // }\n        const lineSpacing = storedVFStave.options.spacing_between_lines_px;\n        const linesAboveStaff = storedVFStave.options.space_above_staff_ln;\n\n        const notesFromTop = yPxScaled * 2 / lineSpacing;\n        const notesAboveLowestLine = ((storedVFStave.options.num_lines - 1 + linesAboveStaff) * 2) - notesFromTop;\n        const clickedDiatonicNoteNum = this.clef.lowestLine + Math.round(notesAboveLowestLine);\n        return clickedDiatonicNoteNum;\n    }\n\n    /**\n     *\n     * Return the note at pixel X (or within allowablePixels [default 10])\n     * of the note.\n     *\n     * systemIndex element is not used on bare Stream\n\n     * @memberof music21.stream.Stream\n     * @param {number} xPxScaled\n     * @param {number} [allowablePixels=10]\n     * @param {number} [unused_systemIndex]\n     * @returns {music21.base.Music21Object|undefined}\n     */\n    noteElementFromScaledX(xPxScaled, allowablePixels, unused_systemIndex) {\n        let foundNote;\n        if (allowablePixels === undefined) {\n            allowablePixels = 10;\n        }\n\n        for (let i = 0; i < this.length; i++) {\n            const n = this.get(i);\n            /* should also\n             * compensate for accidentals...\n             */\n            if (xPxScaled > (n.x - allowablePixels)\n                    && xPxScaled < (n.x + n.width + allowablePixels)) {\n                foundNote = n;\n                break; /* O(n); can be made O(log n) */\n            }\n        }\n        // console.log(n.pitch.nameWithOctave);\n        return foundNote;\n    }\n\n    /**\n     * Given an event object, and an x and y location, returns a two-element array\n     * of the pitch.Pitch.diatonicNoteNum that was clicked (i.e., if C4 was clicked this\n     * will return 29; if D4 was clicked this will return 30) and the closest note in the\n     * stream that was clicked.\n     *\n     * Return a list of [diatonicNoteNum, closestXNote]\n     * for an event (e) called on the canvas (canvas)\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} canvas\n     * @param {Event} e\n     * @param {number} x\n     * @param {number} y\n     * @returns {Array} [diatonicNoteNum, closestXNote]\n     */\n    findNoteForClick(canvas, e, x, y) {\n        if (x === undefined || y === undefined) {\n            [x, y] = this.getScaledXYforCanvas(canvas, e);\n        }\n        const clickedDiatonicNoteNum = this.diatonicNoteNumFromScaledY(y);\n        const foundNote = this.noteElementFromScaledX(x);\n        return [clickedDiatonicNoteNum, foundNote];\n    }\n\n    /**\n     * Change the pitch of a note given that it has been clicked and then\n     * call changedCallbackFunction\n     *\n     * To be removed...\n     *\n     * @memberof music21.stream.Stream\n     * @param {Int} clickedDiatonicNoteNum\n     * @param {music21.base.Music21Object} foundNote\n     * @param {DOMObject} canvas\n     * @returns {any} output of changedCallbackFunction\n     */\n    noteChanged(clickedDiatonicNoteNum, foundNote, canvas) {\n        const n = foundNote;\n        const p = new pitch.Pitch('C');\n        p.diatonicNoteNum = clickedDiatonicNoteNum;\n        p.accidental = n.pitch.accidental;\n        n.pitch = p;\n        n.stemDirection = undefined;\n        this.activeNote = n;\n        this.redrawCanvas(canvas);\n        if (this.changedCallbackFunction !== undefined) {\n            return this.changedCallbackFunction({ foundNote: n, canvas });\n        } else {\n            return undefined;\n        }\n    }\n    /**\n     * Redraws a canvas, keeping the events of the previous canvas.\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} canvas\n     * @returns {music21.stream.Stream} this\n     */\n    redrawCanvas(canvas) {\n        // this.resetRenderOptions(true, true); // recursive, preserveEvents\n        // this.setSubstreamRenderOptions();\n        const $canvas = $(canvas); // works even if canvas is already $jquery\n        const $newCanv = this.createNewCanvas(canvas.width, canvas.height);\n        this.renderVexflowOnCanvas($newCanv);\n        $canvas.replaceWith($newCanv);\n        common.jQueryEventCopy($.event, $canvas, $newCanv); /* copy events -- using custom extension... */\n        return this;\n    }\n\n    /**\n     * Renders a stream on a canvas with the ability to edit it and\n     * a toolbar that allows the accidentals to be edited.\n     *\n     * @memberof music21.stream.Stream\n     * @param {number} [width]\n     * @param {number} [height]\n     * @returns {DOMObject} &lt;div&gt; tag around the canvas.\n     */\n    editableAccidentalCanvas(width, height) {\n        /*\n         * Create an editable canvas with an accidental selection bar.\n         */\n        const d = $('<div/>').css('text-align', 'left').css('position', 'relative');\n        const buttonDiv = this.getAccidentalToolbar();\n        d.append(buttonDiv);\n        d.append($(\"<br clear='all'/>\"));\n        this.renderOptions.events.click = this.canvasChangerFunction;\n        this.appendNewCanvas(d, width, height); // var can =\n        return d;\n    }\n\n\n    /*\n     * Canvas toolbars...\n     */\n\n    /**\n     *\n     * @memberof music21.stream.Stream\n     * @param {Int} minAccidental - alter of the min accidental (default -1)\n     * @param {Int} maxAccidental - alter of the max accidental (default 1)\n     * @param {jQueryObject} $siblingCanvas - canvas to use for redrawing;\n     * @returns {jQueryObject} the accidental toolbar.\n     */\n    getAccidentalToolbar(minAccidental, maxAccidental, $siblingCanvas) {\n        if (minAccidental === undefined) {\n            minAccidental = -1;\n        }\n        if (maxAccidental === undefined) {\n            maxAccidental = 1;\n        }\n        minAccidental = Math.round(minAccidental);\n        maxAccidental = Math.round(maxAccidental);\n\n        const addAccidental = (newAlter, clickEvent) => {\n            /*\n             * To be called on a button...\n             */\n            let $useCanvas = $siblingCanvas;\n            if ($useCanvas === undefined) {\n                let $searchParent = $(clickEvent.target).parent();\n                while ($searchParent !== undefined\n                            && ($useCanvas === undefined\n                                    || $useCanvas[0] === undefined)) {\n                    $useCanvas = $searchParent.find('canvas');\n                    $searchParent = $searchParent.parent();\n                }\n                if ($useCanvas[0] === undefined) {\n                    console.log('Could not find a canvas...');\n                    return;\n                }\n            }\n            if (this.activeNote !== undefined) {\n                const n = this.activeNote;\n                n.pitch.accidental = new pitch.Accidental(newAlter);\n                /* console.log(n.pitch.name); */\n                this.redrawCanvas($useCanvas[0]);\n                if (this.changedCallbackFunction !== undefined) {\n                    this.changedCallbackFunction({ canvas: $useCanvas[0] });\n                }\n            }\n        };\n\n\n        const $buttonDiv = $('<div/>').attr('class', 'accidentalToolbar scoreToolbar');\n        for (let i = minAccidental; i <= maxAccidental; i++) {\n            const acc = new pitch.Accidental(i);\n            $buttonDiv.append($('<button>' + acc.unicodeModifier + '</button>')\n                             .click((e) => addAccidental(i, e))\n//                  .css('font-family', 'Bravura')\n//                  .css('font-size', '40px')\n            );\n        }\n        return $buttonDiv;\n    }\n    /**\n     *\n     * @memberof music21.stream.Stream\n     * @returns {jQueryObject} a Div containing two buttons -- play and stop\n     */\n    getPlayToolbar() {\n        const $buttonDiv = $('<div/>').attr('class', 'playToolbar scoreToolbar');\n        const $bPlay = $('<button>&#9658</button>');\n        $bPlay.click(() => { this.playStream(); });\n        $buttonDiv.append($bPlay);\n        const $bStop = $('<button>&#9724</button>');\n        $bStop.click(() => { this.stopPlayStream(); });\n        $buttonDiv.append($bStop);\n        return $buttonDiv;\n    }\n//  reflow\n\n    /**\n     * Begins a series of bound events to the window that makes it\n     * so that on resizing the stream is redrawn and reflowed to the\n     * new size.\n     *\n     * @memberof music21.stream.Stream\n     * @param {JQueryDOMObject} jCanvas\n     * @returns {music21.stream.Stream} this\n     */\n    windowReflowStart(jCanvas) {\n        // set up a bunch of windowReflow bindings that affect the canvas.\n        const callingStream = this;\n        let jCanvasNow = jCanvas;\n        $(window).bind('resizeEnd', () => {\n            // do something, window hasn't changed size in 500ms\n            const jCanvasParent = jCanvasNow.parent();\n            const newWidth = jCanvasParent.width();\n            const canvasWidth = newWidth;\n            // console.log(canvasWidth);\n            console.log('resizeEnd triggered', newWidth);\n            // console.log(callingStream.renderOptions.events.click);\n            callingStream.resetRenderOptions(true, true); // recursive, preserveEvents\n            // console.log(callingStream.renderOptions.events.click);\n            callingStream.maxSystemWidth = canvasWidth - 40;\n            jCanvasNow.remove();\n            const canvasObj = callingStream.appendNewCanvas(jCanvasParent);\n            jCanvasNow = $(canvasObj);\n        });\n        $(window).resize(function resizeCanvasTo() {\n            if (this.resizeTO) {\n                clearTimeout(this.resizeTO);\n            }\n            this.resizeTO = setTimeout(function resizeToTimeout() {\n                $(this).trigger('resizeEnd');\n            }, 200);\n        });\n        setTimeout(function triggerResizeOnCreateCanvas() {\n            const $window = $(window);\n            const doResize = $window.data('triggerResizeOnCreateCanvas');\n            if (doResize === undefined || doResize === true) {\n                $(this).trigger('resizeEnd');\n                $window.data('triggerResizeOnCreateCanvas', false);\n            }\n        }, 1000);\n        return this;\n    }\n    /**\n     * Does this stream have a {@link music21.stream.Voice} inside it?\n     *\n     * @memberof music21.stream.Stream\n     * @returns {Boolean}\n     */\n    hasVoices() {\n        for (let i = 0; i < this.length; i++) {\n            const el = this.get(i);\n            if (el.isClassOrSubclass('Voice')) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\nstream.Stream = Stream;\n\n\n/**\n *\n * @class Voice\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Voice extends Stream {\n    constructor() {\n        super();\n        this.classes.push('Voice');\n    }\n}\nstream.Voice = Voice;\n\n\n/**\n * @class Measure\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Measure extends Stream {\n    constructor() {\n        super();\n        this.classes.push('Measure');\n        this.number = 0; // measure number\n    }\n}\nstream.Measure = Measure;\n\n/**\n * Part -- specialized to handle Measures inside it\n *\n * @class Part\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Part extends Stream {\n    constructor() {\n        super();\n        this.classes.push('Part');\n        this.systemHeight = this.renderOptions.naiveHeight;\n    }\n\n    /**\n     * How many systems does this Part have?\n     *\n     * Does not change any reflow information, so by default it's always 1.\n     *\n     * @memberof music21.stream.Part\n     * @returns {Number}\n     */\n    numSystems() {\n        let numSystems = 1;\n        const subStreams = this.getElementsByClass('Stream');\n        for (let i = 1; i < subStreams.length; i++) {\n            if (subStreams.get(i).renderOptions.startNewSystem) {\n                numSystems++;\n            }\n        }\n        return numSystems;\n    }\n\n    /**\n     * Find the width of every measure in the Part.\n     *\n     * @memberof music21.stream.Part\n     * @returns {Array<number>}\n     */\n    getMeasureWidths() {\n        /* call after setSubstreamRenderOptions */\n        const measureWidths = [];\n        for (let i = 0; i < this.length; i++) {\n            const el = this.get(i);\n            if (el.isClassOrSubclass('Measure')) {\n                const elRendOp = el.renderOptions;\n                measureWidths[elRendOp.measureIndex] = elRendOp.width;\n            }\n        }\n        /* console.log(measureWidths);\n         *\n         */\n        return measureWidths;\n    }\n    /**\n     * Overrides the default music21.stream.Stream#estimateStaffLength\n     *\n     * @memberof music21.stream.Part\n     * @returns {number}\n     */\n    estimateStaffLength() {\n        if (this.renderOptions.overriddenWidth !== undefined) {\n            // console.log(\"Overridden staff width: \" + this.renderOptions.overriddenWidth);\n            return this.renderOptions.overriddenWidth;\n        }\n        if (this.hasSubStreams()) { // part with Measures underneath\n            let totalLength = 0;\n            const subStreams = this.getElementsByClass('Measure');\n            for (let i = 0; i < subStreams.length; i++) {\n                const m = subStreams.get(i);\n                // this looks wrong, but actually seems to be right. moving it to\n                // after the break breaks things.\n                totalLength += m.estimateStaffLength() + m.renderOptions.staffPadding;\n                if ((i !== 0) && (m.renderOptions.startNewSystem === true)) {\n                    break;\n                }\n            }\n            return totalLength;\n        }\n        // no measures found in part... treat as measure\n        const tempM = new stream.Measure();\n        tempM.elements = this.elements;\n        return tempM.estimateStaffLength();\n    }\n    /**\n     * Divide a part up into systems and fix the measure\n     * widths so that they are all even.\n     *\n     * Note that this is done on the part level even though\n     * the measure widths need to be consistent across parts.\n     *\n     * This is possible because the system is deterministic and\n     * will come to the same result for each part.  Opportunity\n     * for making more efficient through this...\n     *\n     * @memberof music21.stream.Part\n     * @param systemHeight\n     * @returns {Array}\n     */\n    fixSystemInformation(systemHeight) {\n        /*\n         * console.log('system height: ' + systemHeight);\n         */\n        if (systemHeight === undefined) {\n            systemHeight = this.systemHeight; /* part.show() called... */\n        } else if (debug) {\n            console.log('overridden systemHeight: ' + systemHeight);\n        }\n        const systemPadding = this.renderOptions.systemPadding || this.renderOptions.naiveSystemPadding;\n        const measureWidths = this.getMeasureWidths();\n        const maxSystemWidth = this.maxSystemWidth; /* of course fix! */\n        const systemCurrentWidths = [];\n        const systemBreakIndexes = [];\n        let lastSystemBreak = 0; /* needed to ensure each line has at least one measure */\n        const startLeft = 20; /* TODO: make it obtained elsewhere */\n        let currentLeft = startLeft;\n        let i;\n        for (i = 0; i < measureWidths.length; i++) {\n            const currentRight = currentLeft + measureWidths[i];\n            /* console.log(\"left: \" + currentLeft + \" ; right: \" + currentRight + \" ; m: \" + i); */\n            if ((currentRight > maxSystemWidth) && (lastSystemBreak !== i)) {\n                systemBreakIndexes.push(i - 1);\n                systemCurrentWidths.push(currentLeft);\n\n                // console.log('setting new width at ' + currentLeft);\n                currentLeft = startLeft + measureWidths[i]; // 20 + this width;\n                lastSystemBreak = i;\n            } else {\n                currentLeft = currentRight;\n            }\n        }\n        // console.log(systemCurrentWidths);\n        // console.log(systemBreakIndexes);\n\n        let currentSystemIndex = 0;\n        let leftSubtract = 0;\n        let newLeftSubtract;\n        for (i = 0; i < this.length; i++) {\n            const m = this.get(i);\n            if (m.renderOptions === undefined) {\n                continue;\n            }\n            if (i === 0) {\n                m.renderOptions.startNewSystem = true;\n            }\n            currentLeft = m.renderOptions.left;\n\n            if (systemBreakIndexes.indexOf(i - 1) !== -1) {\n                /* first measure of new System */\n                const oldWidth = m.renderOptions.width;\n                m.renderOptions.displayClef = true;\n                m.renderOptions.displayKeySignature = true;\n                m.renderOptions.startNewSystem = true;\n\n                const newWidth = m.estimateStaffLength() + m.renderOptions.staffPadding;\n                m.renderOptions.width = newWidth;\n                leftSubtract = currentLeft - 20;\n                // after this one, we'll have a new left subtract...\n                newLeftSubtract = leftSubtract - (newWidth - oldWidth);\n\n                currentSystemIndex++;\n            } else if (i !== 0) {\n                m.renderOptions.startNewSystem = false;\n                m.renderOptions.displayClef = false; // check for changed clef first?\n                m.renderOptions.displayKeySignature = false; // check for changed KS first?\n            }\n            m.renderOptions.systemIndex = currentSystemIndex;\n            let currentSystemMultiplier;\n            if (currentSystemIndex >= systemCurrentWidths.length) {\n                /* last system... non-justified */\n                currentSystemMultiplier = 1;\n            } else {\n                const currentSystemWidth = systemCurrentWidths[currentSystemIndex];\n                currentSystemMultiplier = maxSystemWidth / currentSystemWidth;\n                // console.log('systemMultiplier: ' + currentSystemMultiplier + ' max: ' + maxSystemWidth + ' current: ' + currentSystemWidth);\n            }\n            /* might make a small gap? fix? */\n            const newLeft = currentLeft - leftSubtract;\n            if (newLeftSubtract !== undefined) {\n                leftSubtract = newLeftSubtract;\n                newLeftSubtract = undefined;\n            }\n            // console.log('M: ' + i + ' ; old left: ' + currentLeft + ' ; new Left: ' + newLeft);\n            m.renderOptions.left = Math.floor(newLeft * currentSystemMultiplier);\n            m.renderOptions.width = Math.floor(m.renderOptions.width * currentSystemMultiplier);\n            const newTop = m.renderOptions.top + (currentSystemIndex * (systemHeight + systemPadding));\n            // console.log('M: ' + i + '; New top: ' + newTop + \" ; old Top: \" + m.renderOptions.top);\n            m.renderOptions.top = newTop;\n        }\n\n        return systemCurrentWidths;\n    }\n    /**\n     * overrides music21.stream.Stream#setSubstreamRenderOptions\n     *\n     * figures out the `.left` and `.top` attributes for all contained measures\n     *\n     * @memberof music21.stream.Part\n     */\n    setSubstreamRenderOptions() {\n        let currentMeasureIndex = 0; /* 0 indexed for now */\n        let currentMeasureLeft = 20;\n        const rendOp = this.renderOptions;\n        let lastTimeSignature;\n        let lastKeySignature;\n        let lastClef;\n\n        for (let i = 0; i < this.length; i++) {\n            const el = this.get(i);\n            if (el.isClassOrSubclass('Measure')) {\n                const elRendOp = el.renderOptions;\n                elRendOp.measureIndex = currentMeasureIndex;\n                elRendOp.top = rendOp.top;\n                elRendOp.partIndex = rendOp.partIndex;\n                elRendOp.left = currentMeasureLeft;\n\n                if (currentMeasureIndex === 0) {\n                    lastClef = el._clef;\n                    lastTimeSignature = el._timeSignature;\n                    lastKeySignature = el._keySignature;\n\n                    elRendOp.displayClef = true;\n                    elRendOp.displayKeySignature = true;\n                    elRendOp.displayTimeSignature = true;\n                } else {\n                    if (el._clef !== undefined\n                            && lastClef !== undefined\n                            && el._clef.name !== lastClef.name) {\n                        console.log('changing clefs for ', elRendOp.measureIndex, ' from ',\n                                lastClef.name, ' to ', el._clef.name);\n                        lastClef = el._clef;\n                        elRendOp.displayClef = true;\n                    } else {\n                        elRendOp.displayClef = false;\n                    }\n\n                    if (el._keySignature !== undefined\n                            && lastKeySignature !== undefined\n                            && el._keySignature.sharps !== lastKeySignature.sharps) {\n                        lastKeySignature = el._keySignature;\n                        elRendOp.displayKeySignature = true;\n                    } else {\n                        elRendOp.displayKeySignature = false;\n                    }\n\n                    if (el._timeSignature !== undefined && lastTimeSignature !== undefined &&\n                            el._timeSignature.ratioString !== lastTimeSignature.ratioString) {\n                        lastTimeSignature = el._timeSignature;\n                        elRendOp.displayTimeSignature = true;\n                    } else {\n                        elRendOp.displayTimeSignature = false;\n                    }\n                }\n                elRendOp.width = el.estimateStaffLength() + elRendOp.staffPadding;\n                elRendOp.height = el.estimateStreamHeight();\n                currentMeasureLeft += elRendOp.width;\n                currentMeasureIndex++;\n            }\n        }\n        return this;\n    }\n    /**\n     * Overrides the default music21.stream.Stream#findNoteForClick\n     * by taking into account systems\n     *\n     * @memberof music21.stream.Part\n     * @param {DOMObject} canvas\n     * @param {Event} e\n     * @returns {Array} [clickedDiatonicNoteNum, foundNote]\n     */\n    findNoteForClick(canvas, e) {\n        const [x, y] = this.getScaledXYforCanvas(canvas, e);\n\n        // debug = true;\n        if (debug) {\n            console.log('this.estimateStreamHeight(): ' +\n                    this.estimateStreamHeight() + ' / $(canvas).height(): ' + $(canvas).height());\n        }\n        let systemPadding = this.renderOptions.systemPadding;\n        if (systemPadding === undefined) {\n            systemPadding =  this.renderOptions.naiveSystemPadding;\n        }\n        const systemIndex = Math.floor(y / (this.systemHeight + systemPadding));\n        const scaledYRelativeToSystem = y - systemIndex * (this.systemHeight + systemPadding);\n        const clickedDiatonicNoteNum = this.diatonicNoteNumFromScaledY(scaledYRelativeToSystem);\n\n        const foundNote = this.noteElementFromScaledX(x, undefined, systemIndex);\n        return [clickedDiatonicNoteNum, foundNote];\n    }\n\n    /**\n     * Override the noteElementFromScaledX for Stream\n     * to take into account sub measures...\n     *\n     * @memberof music21.stream.Part\n     * @param {number} scaledX\n     * @param {number} allowablePixels\n     * @param {Int} systemIndex\n     * @returns {music21.base.Music21Object|undefined}\n     */\n    noteElementFromScaledX(scaledX, allowablePixels, systemIndex) {\n        let gotMeasure;\n        for (let i = 0; i < this.length; i++) {\n            // TODO: if not measure, do not crash...\n            const m = this.get(i);\n            const rendOp = m.renderOptions;\n            const left = rendOp.left;\n            const right = left + rendOp.width;\n            const top = rendOp.top;\n            const bottom = top + rendOp.height;\n            if (debug) {\n                console.log('Searching for X:' + Math.round(scaledX) +\n                        ' in M ' + i +\n                        ' with boundaries L:' + left + ' R:' + right +\n                        ' T: ' + top + ' B: ' + bottom);\n            }\n            if (scaledX >= left && scaledX <= right) {\n                if (systemIndex === undefined) {\n                    gotMeasure = m;\n                    break;\n                } else if (rendOp.systemIndex === systemIndex) {\n                    gotMeasure = m;\n                    break;\n                }\n            }\n        }\n        if (gotMeasure) {\n            return gotMeasure.noteElementFromScaledX(scaledX, allowablePixels);\n        } else {\n            return undefined;\n        }\n    }\n\n}\nstream.Part = Part;\n\n\n/**\n * Scores with multiple parts\n *\n * @class Score\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Score extends Stream {\n    constructor() {\n        super();\n        this.classes.push('Score');\n        this.measureWidths = [];\n        this.partSpacing = this.renderOptions.naiveHeight;\n    }\n    get systemPadding() {\n        const numParts = this.parts.length;\n        let systemPadding = this.renderOptions.systemPadding;\n        if (systemPadding === undefined) {\n            if (numParts === 1) {\n                systemPadding = this.renderOptions.naiveSystemPadding; // fix to 0\n            } else {\n                systemPadding = this.renderOptions.naiveSystemPadding;\n            }\n        }\n        return systemPadding;\n    }\n\n    /**\n     * overrides music21.stream.Stream#setSubstreamRenderOptions\n     *\n     * figures out the `.left` and `.top` attributes for all contained parts\n     *\n     * @memberof music21.stream.Score\n     * @returns {music21.stream.Score} this\n     */\n    setSubstreamRenderOptions() {\n        let currentPartNumber = 0;\n        let currentPartTop = 0;\n        const partSpacing = this.partSpacing;\n        for (let i = 0; i < this.length; i++) {\n            const el = this.get(i);\n\n            if (el.isClassOrSubclass('Part')) {\n                el.renderOptions.partIndex = currentPartNumber;\n                el.renderOptions.top = currentPartTop;\n                el.setSubstreamRenderOptions();\n                currentPartTop += partSpacing;\n                currentPartNumber++;\n            }\n        }\n        this.evenPartMeasureSpacing();\n        const ignoreNumSystems = true;\n        const currentScoreHeight = this.estimateStreamHeight(ignoreNumSystems);\n        for (let i = 0; i < this.length; i++) {\n            const el = this.get(i);\n            if (el.isClassOrSubclass('Part')) {\n                el.fixSystemInformation(currentScoreHeight);\n            }\n        }\n        this.renderOptions.height = this.estimateStreamHeight();\n        return this;\n    }\n    /**\n     * Overrides the default music21.stream.Stream#estimateStaffLength\n     *\n     * @memberof music21.stream.Score\n     * @returns {number}\n     */\n    estimateStaffLength() {\n        // override\n        if (this.renderOptions.overriddenWidth !== undefined) {\n            // console.log(\"Overridden staff width: \" + this.renderOptions.overriddenWidth);\n            return this.renderOptions.overriddenWidth;\n        }\n        for (let i = 0; i < this.length; i++) {\n            const p = this.get(i);\n            if (p.isClassOrSubclass('Part')) {\n                return p.estimateStaffLength();\n            }\n        }\n        // no parts found in score... use part...\n        console.log('no parts found in score');\n        const tempPart = new stream.Part();\n        tempPart.elements = this.elements;\n        return tempPart.estimateStaffLength();\n    }\n\n    /* MIDI override */\n    /**\n     * Overrides the default music21.stream.Stream#playStream\n     *\n     * Works crappily -- just starts *n* midi players.\n     *\n     * Render scrollable score works better...\n     *\n     * @memberof music21.stream.Score\n     * @param {object} params -- passed to each part\n     * @returns {music21.stream.Score} this\n     */\n    playStream(params) {\n        // play multiple parts in parallel...\n        for (let i = 0; i < this.length; i++) {\n            const el = this.get(i);\n            if (el.isClassOrSubclass('Part')) {\n                el.playStream(params);\n            }\n        }\n        return this;\n    }\n    /**\n     * Overrides the default music21.stream.Stream#stopPlayScore()\n     *\n     * @memberof music21.stream.Score\n     * @returns {music21.stream.Score} this\n     */\n    stopPlayStream() {\n        for (let i = 0; i < this.length; i++) {\n            const el = this.get(i);\n            if (el.isClassOrSubclass('Part')) {\n                el.stopPlayStream();\n            }\n        }\n        return this;\n    }\n    /*\n     * Canvas routines\n     */\n    /**\n     * call after setSubstreamRenderOptions\n     * gets the maximum measure width for each measure\n     * by getting the maximum for each measure of\n     * Part.getMeasureWidths();\n     *\n     * Does this work? I found a bug in this and fixed it that should have\n     * broken it!\n     *\n     * @memberof music21.stream.Score\n     * @returns {Array<number>}\n     */\n    getMaxMeasureWidths() {\n        const maxMeasureWidths = [];\n        const measureWidthsArrayOfArrays = [];\n        let i;\n        // TODO: Do not crash on not partlike...\n        for (i = 0; i < this.length; i++) {\n            const el = this.get(i);\n            measureWidthsArrayOfArrays.push(el.getMeasureWidths());\n        }\n        for (i = 0; i < measureWidthsArrayOfArrays[0].length; i++) {\n            let maxFound = 0;\n            for (let j = 0; j < this.length; j++) {\n                if (measureWidthsArrayOfArrays[j][i] > maxFound) {\n                    maxFound = measureWidthsArrayOfArrays[j][i];\n                }\n            }\n            maxMeasureWidths.push(maxFound);\n        }\n        // console.log(measureWidths);\n        return maxMeasureWidths;\n    }\n\n    /**\n     * @memberof music21.stream.Score\n     * @param {DOMObject} canvas\n     * @param {Event} e\n     * @returns {Array} [diatonicNoteNum, m21Element]\n     */\n    findNoteForClick(canvas, e) {\n        /**\n         * Returns a list of [clickedDiatonicNoteNum, foundNote] for a\n         * click event, taking into account that the note will be in different\n         * Part objects (and different Systems) given the height and possibly different Systems.\n         *\n         */\n        const [x, y] = this.getScaledXYforCanvas(canvas, e);\n\n        const numParts = this.parts.length;\n        const systemHeight = numParts * this.partSpacing + this.systemPadding;\n        const systemIndex = Math.floor(y / systemHeight);\n        const scaledYFromSystemTop = y - systemIndex * systemHeight;\n        const partIndex = Math.floor(scaledYFromSystemTop / this.partSpacing);\n        const scaledYinPart = scaledYFromSystemTop - partIndex * this.partSpacing;\n        // console.log('systemIndex: ' + systemIndex + \" partIndex: \" + partIndex);\n        const rightPart = this.get(partIndex);\n        const clickedDiatonicNoteNum = rightPart.diatonicNoteNumFromScaledY(scaledYinPart);\n\n        const foundNote = rightPart.noteElementFromScaledX(x, undefined, systemIndex);\n        return [clickedDiatonicNoteNum, foundNote];\n    }\n\n    /**\n     * How many systems are there? Calls numSystems() on the first part.\n     *\n     * @memberof music21.stream.Score\n     * @returns {Int}\n     */\n    numSystems() {\n        return this.getElementsByClass('Part').get(0).numSystems();\n    }\n\n    /**\n     * Fixes the part measure spacing for all parts.\n     *\n     * @memberof music21.stream.Score\n     * @returns {music21.stream.Score} this\n     */\n    evenPartMeasureSpacing() {\n        const measureStacks = [];\n        let currentPartNumber = 0;\n        const maxMeasureWidth = [];\n        let i;\n        let j;\n        for (i = 0; i < this.length; i++) {\n            const el = this.get(i);\n            if (el.isClassOrSubclass('Part')) {\n                const measureWidths = el.getMeasureWidths();\n                for (j = 0; j < measureWidths.length; j++) {\n                    const thisMeasureWidth = measureWidths[j];\n                    if (measureStacks[j] === undefined) {\n                        measureStacks[j] = [];\n                        maxMeasureWidth[j] = thisMeasureWidth;\n                    } else if (thisMeasureWidth > maxMeasureWidth[j]) {\n                        maxMeasureWidth[j] = thisMeasureWidth;\n                    }\n                    measureStacks[j][currentPartNumber] = thisMeasureWidth;\n                }\n                currentPartNumber++;\n            }\n        }\n        let currentLeft = 20;\n        for (i = 0; i < maxMeasureWidth.length; i++) {\n            // TODO: do not assume, only elements in Score are Parts and in Parts are Measures...\n            const measureNewWidth = maxMeasureWidth[i];\n            for (j = 0; j < this.length; j++) {\n                const part = this.get(j);\n                const measure = part.get(i);\n                const rendOp = measure.renderOptions;\n                rendOp.width = measureNewWidth;\n                rendOp.left = currentLeft;\n            }\n            currentLeft += measureNewWidth;\n        }\n        return this;\n    }\n}\nstream.Score = Score;\n\n\n// small Class; a namedtuple in music21p\nexport class OffsetMap {\n    constructor(element, offset, endTime, voiceIndex) {\n        this.element = element;\n        this.offset = offset;\n        this.endTime = endTime;\n        this.voiceIndex = voiceIndex;\n    }\n}\nstream.OffsetMap = OffsetMap;\n","// future -- rewrite of Score and Part to Page, System, SystemPart\n// not currently used\n// import * as $ from 'jquery';\n// import { base } from './base';\n// import { renderOptions } from './renderOptions';\nimport { stream } from './stream';\n// import { common } from './common';\n/**\n * Does not work yet, so not documented\n *\n */\nexport const layout = {};\nlayout.makeLayoutFromScore = function makeLayoutFromScore(score, containerWidth) {\n    /*\n     * Divide a part up into systems and fix the measure\n     * widths so that they are all even.\n     *\n     * Note that this is done on the part level even though\n     * the measure widths need to be consistent across parts.\n     *\n     * This is possible because the system is deterministic and\n     * will come to the same result for each part.  Opportunity\n     * for making more efficient through this...\n     */\n    // var systemHeight = score.systemHeight; /* part.show() called... */\n    // var systemPadding = score.systemPadding;\n    const parts = score.parts;\n    // console.log(parts);\n    const numParts = parts.length;\n    const partZero = parts[0];\n    const numMeasures = partZero.length;\n\n    const measureWidths = partZero.getMeasureWidths();\n    const maxSystemWidth = containerWidth || score.maxSystemWidth; /* of course fix! */\n\n    const layoutScore = new layout.LayoutScore();\n    const currentPage = new layout.Page(); // to-do multiple pages...\n    currentPage.measureStart = 1;\n    currentPage.measureEnd = numMeasures;\n\n    layoutScore.insert(0, currentPage);\n\n    let currentSystem = new layout.System();\n    let currentSystemNumber = 1;\n    currentSystem.measureStart = 1;\n    let currentStaves = [];\n\n    const staffMaker = (staffHolder, numParts, measureStart) => {\n        for (let pNum = 0; pNum < numParts; pNum++) {\n            const staff = new layout.Staff();\n            staff.measureStart = measureStart;\n            staff.staffNumber = pNum + 1;\n            staffHolder.push(staff);\n        }\n    };\n    staffMaker(currentStaves, numParts, 1);\n\n    const systemCurrentWidths = [];\n    const systemBreakIndexes = [];\n    let lastSystemBreak = 0; /* needed to ensure each line has at least one measure */\n    const startLeft = 20; /* TODO: make it obtained elsewhere */\n    let currentLeft = startLeft;\n    // let currentSystemTop = 0;\n    // var partTopOffsets = [];\n    // const ignoreSystemsInCalculatingScoreHeight = true;\n    // const systemHeight = score.estimateStreamHeight(ignoreSystemsInCalculatingScoreHeight);\n\n    for (let i = 0; i < measureWidths.length; i++) {\n        const currentRight = currentLeft + measureWidths[i];\n        /* console.log(\"left: \" + currentLeft + \" ; right: \" + currentRight + \" ; m: \" + i); */\n        if ((currentRight > maxSystemWidth) && (lastSystemBreak !== i)) {\n            // new system...\n            for (let j = 0; j < currentStaves.length; j++) {\n                currentStaves.measureEnd = i;\n                currentSystem.insert(0, currentStaves[j]);\n            }\n            currentStaves = [];\n            staffMaker(currentStaves, numParts, i + 1);\n            // currentSystemTop += systemHeight;\n            currentSystem.measureEnd = i;\n            currentPage.insert(0, currentSystem);\n            currentSystemNumber += 1;\n            currentSystem = new layout.System();\n            currentSystem.measureStart = i + 1;\n            currentSystem.systemNumber = currentSystemNumber;\n\n            systemBreakIndexes.push(i - 1);\n            systemCurrentWidths.push(currentLeft);\n            console.log('setting new width at ' + currentLeft + ' measure ' + i);\n            currentLeft = startLeft + measureWidths[i];\n            lastSystemBreak = i;\n        } else {\n            currentLeft = currentRight;\n        }\n        for (let pNum = 0; pNum < currentStaves.length; pNum++) {\n            currentStaves[pNum].append(parts[pNum].get(i));\n        }\n    }\n    for (let j = 0; j < currentStaves.length; j++) {\n        currentStaves.measureEnd = measureWidths.length - 1;\n        currentSystem.insert(0, currentStaves[j]);\n    }\n    currentPage.insert(0, currentSystem);\n    return layoutScore;\n};\n\n\nexport class LayoutScore extends stream.Score {\n    constructor() {\n        super();\n        this.classes.push('LayoutScore');\n        this.scoreLayout = undefined;\n        this.measureStart = undefined;\n        this.measureEnd = undefined;\n        this._width = undefined;\n        this.height = undefined;\n        this.top = 0;\n        this.left = 0;\n    }\n    get pages() {\n        return this.getElementsByClass('Page');\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n    /**\n     * return a tuple of (top, bottom) for a staff, specified by a given pageId,\n     * systemId, and staffId in PIXELS.\n\n     * @param pageId\n     * @param systemId\n     * @param staffId\n     * @param units -- \"pixels\" or \"tenths\" (not supported)\n     */\n\n    getPositionForStaff(pageId, systemId, staffId, units) {\n        units = units || 'pixels';\n    }\n}\nlayout.LayoutScore = LayoutScore;\n\n\n/**\n * All music must currently be on page 1.\n */\nexport class Page extends stream.Score {\n    constructor() {\n        super();\n        this.classes.push('Page');\n        this.pageNumber = 1;\n        this.measureStart = undefined;\n        this.measureEnd = undefined;\n        this.systemStart = undefined;\n        this.systemEnd = undefined;\n        this.pageLayout = undefined;\n    }\n    get systems() {\n        return this.getElementsByClass('System');\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n}\nlayout.Page = Page;\n\nexport class System extends stream.Score {\n    constructor() {\n        super();\n        this.classes.push('System');\n        this.systemNumber = 1;\n        this.systemLayout = undefined;\n        this.measureStart = undefined;\n        this.measureEnd = undefined;\n        this._width = undefined;\n        this.height = undefined;\n        this.top = undefined;\n        this.left = undefined;\n    }\n    get staves() {\n        return this.getElementsByClass('Staff');\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n}\nlayout.System = System;\n\nexport class Staff extends stream.Part {\n    constructor() {\n        super();\n        this.classes.push('Staff');\n        this.staffNumber = 1;\n        this.optimized = 0;\n        this.top = undefined;\n        this.left = undefined;\n        this._width = undefined;\n        this.height = undefined;\n        this.inheritedHeight = undefined;\n        this.staffLayout = undefined;\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n}\n\nlayout.Staff = Staff;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/roman -- roman.RomanNumberal -- Chord subclass\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21';\n\nimport { chord } from './chord';\nimport { debug } from './debug';\nimport { key } from './key';\nimport { pitch } from './pitch';\nimport { interval } from './interval';\n\n/**\n * Roman numeral module. See {@link music21.roman} namespace\n *\n * @exports music21/roman\n */\n/**\n * music21.roman -- namespace for dealing with RomanNumeral analysis.\n *\n * @namespace music21.roman\n * @memberof music21\n * @requires music21/chord\n * @requires music21/key\n * @requires music21/pitch\n * @requires music21/interval\n */\nexport const roman = {};\n\n/**\n * maps an index number to a roman numeral in lowercase\n *\n * @memberof music21.roman\n * @example\n * music21.roman.romanToNumber[4]\n * // 'iv'\n */\nroman.romanToNumber = [undefined, 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii'];\n\n/**\n * Represents a RomanNumeral.  By default, capital Roman Numerals are\n * major chords; lowercase are minor.\n *\n * see music21p's roman module for better instructions.\n *\n * current limitations:\n *\n * no inversions\n * no numeric figures except 7\n * no d7 = dominant 7\n * no frontAlterationAccidentals\n * no secondary dominants\n * no Aug6th chords\n *\n * @class RomanNumeral\n * @memberof music21.roman\n * @extends music21.chord.Chord\n * @param {string} figure - the roman numeral as a string, e.g., 'IV', 'viio', 'V7'\n * @param {string|music21.key.Key} [keyStr='C']\n * @property {Array<music21.pitch.Pitch>} scale - (readonly) returns the scale associated with the roman numeral\n * @property {music21.key.Key} key - the key associated with the RomanNumeral (not allowed to be undefined yet)\n * @property {string} figure - the figure as passed in\n * @property {string} degreeName - the name associated with the scale degree, such as \"mediant\" etc., scale 7 will be \"leading tone\" or \"subtonic\" appropriately\n * @property {Int} scaleDegree\n * @property {string} impliedQuality - \"major\", \"minor\", \"diminished\", \"augmented\"\n * @property {Array<music21.pitch.Pitch>} pitches - RomanNumerals are Chord objects, so .pitches will work for them also.\n */\nexport class RomanNumeral extends chord.Chord {\n    constructor(figure, keyStr) {\n        super();\n        this.classes.push('RomanNumeral');\n        this.figure = figure;\n        this._scale = undefined;\n        this._key = undefined;\n        this.key = keyStr;\n        let currentFigure = figure;\n\n        let impliedQuality = 'major';\n        const lowercase = currentFigure.toLowerCase();\n        if (currentFigure.match('/o')) {\n            impliedQuality = 'half-diminished';\n            currentFigure = currentFigure.replace('/o', '');\n        } else if (currentFigure.match('o')) {\n            impliedQuality = 'diminished';\n            currentFigure = currentFigure.replace('o', '');\n        } else if (currentFigure === lowercase) {\n            impliedQuality = 'minor';\n        }\n\n        const numbersArr = currentFigure.match(/\\d+/);\n        this.numbers = undefined;\n        if (numbersArr != null) {\n            currentFigure = currentFigure.replace(/\\d+/, '');\n            this.numbers = parseInt(numbersArr[0]);\n        }\n\n        const scaleDegree = roman.romanToNumber.indexOf(currentFigure.toLowerCase());\n        if (scaleDegree === -1) {\n            throw new Music21Exception('Cannot make a romanNumeral from ' + currentFigure);\n        }\n        this.scaleDegree = scaleDegree;\n        this.root = this.scale[this.scaleDegree - 1];\n\n        if (this.key.mode === 'minor'\n            && (this.scaleDegree === 6\n                    || this.scaleDegree === 7)) {\n            if (['minor', 'diminished', 'half-diminished'].indexOf(impliedQuality) !== -1) {\n                const raiseTone = new interval.Interval('A1');\n                this.root = raiseTone.transposePitch(this.root);\n                if (debug) {\n                    console.log('raised root because minor/dim on scaleDegree 6 or 7');\n                }\n            }\n        }\n\n        /* temp hack */\n        if (this.numbers === 7) {\n            if (scaleDegree === 5 && impliedQuality === 'major') {\n                impliedQuality = 'dominant-seventh';\n            } else {\n                impliedQuality += '-seventh';\n            }\n        }\n\n        this.impliedQuality = impliedQuality;\n        this.updatePitches();\n    }\n    get scale() {\n        if (this._scale !== undefined) {\n            return this._scale;\n        } else {\n            this._scale = this.key.getScale();\n            return this._scale;\n        }\n    }\n    get key() {\n        return this._key;\n    }\n    set key(keyStr) {\n        if (typeof (keyStr) === 'string') {\n            this._key = new key.Key(keyStr);\n        } else if (typeof (keyStr) === 'undefined') {\n            this._key = new key.Key('C');\n        } else {\n            this._key = keyStr;\n        }\n    }\n    get degreeName() {\n        if (this.scaleDegree < 7) {\n            return [undefined,\n                    'Tonic',\n                    'Supertonic',\n                    'Mediant',\n                    'Subdominant',\n                    'Dominant',\n                    'Submediant'][this.scaleDegree];\n        } else {\n            const tonicPitch = new pitch.Pitch(this.key.tonic);\n            let diffRootToTonic = (tonicPitch.ps - this.root.ps) % 12;\n            if (diffRootToTonic < 0) {\n                diffRootToTonic += 12;\n            }\n            if (diffRootToTonic === 1) {\n                return 'Leading-tone';\n            } else {\n                return 'Subtonic';\n            }\n        }\n    }\n\n\n    /**\n     * Update the .pitches array.  Called at instantiation, but not automatically afterwards.\n     *\n     * @memberof music21.roman.RomanNumeral\n     */\n    updatePitches() {\n        const impliedQuality = this.impliedQuality;\n        const chordSpacing = chord.chordDefinitions[impliedQuality];\n        const chordPitches = [this.root];\n        let lastPitch = this.root;\n        for (let j = 0; j < chordSpacing.length; j++) {\n            // console.log('got them', lastPitch);\n            const thisTransStr = chordSpacing[j];\n            const thisTrans = new interval.Interval(thisTransStr);\n            const nextPitch = thisTrans.transposePitch(lastPitch);\n            chordPitches.push(nextPitch);\n            lastPitch = nextPitch;\n        }\n        this.pitches = chordPitches;\n    }\n\n    /**\n     * Gives a string display.  Note that since inversion is not yet supported\n     * it needs to be given separately.\n     *\n     * Inverting 7th chords does not work.\n     *\n     * @memberof music21.roman.RomanNumeral\n     * @param {string} displayType - ['roman', 'bassName', 'nameOnly', other]\n     * @param {Int} [inversion=0]\n     * @returns {String}\n     */\n    asString(displayType, inversion) {\n        const keyObj = this.key;\n        const tonic = keyObj.tonic;\n        const mode = keyObj.mode;\n\n        if (inversion === undefined) {\n            inversion = 0;\n        }\n        let inversionName = '';\n        if (inversion === 1) {\n            if (displayType === 'roman') {\n                inversionName = '6';\n            } else {\n                inversionName = ' (first inversion)';\n            }\n        } else if (inversion === 2) {\n            if (displayType === 'roman') {\n                inversionName = '64';\n            } else {\n                inversionName = ' (second inversion)';\n            }\n        }\n        let fullChordName;\n        let connector = ' in ';\n        let suffix = '';\n        if (displayType === 'roman') {\n            fullChordName = this.figure;\n        } else if (displayType === 'nameOnly') { // use only with only choice being TONIC\n            fullChordName = '';\n            connector = '';\n            suffix = ' triad';\n        } else if (displayType === 'bassName') {\n            fullChordName = this.bass().name.replace(/\\-/, 'b');\n            connector = ' in ';\n            suffix = '';\n        } else { // \"default\" submediant, etc...\n            fullChordName = this.degreeName;\n            if (this.numbers !== undefined) {\n                fullChordName += ' ' + this.numbers.toString();\n            }\n        }\n        let tonicDisplay = tonic.replace(/\\-/, 'b');\n        if (mode === 'minor') {\n            tonicDisplay = tonicDisplay.toLowerCase();\n        }\n        const chordStr = fullChordName + inversionName + connector + tonicDisplay + ' ' + mode + suffix;\n        return chordStr;\n    }\n}\nroman.RomanNumeral = RomanNumeral;\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/tempo -- tempo and (not in music21p) metronome objects\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as MIDI from 'MIDI';\nimport * as $ from 'jquery';\n\nimport { prebase } from './prebase';\n\n/* a Music21Object in m21p; the overhead is too high here to follow ... */\n/**\n * tempo module, see {@link music21.tempo}\n *\n * @exports music21/tempo\n */\n/**\n * tempo namespace\n *\n * @namespace music21.tempo\n * @memberof music21\n * @requires music21/prebase\n * @requires music21/base\n * @requires MIDI\n * @property {number} [baseTempo=60] - basic tempo\n */\nexport const tempo = {};\n\n/**\n * Object mapping names to tempo values\n *\n * @name music21.tempo.defaultTempoValues\n * @memberof music21.tempo\n * @example\n * music21.tempo.defaultTempoValues.grave\n * // 40\n */\ntempo.defaultTempoValues = {\n    'larghissimo': 16,\n    'largamente': 32,\n    'grave': 40,\n    'molto adagio': 40,\n    'largo': 46,\n    'lento': 52,\n    'adagio': 56,\n    'slow': 56,\n    'langsam': 56,\n    'larghetto': 60,\n    'adagietto': 66,\n    'andante': 72,\n    'andantino': 80,\n    'andante moderato': 83,\n    'maestoso': 88,\n    'moderato': 92,\n    'moderate': 92,\n    'allegretto': 108,\n    'animato': 120,\n    'allegro moderato': 128,\n    'allegro': 132,\n    'fast': 132,\n    'schnell': 132,\n    'allegrissimo': 140,\n    'molto allegro': 144,\n    'très vite': 144,\n    'vivace': 160,\n    'vivacissimo': 168,\n    'presto': 184,\n    'prestissimo': 208,\n};\n\n\ntempo.baseTempo = 60;\n\n/* --------- metronome ---------- */\n/**\n *\n * @class Metronome\n * @memberof music21.tempo\n * @extends music21.prebase.ProtoM21Object\n * @param {number} [tempo=music21.tempo.baseTempo] - the tempo of the metronome to start\n * @property {number} tempo\n * @property {Int} [numBeatsPerMeasure=4]\n * @property {number} [minTempo=10]\n * @property {number} [maxTempo=600]\n * @property {bool} [flash=false] - flash the tempo\n * @property {bool} [silent=false] - play silently\n * @property {Int} beat - current beat number\n * @property {Int} chirpTimeout - an index of a timeout object for chirping\n */\nexport class Metronome extends prebase.ProtoM21Object {\n    constructor(tempoInt) {\n        super();\n        this.classes.push('Metronome');\n        this._tempo = 60; // overridden by music21.tempo.baseTempo;\n        if (tempoInt === undefined) {\n            this.tempo = tempo.baseTempo;\n        } else {\n            this.tempo = tempoInt;\n        }\n        this.numBeatsPerMeasure = 4;\n        this.minTempo = 10;\n        this.maxTempo = 600;\n        this.beat = this.numBeatsPerMeasure;\n        this.chirpTimeout = undefined;\n        this.silent = false;\n        this.flash = false;\n        this.tempoRanges =     [0, 40, 60, 72, 120, 144, 240, 999];\n        this.tempoIncreases = [0, 1,  2,  3,  4,   6,   8,  15, 100];\n    }\n    get tempo() {\n        return this._tempo;\n    }\n    set tempo(t) {\n        this._tempo = t;\n        if (this._tempo > this.maxTempo) {\n            this._tempo = this.maxTempo;\n        } else if (this._tempo < this.minTempo) {\n            this._tempo = this.minTempo;\n        }\n    }\n    get beatLength() {\n        return 60.0 / this.tempo;\n    }\n    _silentFlash(flashColor) {\n        this.$metronomeDiv.find('.metroFlash').css('background-color', flashColor).fadeOut(\n                this.beatLength * 1000 * 1 / 4, function silentFadeOut() {\n                    $(this).css('background-color', '#ffffff').fadeIn(1);\n                });\n    }\n\n\n    /**\n     * Play a note (a higher one on the downbeat) and start the metronome chirping.\n     *\n     * @memberof music21.tempo.Metronome\n     */\n    chirp() {\n        this.beat += 1;\n        if (this.beat > this.numBeatsPerMeasure) {\n            this.beat = 1;\n            if (this.silent !== true) {\n                MIDI.noteOn(0, 96, 100, 0);\n                MIDI.noteOff(0, 96, 0.1);\n            }\n            if (this.flash === true) {\n                this._silentFlash('#0000f0');\n            }\n        } else {\n            if (this.silent !== true) {\n                MIDI.noteOn(0, 84, 70, 0);\n                MIDI.noteOff(0, 84, 0.1);\n            }\n            if (this.flash === true) {\n                this._silentFlash('#ff0000');\n            }\n        }\n        const that = this;\n        this.chirpTimeout = setTimeout(() => { that.chirp(); },\n                1000 * 60 / this.tempo);\n    }\n\n\n    /**\n     * Stop the metronome from chirping.\n     *\n     * @memberof music21.tempo.Metronome\n     */\n    stopChirp() {\n        if (this.chirpTimeout !== undefined) {\n            clearTimeout(this.chirpTimeout);\n            this.chirpTimeout = undefined;\n        }\n    }\n\n    /**\n     * Increase the metronome tempo one \"click\".\n     *\n     * Value changes depending on the current tempo.  Uses standard metronome guidelines.\n     *\n     * To change the tempo, just set this.tempo = n\n     *\n     * @memberof music21.tempo.Metronome\n     * @param {Int} n - number of clicks to the right\n     * @returns {number} new tempo\n     */\n    increaseSpeed(n) {\n        // increase by one metronome 'click' for every n\n        if (n === undefined) {\n            n = 1;\n        }\n        for (let i = 0; i < n; i++) {\n            let t = this.tempo;\n            for (let tr = 0; tr < this.tempoRanges.length; tr++) {\n                const tempoExtreme = this.tempoRanges[tr];\n                const tempoIncrease = this.tempoIncreases[tr];\n                if (t < tempoExtreme) {\n                    t += tempoIncrease;\n                    t = tempoIncrease * Math.round(t / tempoIncrease);\n                    break;\n                }\n            }\n            // console.log(t);\n            this.tempo = t;\n        }\n        return this.tempo;\n    }\n\n    /**\n     * Decrease the metronome tempo one \"click\"\n     *\n     * To change the tempo, just set this.tempo = n\n     *\n     * @memberof music21.tempo.Metronome\n     * @param {Int} n - number of clicks to the left\n     * @returns {number} new tempo\n     */\n    decreaseSpeed(n) {\n        if (n === undefined) {\n            n = 1;\n        }\n        for (let i = 0; i < n; i++) {\n            let t = this.tempo;\n            const trL = this.tempoRanges.length;\n            for (let tr = 1; tr <= trL; tr++) {\n                const tempoExtreme = this.tempoRanges[trL - tr];\n                const tempoIncrease = this.tempoIncreases[trL - tr + 1];\n                if (t > tempoExtreme) {\n                    t -= tempoIncrease;\n                    t = tempoIncrease * Math.floor(t / tempoIncrease);\n                    break;\n                }\n            }\n            // console.log(t);\n            this.tempo = t;\n        }\n    }\n\n    /**\n     * add a Metronome interface onto the DOM at where\n     *\n     * @memberof music21.tempo.Metronome\n     * @param {JQueryDOMObject|DOMObject} [where='body']\n     * @returns {JQueryDOMObject} - a div holding the metronome.\n     */\n    addDiv(where) {\n        let jWhere;\n        if (where !== undefined && where.jquery !== undefined) {\n            jWhere = where;\n        } else if (where !== undefined) {\n            jWhere = $(where);\n        } else {\n            jWhere = $('body');\n        }\n        const metroThis = this;\n        const tempoHolder = $('<span class=\"tempoHolder\">' + this.tempo.toString() + '</span>');\n        tempoHolder.css({\n            'font-size': '24px',\n            'padding-left': '10px',\n            'padding-right': '10px',\n        });\n        const newDiv = $('<div class=\"metronomeRendered\"></div>');\n        newDiv.append(tempoHolder);\n\n        const b1 = $('<button>start</button>');\n        b1.on('click', () => { metroThis.chirp(); });\n        const b2 = $('<button>stop</button>');\n        b2.on('click', () => { metroThis.stopChirp(); });\n        newDiv.prepend(b2);\n        newDiv.prepend(b1);\n        const b3 = $('<button>up</button>');\n        b3.on('click', function increaseSpeedButton() {\n            metroThis.increaseSpeed();\n            $(this).prevAll('.tempoHolder').html(metroThis.tempo.toString());\n        });\n        const b4 = $('<button>down</button>');\n        b4.on('click', function decreaseSpeedButton() {\n            metroThis.decreaseSpeed();\n            $(this).prevAll('.tempoHolder').html(metroThis.tempo.toString());\n        });\n        newDiv.append(b3);\n        newDiv.append(b4);\n        const $flash = $('<span class=\"metroFlash\">' +\n                '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>');\n        $flash.css('margin-left', '40px');\n        $flash.css('height', '40px');\n\n        newDiv.append($flash);\n\n        jWhere.append(newDiv);\n\n        this.$metronomeDiv = newDiv;\n        return newDiv;\n    }\n}\ntempo.Metronome = Metronome;\n\n","import { prebase } from './prebase';\nimport { Music21Exception } from './exceptions21';\n\n/**\n * Simple tie module {@link music21.tie} namespace\n *\n * @exports music21/tie\n */\n\n/**\n * Tie namespace, just has the {@link music21.tie.Tie} object\n *\n * @namespace music21.tie\n * @memberof music21\n * @requires music21/prebase\n */\nexport const tie = {};\n\n/**\n * Tie class. Found in {@link music21.note.GeneralNote} `.tie`.\n *\n * Does not support advanced music21p values `.to` and `.from`\n *\n * @class Tie\n * @memberof music21.tie\n * @extends music21.prebase.ProtoM21Object\n * @param {string} type - 'start', 'stop', or 'continue'\n * @property {string} type - the tie type\n * @property {string} style - only supports 'normal' for now.\n */\nexport class Tie extends prebase.ProtoM21Object {\n    constructor(type) {\n        super();\n        this._type = undefined;\n        this.style = 'normal';\n        this.type = type;\n    }\n    get type() {\n        return this._type;\n    }\n    set type(t) {\n        if (!(['start', 'stop', 'continue', undefined].includes(t))) {\n            throw new Music21Exception('Tie type must be one of \"start\", \"stop\", \"continue\"');\n        }\n        this._type = t;\n    }\n}\ntie.Tie = Tie;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/tinyNotation -- TinyNotation implementation\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as $ from 'jquery';\n\nimport { clef } from './clef';\nimport { duration } from './duration';\nimport { pitch } from './pitch';\nimport { note } from './note';\nimport { meter } from './meter';\nimport { stream } from './stream';\nimport { tie } from './tie';\n\n/**\n * TinyNotation module, see {@link music21.tinyNotation} namespace\n *\n * @exports music21/tinyNotation\n */\n/**\n * @namespace music21.tinyNotation\n * @memberof music21\n * @requires music21/base\n * @requires music21/clef\n * @requires music21/duration\n * @requires music21/pitch\n * @requires music21/note\n * @requires music21/meter\n * @requires music21/stream\n * @requires music21/tie\n */\nexport const tinyNotation = {};\n\n/**\n * Regular expressions object\n *\n * @memberof music21.tinyNotation\n */\ntinyNotation.regularExpressions = {\n    REST: /r/,\n    OCTAVE2: /([A-G])[A-G]+/,\n    OCTAVE3: /([A-G])/,\n    OCTAVE5: /([a-g])('+)/,\n    OCTAVE4: /([a-g])/,\n    EDSHARP: /\\((#+)\\)/,\n    EDFLAT: /\\((\\-+)\\)/,\n    EDNAT: /\\(n\\)/,\n    SHARP: /^[A-Ga-g]+'*(#+)/,  // simple notation finds\n    FLAT: /^[A-Ga-g]+'*(\\-+)/,  // double sharps too\n    NAT: /^[A-Ga-g]+'*n/,  // explicit naturals\n    TYPE: /(\\d+)/,\n    TIE: /.~/, // not preceding ties\n    PRECTIE: /~/,  // front ties\n    ID_EL: /=([A-Za-z0-9]*)/,\n    LYRIC: /_(.*)/,\n    DOT: /\\.+/,\n    TIMESIG: /(\\d+)\\/(\\d+)/,\n\n    PARTBREAK: /partBreak/, // nonstandard...fix later...\n\n    TRIP: /trip\\{/,\n    QUAD: /quad\\{/,\n    ENDBRAC: /\\}$/,\n};\n/**\n * Function, not class.\n *\n * Converts a TinyNotation String into a music21 Stream\n *\n * See music21p for examples of what can go into tinynotation. It's an\n * adaptation of Lilypond format, by design Extremely simple!\n *\n * @memberof music21.tinyNotation\n * @param {string} textIn - a valid tinyNotation string\n * @returns {music21.stream.Part|music21.stream.Measure} - a Stream or Part object (if multiple measures)\n * @example\n * var t = \"3/4 c4 B8 c d4 e2.\";\n * var p = music21.tinyNotation.TinyNotation(t);\n * p.duration.quarterLength;\n * // 6.0\n */\ntinyNotation.TinyNotation = function TinyNotation(textIn) {\n    textIn = textIn.trim();\n    const tokens = textIn.split(' ');\n\n    let optionalScore;\n\n    let p = new stream.Part();\n    let m = new stream.Measure();\n    let currentTSBarDuration = 4.0;\n    let lastDurationQL = 1.0;\n    const storedDict = {\n        lastNoteTied: false,\n        inTrip: false,\n        inQuad: false,\n        endTupletAfterNote: false,\n    };\n    const tnre = tinyNotation.regularExpressions; // faster typing\n    for (let i = 0; i < tokens.length; i++) {\n        // check at first so that a full measure but not over full\n        // gets returned as a stream.Measure object.\n        if (m.duration.quarterLength >= currentTSBarDuration) {\n            p.append(m);\n            m = new stream.Measure();\n        }\n\n        let token = tokens[i];\n        let noteObj;\n        if (tnre.PARTBREAK.exec(token)) {\n            if (m.length > 0) {\n                p.append(m);\n                m = new stream.Measure();\n            }\n            if (optionalScore === undefined) {\n                optionalScore = new stream.Score();\n            }\n            optionalScore.insert(0, p);\n            p = new stream.Part();\n\n            storedDict.lastNoteTied = false;\n            storedDict.inTrip = false;\n            storedDict.inQuad = false;\n            storedDict.endTupletAfterNote = false;\n\n            continue;\n        }\n\n        if (tnre.TRIP.exec(token)) {\n            token = token.slice(5); // cut...\n            storedDict.inTrip = true;\n        }\n        if (tnre.QUAD.exec(token)) {\n            token = token.slice(5); // cut...\n            storedDict.inQuad = true;\n        }\n        if (tnre.ENDBRAC.exec(token)) {\n            token = token.slice(0, -1); // cut...\n            storedDict.endTupletAfterNote = true;\n        }\n\n\n        if (tnre.TIMESIG.exec(token)) {\n            const MATCH = tnre.TIMESIG.exec(token);\n            const ts = new meter.TimeSignature();\n            ts.numerator = parseInt(MATCH[1]);\n            ts.denominator = parseInt(MATCH[2]);\n            m.timeSignature = ts;\n            currentTSBarDuration = ts.barDuration.quarterLength;\n            // console.log(currentTSBarDuration);\n            continue;\n        } else if (tnre.REST.exec(token)) {\n            noteObj = new note.Rest(lastDurationQL);\n        } else if (tnre.OCTAVE2.exec(token)) {\n            const MATCH = tnre.OCTAVE2.exec(token);\n            noteObj = new note.Note(MATCH[1], lastDurationQL);\n            noteObj.pitch.octave = 4 - MATCH[0].length;\n        } else if (tnre.OCTAVE3.exec(token)) {\n            const MATCH = tnre.OCTAVE3.exec(token);\n            noteObj = new note.Note(MATCH[1], lastDurationQL);\n            noteObj.pitch.octave = 3;\n        } else if (tnre.OCTAVE5.exec(token)) {\n            // must match octave 5 before 4\n            const MATCH = tnre.OCTAVE5.exec(token);\n            noteObj = new note.Note(MATCH[1].toUpperCase(), lastDurationQL);\n            noteObj.pitch.octave = 3 + MATCH[0].length;\n        } else if (tnre.OCTAVE4.exec(token)) {\n            const MATCH = tnre.OCTAVE4.exec(token);\n            noteObj = new note.Note(MATCH[1].toUpperCase(), lastDurationQL);\n            noteObj.pitch.octave = 4;\n        }\n\n        if (noteObj === undefined) {\n            continue;\n        }\n        if (tnre.TIE.exec(token)) {\n            noteObj.tie = new tie.Tie('start');\n            if (storedDict.lastNoteTied) {\n                noteObj.tie.type = 'continue';\n            }\n            storedDict.lastNoteTied = true;\n        } else if (storedDict.lastNoteTied) {\n            noteObj.tie = new tie.Tie('stop');\n            storedDict.lastNoteTied = false;\n        }\n        if (tnre.SHARP.exec(token)) {\n            noteObj.pitch.accidental = new pitch.Accidental('sharp');\n        } else if (tnre.FLAT.exec(token)) {\n            noteObj.pitch.accidental = new pitch.Accidental('flat');\n        } else if (tnre.NAT.exec(token)) {\n            noteObj.pitch.accidental = new pitch.Accidental('natural');\n            noteObj.pitch.accidental.displayType = 'always';\n        }\n        let MATCH = tnre.TYPE.exec(token);\n        if (MATCH) {\n            const durationType = parseInt(MATCH[0]);\n            noteObj.duration.quarterLength = 4.0 / durationType;\n        }\n        MATCH = tnre.DOT.exec(token);\n        if (MATCH) {\n            const numDots = MATCH[0].length;\n            const multiplier = 1 + (1 - Math.pow(0.5, numDots));\n            noteObj.duration.quarterLength *= multiplier;\n        }\n        lastDurationQL = noteObj.duration.quarterLength;\n        // do before appending tuplets\n\n        if (storedDict.inTrip) {\n            // console.log(noteObj.duration.quarterLength);\n            noteObj.duration.appendTuplet(new duration.Tuplet(3, 2, noteObj.duration.quarterLength));\n        }\n        if (storedDict.inQuad) {\n            noteObj.duration.appendTuplet(new duration.Tuplet(4, 3, noteObj.duration.quarterLength));\n        }\n        if (storedDict.endTupletAfterNote) {\n            storedDict.inTrip = false;\n            storedDict.inQuad = false;\n            storedDict.endTupletAfterNote = false;\n        }\n        m.append(noteObj);\n    }\n\n    let returnObject;\n\n    if (optionalScore !== undefined) {\n        if (m.length > 0) {\n            p.append(m);\n        }\n        if (p.length > 0) {\n            optionalScore.append(p);\n        }\n        for (let i = 0; i < optionalScore.length; i++) {\n            const innerPart = optionalScore.get(i);\n            innerPart.clef = clef.bestClef(innerPart);\n        }\n        returnObject = optionalScore;\n    } else if (p.length > 0) {\n        p.append(m);\n        p.clef = clef.bestClef(p);\n        returnObject = p;\n    } else {\n        m.clef = clef.bestClef(m);\n        returnObject = m;\n    }\n    return returnObject;\n};\n\n// render notation divs in HTML\n/**\n * Render all the TinyNotation classes in the DOM as notation\n *\n * Called automatically when music21 is loaded.\n *\n * @memberof music21.tinyNotation\n * @param {string} classTypes - a JQuery selector to find elements to replace.\n */\ntinyNotation.renderNotationDivs = function renderNotationDivs(classTypes, selector) {\n    if (classTypes === undefined) {\n        classTypes = '.music21.tinyNotation';\n    }\n    let allRender = [];\n    if (selector === undefined) {\n        allRender = $(classTypes);\n    } else {\n        if (selector.jquery === undefined) {\n            selector = $(selector);\n        }\n        allRender = selector.find(classTypes);\n    }\n    for (let i = 0; i < allRender.length; i++) {\n        const thisTN = allRender[i];\n        const $thisTN = $(thisTN);\n        let thisTNContents;\n        if ($thisTN.attr('tinynotationcontents') !== undefined) {\n            thisTNContents = $thisTN.attr('tinynotationcontents');\n        } else if (thisTN.textContent !== undefined) {\n            thisTNContents = thisTN.textContent;\n            thisTNContents = thisTNContents.replace(/s+/g, ' '); // no line-breaks, etc.\n        }\n\n        if ((String.prototype.trim !== undefined)\n                && (thisTNContents !== undefined)) {\n            thisTNContents = thisTNContents.trim(); // remove leading, trailing whitespace\n        }\n        if (thisTNContents) {\n            const st = tinyNotation.TinyNotation(thisTNContents);\n            if ($thisTN.hasClass('noPlayback')) {\n                st.renderOptions.events.click = undefined;\n            }\n            const newCanvas = st.createCanvas();\n\n            $thisTN.attr('tinynotationcontents', thisTNContents);\n            $thisTN.empty();\n            $thisTN.data('stream', st);\n            $thisTN.append(newCanvas);\n            // console.log(thisTNContents);\n        }\n    }\n};\n\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/webmidi -- webmidi or wrapper around the Jazz Plugin\n *\n * For non webmidi --  Uses the cross-platform, cross-browser plugin from\n * http://jazz-soft.net/doc/Jazz-Plugin/Plugin.html\n * P.S. by the standards of divinity of most major religions, Sema Kachalo is a god.\n *\n * Copyright (c) 2014-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as $ from 'jquery';\nimport { debug } from './debug';\nimport { common } from './common';\nimport { miditools } from './miditools';\n\n/**\n * webmidi -- for connecting with external midi devices\n *\n * Uses either the webmidi API or the Jazz plugin\n *\n * See {@link music21.webmidi}\n *\n * @exports music21/webmidi\n */\n/**\n * webmidi -- for connecting with external midi devices\n *\n * Uses either the webmidi API or the Jazz plugin\n *\n * @namespace music21.webmidi\n * @memberof music21\n * @requires music21/miditools\n * @requires jquery\n * @property {JazzObject|undefined} storedPlugin - reference to the Jazz object from the plugin; cached from `createPlugin`.\n * @property {string} selectedJazzInterface - the currently connected interface (note that we can only use one right now)\n */\nexport const webmidi = {};\n\nwebmidi.selectedOutputPort = undefined;\nwebmidi.selectedInputPort = undefined;\n\nwebmidi.access = undefined;\nwebmidi.$selectDiv = undefined;\n\nwebmidi.jazzDownloadUrl = 'http://jazz-soft.net/download/Jazz-Plugin/';\nwebmidi.storedPlugin = undefined;\nwebmidi.selectedJazzInterface = undefined; // not the same as \"\" etc. uses last selected interface by default.\n\n/**\n * Called by Jazz MIDI plugin when an event arrives.\n *\n * Shim to convert the data into WebMIDI API format and then call the WebMIDI API midiInArrived\n *\n * See the MIDI spec for information on parameters\n *\n * @memberof music21.webmidi\n * @param {byte} t - timing information\n * @param {byte} a - data 1\n * @param {byte} b - data 2\n * @param {byte} c - data 3\n */\nwebmidi.jazzMidiInArrived = function jazzMidiInArrived(t, a, b, c) {\n    const webmidiEvent = {\n        timestamp: t,\n        data: [a, b, c],\n    };\n    return webmidi.midiInArrived(webmidiEvent);\n};\n\n\n/**\n * Called directly when a MIDI event arrives from the WebMIDI API, or via a Shim (jazzMidiInArrived)\n * when MIDI information comes from JazzMIDI\n *\n * Calls the 'raw' and 'general callbacks when a raw midi event (four bytes)\n * arrives.\n *\n * See the MIDI spec for information on the contents of the three parameters.\n *\n * midiMessageEvent should be an object with two keys: timeStamp (int) and data (array of three int values)\n *\n * @memberof music21.webmidi\n * @param {MidiMessageEvent} midiMessageEvent - midi Information\n */\nwebmidi.midiInArrived = function midiInArrived(midiMessageEvent) {\n    const t = midiMessageEvent.timeStamp;\n    const a = midiMessageEvent.data[0];\n    const b = midiMessageEvent.data[1];\n    const c = midiMessageEvent.data[2];\n    const eventObject = miditools.callBacks.raw(t, a, b, c);\n    if (miditools.callBacks.general instanceof Array) {\n        return miditools.callBacks.general.forEach((el, index, array) => {\n            el(eventObject);\n        });\n    } else if (miditools.callBacks.general !== undefined) {\n        return miditools.callBacks.general(eventObject);\n    } else {\n        return undefined;\n    }\n};\n\n/**\n * Create a hidden tiny, &lt;object&gt; tag in the DOM with the\n * proper classid (`CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90`) to\n * load the Jazz plugin.\n *\n * It will return the plugin if it can or undefined if it cannot. Caches it in webmidi.storedPlugin.\n *\n * @function music21.webmidi.createPlugin\n * @param {DOMObject} [appendElement=document.body] - where to place this hidden object (does not really matter)\n * @param {Boolean} [override=false] - if this method has been called successfully before return the storedPlugin unless override is true.\n * @returns {Jazz|undefined} Jazz MIDI plugin object\n */\nwebmidi.createPlugin = function createPlugin(appendElement, override) {\n    if ((webmidi.storedPlugin) && (override !== true)) {\n        return webmidi.storedPlugin;\n    }\n    if (typeof (appendElement) === 'undefined') {\n        appendElement = $('body')[0];\n    }\n    const obj = document.createElement('object');\n    obj.classid = 'CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90';\n    if (!obj.isJazz) {\n        obj.type = 'audio/x-jazz';\n    }\n    obj.style.visibility = 'hidden';\n    obj.style.width = '0px';\n    obj.style.height = '0px';\n    appendElement.appendChild(obj);\n\n    if (obj.isJazz) {\n        webmidi.storedPlugin = obj;\n        return obj;\n    } else {\n        appendElement.removeChild(obj);\n        console.error('Cannot use jazz plugin; install at ' + webmidi.jazzDownloadUrl);\n        return undefined;\n    }\n};\n\n/**\n * Creates a &lt;select&gt; object for selecting among the MIDI choices in Jazz\n *\n * @function music21.webmidi.createJazzSelector\n * @param {JQueryDOMObject|DOMObject} [midiSelectDiv=document.body] - object to append the select to\n * @param {object} [options] - see createSelector for details\n * @returns {DOMObject|undefined} DOM object containing the select tag, or undefined if Jazz cannot be loaded.\n */\nwebmidi.createJazzSelector = function createJazzSelector($newSelect, options) {\n    const params = {};\n    common.merge(params, options);\n\n    const Jazz = webmidi.createPlugin();\n    if (Jazz === undefined) {\n        return undefined;\n    }\n\n    $newSelect.change(() => {\n        const selectedInput = $('#midiInSelect option:selected').text();\n        if (selectedInput !== 'None selected') {\n            webmidi.selectedJazzInterface = Jazz.MidiInOpen(selectedInput, webmidi.jazzMidiInArrived);\n        } else {\n            Jazz.MidiInClose();\n        }\n        if (debug) {\n            console.log('current input changed to: ' + webmidi.selectedInterface);\n        }\n    });\n    const midiOptions = Jazz.MidiInList();\n    const noneAppendOption = $(\"<option value='None'>None selected</option>\");\n    $newSelect.append(noneAppendOption);\n\n    let anySelected = false;\n    const allAppendOptions = [];\n    for (let i = 0; i < midiOptions.length; i++) {\n        const $appendOption = $(\"<option value='\" + midiOptions[i] + \"'>\" + midiOptions[i] + '</option>');\n        if (midiOptions[i] === webmidi.selectedJazzInterface) {\n            $appendOption.attr('selected', true);\n            anySelected = true;\n        }\n        allAppendOptions.push($appendOption);\n        // console.log(appendOption);\n        $newSelect.append($appendOption);\n    }\n    if (anySelected === false && midiOptions.length > 0) {\n        $newSelect.val(midiOptions[0]);\n        allAppendOptions[0].attr('selected', true);\n        webmidi.selectedJazzInterface = Jazz.MidiInOpen(midiOptions[0], webmidi.jazzMidiInArrived);\n        anySelected = true;\n    } else {\n        noneAppendOption.attr('selected', true);\n    }\n    if (params.onsuccess !== undefined) {\n        params.onsuccess();\n    }\n    if (anySelected === true && params.oninputsuccess !== undefined) {\n        params.oninputsuccess();\n    } else if (anySelected === false && params.oninputempty !== undefined) {\n        params.oninputempty();\n    }\n    return $newSelect;\n};\n\n/**\n * Function to be called if the webmidi-api selection changes. (not jazz)\n *\n */\nwebmidi.selectionChanged = function selectionChanged() {\n    const selectedInput = webmidi.$select.val();\n    if (selectedInput === webmidi.selectedInputPort) {\n        return false;\n    }\n    const storedStateChange = webmidi.access.onstatechange; // port.close() fires onstatechange, so turn off for a moment.\n    webmidi.access.onstatechange = () => {};\n    if (debug) {\n        console.log('current input changed to: ' + selectedInput);\n    }\n    webmidi.selectedInputPort = selectedInput;\n\n    webmidi.access.inputs.forEach((port) => {\n        if (port.name === selectedInput) {\n            port.onmidimessage = webmidi.midiInArrived;\n        } else {\n            port.close();\n        }\n    });\n    webmidi.access.onstatechange = storedStateChange;\n    return false;\n};\n\n/**\n * Creates a &lt;select&gt; object for selecting among the MIDI choices in Jazz\n *\n * The options object has several parameters:\n *\n * {bool} autoupdate -- should this auto update?\n * {function} onsuccess -- function to call on all successful port queries\n * {function} oninputsuccess -- function to call if successful and at least one input device is found\n * {function} oninputempty -- function to call if successful but no input devices are found.\n * {bool} existingMidiSelect -- is there already a select tag for MIDI?\n *\n * @function music21.webmidi.createSelector\n * @param {JQueryDOMObject|DOMObject} [$midiSelectDiv=$('body')] - object to append the select to\n * @param {object} [options] - see above.\n * @returns {DOMObject|undefined} DOM object containing the select tag, or undefined if Jazz cannot be loaded.\n */\nwebmidi.createSelector = function createSelector($midiSelectDiv, options) {\n    const params = {\n        autoUpdate: true,\n        existingMidiSelect: false,\n    };\n    common.merge(params, options);\n\n    if (typeof ($midiSelectDiv) === 'undefined') {\n        $midiSelectDiv = $('body');\n    }\n    if ($midiSelectDiv.jquery === undefined) {\n        $midiSelectDiv = $($midiSelectDiv);\n    }\n    let $newSelect;\n    const foundMidiSelects = $midiSelectDiv.find('select#midiInSelect');\n    if (foundMidiSelects.length > 0) {\n        $newSelect = foundMidiSelects[0];\n        params.existingMidiSelect = true;\n    } else {\n        $newSelect = $('<select>').attr('id', 'midiInSelect');\n        $midiSelectDiv.append($newSelect);\n    }\n    webmidi.$select = $newSelect;\n\n    if (navigator.requestMIDIAccess === undefined) {\n        webmidi.createJazzSelector($newSelect, params);\n    } else {\n        if (params.existingMidiSelect !== true) {\n            $newSelect.change(webmidi.selectionChanged);\n        }\n        navigator.requestMIDIAccess().then((access) => {\n            webmidi.access = access;\n            webmidi.populateSelect();\n            if (params.autoUpdate) {\n                access.onstatechange = webmidi.populateSelect;\n            }\n            webmidi.$select.change();\n            if (params.onsuccess !== undefined) {\n                params.onsuccess();\n            }\n            if (webmidi.selectedInputPort !== 'None' && params.oninputsuccess !== undefined) {\n                params.oninputsuccess();\n            } else if (webmidi.selectedInputPort === 'None' && params.oninputempty !== undefined) {\n                params.oninputempty();\n            }\n        }, (e) => {\n            $midiSelectDiv.html(e.message);\n        });\n    }\n    miditools.clearOldChords(); // starts the chord checking process.\n    return $newSelect;\n};\n\nwebmidi.populateSelect = function populateSelect() {\n    const inputs = webmidi.access.inputs;\n    webmidi.$select.empty();\n\n    const $noneAppendOption = $(\"<option value='None'>None selected</option>\");\n    webmidi.$select.append($noneAppendOption);\n\n    const allAppendOptions = [];\n    const midiOptions = [];\n    let i = 0;\n    inputs.forEach((port) => {\n        const $appendOption = $(\"<option value='\" + port.name + \"'>\" + port.name + '</option>');\n        allAppendOptions.push($appendOption);\n        midiOptions.push(port.name);\n        // console.log(appendOption);\n        webmidi.$select.append($appendOption);\n        i++;\n    });\n    if (allAppendOptions.length > 0) {\n        webmidi.$select.val(midiOptions[0]);\n        allAppendOptions[0].attr('selected', true);\n    } else {\n        $noneAppendOption.attr('selected', true);\n    }\n    webmidi.$select.change();\n};\n\n// this allows for the deprecated webmidi.callBacks to still work for now.\nwebmidi.callBacks = miditools.callBacks;\n\n/**\n * Example smallest usage of the webmidi toolkit.  see testHTML/midiInRequire.html\n\n<html>\n<head>\n    <title>MIDI In/Jazz Test for Music21j</title>\n    <!-- for MSIE 10 on Windows 8 -->\n    <meta http-equiv=\"X-UA-Compatible\" content=\"requiresActiveX=true\"/>\n    <script data-main=\"../src/music21.js\" src=\"../ext/require/require.js\"></script>\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n\n    <script>\n    var s = \"\";\n    function displayStream(me) {\n        me.sendToMIDIjs();\n        if (me.noteOn) {\n            var m21n = me.music21Note();\n            if (s.length > 7) {\n                s.elements = s.elements.slice(1)\n            }\n            s.append(m21n);\n            var $canvasDiv = $(\"#canvasDiv\");\n            $canvasDiv.empty();\n            var canv = s.appendNewCanvas($canvasDiv);\n        }\n    }\n\n    require(['music21'], function () {\n        s = new music21.stream.Stream();\n        music21.webmidi.createSelector($(\"#putMidiSelectHere\"));\n        music21.miditools.callBacks.general = displayStream;\n    });\n\n\n    </script>\n</head>\n<body>\n<div>\nMIDI Input: <div id=\"putMidiSelectHere\" />\n</div>\n<div id=\"canvasDiv\">\n    <canvas />\n</div>\n</body>\n</html>\n **/\n","import * as $ from 'jquery';\n\nimport { note } from './note';\nimport { stream } from './stream';\nimport { tie } from './tie';\n\n/**\n * Widgets module -- random widgets.  See {@link music21.widgets}\n *\n * @exports music21/widgets\n */\n\n/**\n * Widgets module -- random widgets to make streams etc. work better\n *\n * To be added to\n *\n * @namespace music21.widgets\n * @memberof music21\n */\nexport const widgets = {};\n/**\n * A set of DOM Objects for choosing rhythms\n *\n * @class RhythmChooser\n * @memberof music21.widgets\n * @param {music21.stream.Stream} s - to append to, etc.\n * @param {DOMObject} c - canvas\n * @property {Array<string>} values - an array of rhythmic values and editing functions.\n *           Default: ['whole', 'half','quarter','eighth','16th','dot','undo']\n * @property {Boolean} measureMode - whether to use measures when editing\n * @property {Boolean} tieActive - is a tie active?\n * @property {Boolean} autoAddMeasure - add a measure when one is full? default: true\n * @property {music21.stream.Stream} stream\n * @property {DOMObject} [canvasDiv]\n */\nexport class RhythmChooser {\n    constructor(s, c) {\n        this.stream = s;\n        this.canvasDiv = c;\n        this.values = ['whole', 'half', 'quarter', 'eighth', '16th', 'dot', 'undo'];\n        if (this.stream.hasSubStreams()) {\n            this.measureMode = true;\n        } else {\n            this.measureMode = false;\n        }\n        this.tieActive = false;\n        this.autoAddMeasure = true;\n        /**\n         * A mapping of a type to a string of HTML entities to display in\n         * BravuraText\n         *\n         * @name valueMappings\n         * @type {object}\n         * @memberof music21.widgets.RhythmChooser\n         */\n        this.valueMappings = {\n            whole: '&#xEB9B;&#xE1D2;',\n            half: '&#xEB9B;&#xE1D3;',\n            quarter: '&#xEB9B;&#xE1D5;',\n            eighth: '&#xEB9B;&#xE1D7;',\n            '16th': '&#xEB9B;&#xE1D9;',\n            '32nd': '&#xEB9B;&#xE1DB;', // BUG in Bravura Text\n            addMeasure: '&#xE031',\n            dot: '&#xEB9B;&#xE1E7;',\n            undo: '&#x232B;',\n            tie: '<span style=\"position: relative; top: -20px;\">&#xE1FD</span>',\n            rest_whole: '&#xE4F4;',\n            rest_half: '&#xE4F5;',\n            rest_quarter: '&#xE4E5;',\n            rest_eighth: '&#xE4E6;',\n            rest_16th: '&#xE4E7;',\n            rest_32nd: '&#xE4E8;',\n        };\n        /**\n         * A mapping of a type to a css style\n         *\n         * @name styles\n         * @type {object}\n         * @memberof music21.widgets.RhythmChooser\n         */\n        this.styles = {\n            'undo': 'font-family: serif; font-size: 30pt; top: -7px;',\n        };\n        /**\n         * An object mapping a value type to a function when it is clicked\n         *\n         * the 'default' value handles all types not otherwise given.\n         *\n         * Each function is passed the type that was clicked. Probably only\n         * useful for 'default'\n         *\n         * @name buttonHandlers\n         * @type {object}\n         * @memberof music21.widgets.RhythmChooser#\n         */\n        this.buttonHandlers = {\n            'undo': (unused_t) => {\n                if (this.stream.length > 0) {\n                    return this.stream.pop();\n                } else {\n                    return undefined;\n                }\n            },\n            'dot': (unused_t) => {\n                if (this.stream.length > 0) {\n                    const el = this.stream.pop();\n                    el.duration.dots += 1;\n                    this.stream.append(el);\n                    return el;\n                } else { return undefined; }\n            },\n            'tie': (unused_t) => {\n                if (this.stream.length > 0) {\n                    const el = this.stream.get(-1);\n                    el.tie = new tie.Tie('start');\n                    this.tieActive = true;\n                }\n            },\n            'default': (t) => {\n                let newN = new note.Note('B4');\n                newN.stemDirection = 'up';\n                if (t.indexOf('rest_') === 0) {\n                    newN = new note.Rest();\n                    t = t.slice('rest_'.length);\n                }\n                newN.duration.type = t;\n                if (this.tieActive) {\n                    newN.tie = new tie.Tie('stop');\n                    this.tieActive = false;\n                }\n                this.stream.append(newN);\n                return newN;\n            },\n        };\n        /**\n         * An object mapping a value type to a function when it is clicked if the\n         * RhythmChooser is in measureMode\n         *\n         * the 'default' value handles all types not otherwise given.\n         *\n         * Each function is passed the type that was clicked. Probably only\n         * useful for 'default'\n         *\n         * @name measureButtonHandlers\n         * @type {object}\n         * @memberof music21.widgets.RhythmChooser#\n         */\n        this.measureButtonHandlers = {\n            'undo': (unused_t) => {\n                if (this.stream.length > 0) {\n                    const lastMeasure = this.stream.get(-1);\n                    const retValue = lastMeasure.pop();\n                    if (lastMeasure.length === 0 && this.stream.length > 1) {\n                        this.stream.pop();\n                    }\n                    return retValue;\n                } else {\n                    return undefined;\n                }\n            },\n            'dot': (unused_t) => {\n                if (this.stream.length > 0) {\n                    const lastMeasure = this.stream.get(-1);\n                    const el = lastMeasure.pop();\n                    el.duration.dots += 1;\n                    lastMeasure.append(el);\n                    return el;\n                } else { return undefined; }\n            },\n            'addMeasure': (unused_t) => {\n                const lastMeasure = this.stream.get(-1);\n                const m = new stream.Measure();\n                m.renderOptions.staffLines = lastMeasure.renderOptions.staffLines;\n                m.renderOptions.measureIndex = lastMeasure.renderOptions.measureIndex + 1;\n                m.renderOptions.rightBarline = 'end';\n                lastMeasure.renderOptions.rightBarline = 'single';\n                m.autoBeam = lastMeasure.autoBeam;\n                this.stream.append(m);\n            },\n            'tie': (unused_t) => {\n                const lastMeasure = this.stream.get(-1);\n                let el;\n                if (lastMeasure.length > 0) {\n                    el = lastMeasure.get(-1);\n                } else {\n                    const previousMeasure = this.stream.get(-2);\n                    if (previousMeasure) {\n                        el = previousMeasure.get(-1);\n                    }\n                }\n                if (el !== undefined) {\n                    let tieType = 'start';\n                    if (el.tie !== undefined) { tieType = 'continue'; }\n                    el.tie = new tie.Tie(tieType);\n                    this.tieActive = true;\n                }\n            },\n            'default': (t) => {\n                let newN = new note.Note('B4');\n                newN.stemDirection = 'up';\n                if (t.indexOf('rest_') === 0) {\n                    newN = new note.Rest();\n                    t = t.slice('rest_'.length);\n                }\n                newN.duration.type = t;\n                if (this.tieActive) {\n                    newN.tie = new tie.Tie('stop');\n                    this.tieActive = false;\n                }\n                let lastMeasure = this.stream.get(-1);\n                if (this.autoAddMeasure &&\n                        lastMeasure.duration.quarterLength >=\n                            this.stream.timeSignature.barDuration.quarterLength) {\n                    this.measureButtonHandlers.addMeasure.apply(this, [t]);\n                    lastMeasure = this.stream.get(-1);\n                }\n                lastMeasure.append(newN);\n                return newN;\n            },\n        };\n    }\n    /**\n     * adds a RhythmChooser widget somewhere.\n     *\n     * @memberof music21.widgets.RhythmChooser\n     * @param {DOMObject|JQueryDOMObject} where\n     */\n    addDiv(where) {\n        let $where = where;\n        if (where !== undefined && where.jquery === undefined) {\n            $where = $(where);\n        }\n        const $outer = $('<div class=\"rhythmButtonDiv\"/>');\n        for (let i = 0; i < this.values.length; i++) {\n            const value = this.values[i];\n            const entity = this.valueMappings[value];\n            const $inner = $('<button class=\"btButton\" m21Type=\"' + value + '\">'\n                    + entity + '</button>');\n            if (this.styles[value] !== undefined) {\n                $inner.attr('style', this.styles[value]);\n            }\n\n            $inner.click((function rhythmButtonDiv_click(value) {\n                this.handleButton(value);\n            }).bind(this, value));\n            $outer.append($inner);\n        }\n        if (where !== undefined) {\n            $where.append($outer);\n        }\n        return $outer;\n    }\n    /**\n     * A button has been pressed! Call the appropriate handler and update the stream's canvas (if any)\n     *\n     * @memberof music21.widgets.RhythmChooser\n     * @param {string} t - type of button pressed.\n     */\n    handleButton(t) {\n        let bhs = this.buttonHandlers;\n        if (this.measureMode) {\n            bhs = this.measureButtonHandlers;\n        }\n        let bh = bhs[t];\n        if (bh === undefined) {\n            bh = bhs['default'];\n        }\n        bh.apply(this, [t]);\n        let s = this.stream;\n\n        // redraw score if Part is part of score...\n        if (s.isClassOrSubclass('Part') && s.activeSite !== undefined) {\n            s = s.activeSite;\n        }\n        if (this.canvasDiv !== undefined) {\n            s.replaceCanvas(this.canvasDiv);\n        }\n    }\n}\nwidgets.RhythmChooser = RhythmChooser;\n","// order below doesn't matter, but good to give a sense\n// of what will be needed by almost everyone, and then\n// alphabetical.\nimport * as exceptions21 from './music21/exceptions21';\nimport { debug } from './music21/debug';\nimport { common } from './music21/common';\nimport { prebase } from './music21/prebase';\nimport { base } from './music21/base';\n\nimport { articulations } from './music21/articulations';\nimport { audioSearch } from './music21/audioSearch';\nimport { beam } from './music21/beam';\nimport { chord } from './music21/chord';\nimport { clef } from './music21/clef';\nimport { duration } from './music21/duration';\nimport { dynamics } from './music21/dynamics';\nimport { expressions } from './music21/expressions';\nimport { fromPython } from './music21/fromPython';\nimport { instrument } from './music21/instrument';\nimport { interval } from './music21/interval';\nimport { key } from './music21/key';\nimport { keyboard } from './music21/keyboard';\nimport { layout } from './music21/layout';\nimport { meter } from './music21/meter';\nimport { miditools } from './music21/miditools';\nimport { note } from './music21/note';\nimport { pitch } from './music21/pitch';\nimport { renderOptions } from './music21/renderOptions';\nimport { roman } from './music21/roman';\nimport { scale } from './music21/scale';\nimport { stream } from './music21/stream';\nimport { streamInteraction } from './music21/streamInteraction';\nimport { tempo } from './music21/tempo';\nimport { tie } from './music21/tie';\nimport { tinyNotation } from './music21/tinyNotation';\nimport { vfShow } from './music21/vfShow';\nimport { webmidi } from './music21/webmidi';\nimport { widgets } from './music21/widgets';\n\nconst music21 = {};\n\nmusic21.common = common;\nmusic21.debug = debug;\nmusic21.prebase = prebase;\nmusic21.base = base;\n\nmusic21.articulations = articulations;\nmusic21.audioSearch = audioSearch;\nmusic21.beam = beam;\nmusic21.chord = chord;\nmusic21.clef = clef;\nmusic21.dynamics = dynamics;\nmusic21.duration = duration;\nmusic21.exceptions21 = exceptions21;\nmusic21.expressions = expressions;\nmusic21.fromPython = fromPython;\nmusic21.instrument = instrument;\nmusic21.interval = interval;\nmusic21.key = key;\nmusic21.keyboard = keyboard;\nmusic21.layout = layout;\nmusic21.meter = meter;\nmusic21.miditools = miditools;\nmusic21.note = note;\nmusic21.pitch = pitch;\nmusic21.renderOptions = renderOptions;\nmusic21.roman = roman;\nmusic21.scale = scale;\nmusic21.stream = stream;\nmusic21.streamInteraction = streamInteraction;\nmusic21.tempo = tempo;\nmusic21.tie = tie;\nmusic21.tinyNotation = tinyNotation;\nmusic21.vfShow = vfShow;\nmusic21.webmidi = webmidi;\nmusic21.widgets = widgets;\n\nexport default music21;\n"],"names":["ExtendableError","message","name","constructor","Error","captureStackTrace","stack","Music21Exception","StreamException","debug","common","merge","mergeRecursive","destination","source","undefined","p","hasOwnProperty","call","Object","e","mixin","common_mixin","OtherParent","thisClassOrObject","proto","getPrototypeOf","classProto","key","keys","statisticalMode","a","length","modeMap","maxEl","maxCount","i","el","makeSVGright","tag","attrs","document","createElementNS","k","setAttribute","ordinalAbbreviation","value","plural","post","valueHundreths","valueMod","rationalize","ql","epsilon","maxDenominator","Math","abs","round","numerator","denominator","stripPx","str","pxIndex","indexOf","slice","parseInt","urlParam","replace","regex","RegExp","results","exec","location","search","decodeURIComponent","jQueryEventCopy","eventObj","from","to","jquery","$","events","data","_data","each","type","handler","event","add","setWindowVisibilityWatcher","callback","hidden","addEventListener","windowFocusChanged","onfocusin","onfocusout","window","onpageshow","onpagehide","onfocus","onblur","evt","v","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","callbackState","initialState","visibilityState","initialStateEvent","urls","css","webResources","midiPlayer","soundfontUrl","prebase","ProtoM21Object","classes","isProtoM21Object","isMusic21Object","_cloneCallbacks","ret","getOwnPropertyDescriptor","get","set","babelHelpers.typeof","clone","TypeError","console","log","testClass","Array","duration","typeFromNumDict","quarterTypeIndex","ordinalTypeFromNum","vexflowDurationArray","Duration","push","_quarterLength","_dots","_durationNumber","_type","_tuplets","quarterLength","cloneCallbacksTupletFunction","tupletKey","obj","newTuplets","newTuplet","typeNumber","powerOfTwo","pow","dotsNum","dotMultiplier","durationMultiplier","undottedQuarterLength","dottedMultiplier","unTupletedQl","tupletCorrectedQl","forEach","tuplet","tupletMultiplier","floor","_findDots","tupletRatio","ratioRat","t","Tuplet","appendTuplet","skipUpdateQl","frozen","updateQlFromFeatures","numDots","updateFeaturesFromQl","typeIn","vd","dots","numberNotesActual","numberNotesNormal","durationActual","durationNormal","bracket","placement","tupletActualShow","tupletNormalShow","actual","normal","lengthActual","totalTupletLength","numActual","numNormal","ordStr","toString","base","Music21Object","classSortOrder","_priority","offset","activeSite","isStream","_duration","groups","Music21Object_cloneCallbacks_activeSite","site","_elements","_elementOffsets","newDuration","articulations","Articulation","vexflowModifier","setPosition","dynamicScale","lengthScale","vfa","Vex","Flow","LengthArticulation","DynamicArticulation","PitchArticulation","TimbreArticulation","Accent","StrongAccent","Staccato","Staccatissimo","Spiccato","Marcato","Tenuto","audioSearch","fftSize","AudioContextCaller","AudioContext","webkitAudioContext","_audioContext","animationFrameCallbackId","defineProperties","MIDI","WebAudio","getContext","globalAudioContext","ac","getUserMedia","dictionary","error","alert","mediaStream","userMediaStarted","n","navigator","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","sampleBuffer","currentAnalyser","audioStream","Float32Array","mediaStreamSource","audioContext","createMediaStreamSource","analyser","createAnalyser","connect","animateLoop","minFrequency","maxFrequency","time","getFloatTimeDomainData","frequencyDetected","autoCorrelate","sampleRate","retValue","sampleCallback","requestAnimationFrame","pitchSmoothingSize","lastPitchClassesDetected","lastPitchesDetected","lastCentsDeviationsDetected","smoothPitchExtraction","frequency","shift","midiNumDiffFromFrequency","midiNum","centsOff","mostCommonPitchClass","pitchesMatchingClass","centsMatchingClass","mostCommonPitch","totalSamplePoints","totalSample","j","weight","unused_midiNum","unused_centsOff","buf","SIZE","MAX_SAMPLES","best_offset","best_correlation","rms","foundGoodCorrelation","correlations","val","sqrt","lastCorrelation","correlation","offsetFrequency","midiNumFloat","requestAnimationFramePolyFill","lastTime","vendors","x","cancelAnimationFrame","element","currTime","Date","getTime","timeToCall","max","timeoutId","setTimeout","id","clearTimeout","beam","validBeamTypes","Beam","direction","independentAngle","number","Beams","beamsList","feathered","level","count","setAll","getNumbers","includes","thisBeam","numbers","beamObj","getByNumber","types","b","splitit","split","pitch","Accidental","accName","_name","_alter","_modifier","_unicodeModifier","displayType","displayStatus","init","toLowerCase","alter","modifier","m","nameToMidi","nameToSteps","stepsToName","midiToName","Pitch","pn","_step","_octave","_accidental","ps","match","nameWithOctave","clefObj","tempPitch","convertPitchToTreble","accidentalType","accidental","outName","step","octave","s","o","nn","toUpperCase","tempAccidental","storedOctave","newDNN","accidentalAlter","note","noteheadTypeNames","stemDirectionNames","Lyric","text","syllabic","applyRaw","identifier","lyricConnector","_number","setTextAndSyllabic","_identifier","rawText","GeneralNote","isChord","volume","activeVexflowNote","expressions","lyrics","tie","lyricNumber","lyricIdentifier","maxLyrics","newLyric","foundLyric","thisLyric","clef","vfn","options","addDotToAll","renderOptions","stemDirection","setStemDirectionFromClef","setStemDirection","StaveNote","STEM_DOWN","STEM_UP","hasStem","staveDNNSpacing","stave","spacing_between_lines_px","midLine","lowestLine","absDNNfromCenter","diatonicNoteNum","absOverOctave","getStemLength","stemHeight","setStemLength","tempo","nextElement","inst","instrument","midiVolume","channel","midiChannel","milliseconds","midNum","isClassOrSubclass","midi","stopTime","noteOn","noteOff","_notes","isNaN","NotRest","notehead","noteheadFill","noteheadColor","noteheadParenthesis","beams","Note","isNote","isRest","DNNfromCenter","params","vfd","vexflowDuration","vexflowKey","vexflowName","vexflowAccidentalsAndDisplay","addAccidental","art","addArticulation","vexflow","exp","setKeyStyle","fillStyle","Rest","lineShift","keyLine","staffLines","ls","chord","Chord","notes","maxDNNfromCenter","pA","pitches","noteObj","pitchObj","noteObj2","sort","stepsFound","nonDuplicatingPitches","closedChord","removeDuplicatePitches","closedPitches","indexOfPitchesWithPerfectlyStackedThirds","testSteps","currentListOfThirds","tsIndex","chordStepPitch","getChordStep","hasFalse","chordStep","testRoot","root","tempChordStep","semitones","lowest","uniqueChord","cardinality","thirdST","semitonesFromChordStep","fifthST","bass","chordStepsToInversions","testNote","pitchKeys","tn","thisPitches","testRootDNN","thisPitch","thisInterval","tempPitches","addNote","warn","chordDefinitions","lowestLines","Clef","octaveChange","lowestLineTrebleOffset","treble","lowestLineDifference","TrebleClef","Treble8vbClef","Treble8vaClef","BassClef","AltoClef","TenorClef","SopranoClef","MezzoSopranoClef","PercussionClef","bestClef","st","stFlat","flat","totalNotes","totalPitch","averageHeight","dynamics","shortNames","longNames","englishNames","dynamicStrToScalar","Dynamic","_value","_volumeScalar","longName","englishName","Expression","vfe","Fermata","jp","jsonpickle","unpickler","fromPython","Converter","knownUnparsables","handlers","post_restore","d","_qtrLength","ts","_numerator","displaySequence","_denominator","currentPart","lastClef","lastKeySignature","lastTimeSignature","streamPostRestore","bind","_storedElementOffsetTuples","_clef","_keySignature","_timeSignature","classList","_py_class","streamPart","appendEl","insertAtStart","thisClass","kn","unparsable","timeSignature","keySignature","append","insert","jss","outStruct","decode","stream","Instrument","instrumentName","partId","partName","partAbbreviation","instrumentId","instrumentAbbreviation","midiProgram","_midiChannel","lowestNote","highestNote","transpostion","inGMPercMap","soundfontFn","find","usedChannels","startChannel","ch","maxMidi","autoAssignMidiChannel","info","instrument_find","fn","midiNumber","interval","IntervalDirections","DESCENDING","OBLIQUE","ASCENDING","IntervalDirectionTerms","MusicOrdinals","GenericInterval","gi","directed","undirected","isSkip","isDiatonicStep","isStep","isUnison","tempSteps","tempOctaves","simpleUndirected","undirectedOctaves","semiSimpleUndirected","octaves","simpleDirected","semiSimpleDirected","perfectable","niceName","simpleNiceName","semiSimpleNiceName","staffDistance","mod7inversion","mod7","specifier","DiatonicInterval","pitch2","oldDiatonicNum","distanceToMove","newDiatonicNumber","newInfo","IntervalConvertDiatonicNumberToStep","IntervalSpecifiersEnum","PERFECT","MAJOR","MINOR","AUGMENTED","DIMINISHED","DBLAUG","DBLDIM","TRPAUG","TRPDIM","QUADAUG","QUADDIM","IntervalNiceSpecNames","IntervalPrefixSpecs","IntervalOrderedPerfSpecs","IntervalPerfSpecifiers","QUADDMIN","IntervalPerfOffset","IntervalOrderedImperfSpecs","IntervalSpecifiers","IntervalMajOffset","IntervalSemitonesGeneric","IntervalAdjustPerfect","IntervalAdjustImperf","generic","diatonicDirectionNiceName","simpleName","semiSimpleName","directedName","directedNiceName","directedSimpleName","directedSimpleNiceName","directedSemiSimpleName","directedSemiSimpleNiceName","semiSimpleNameName","specificName","orderedSpecifierIndex","invertedOrderedSpecIndex","invertedOrderedSpecifier","octaveOffset","semitonesStart","specName","semitonesAdjust","ChromaticInterval","cents","mod12","intervalClass","isChromaticStep","useImplicitOctave","pps","newPitch","IntervalStepNames","dn","stepNumber","stepName","Interval","restArgs","arg0","gI","dI","diatonic","chromatic","getChromatic","n1","n2","gInt","notesToGeneric","cInt","notesToChromatic","intervalsToDiatonic","reinit","diatonicType","sn","consonantNames","transposePitch","halfStepsToFix","p1","p2","staffDist","genDist","convertStaffDistanceToInterval","_getSpecifierFromGenericChromatic","noteVals","normalSemis","theseSemis","semisRounded","scale","SimpleDiatonicScale","tonic","scaleSteps","lastPitch","di","ii","ScaleSimpleMajor","ScaleSimpleMinor","minorType","modeSharpsAlter","KeySignature","sharps","_sharps","_alteredPitchesCache","flatMapping","sharpMapping","tempSharps","tempName","majorName","aps","alteredPitches","transInterval","transTimes","transStr","startPitch","pKeep","Key","keyName","mode","lowerCase","sharpsArray","sharpsIndex","modeShift","scaleType","miditools","transposeOctave","Event","c","timing","data1","data2","data3","midiCommand","midiNote","velocity","m21n","maxDelay","heldChordTime","heldChordNotes","timeOfLastNote","now","_baseTempo","metronome","enumerable","clearOldChords","nowInMs","sendOutChord","makeChords","jEvent","music21Note","foundNote","lastElement","chordNoteList","appendObject","quantizeLastNote","callBacks","raw","general","sendToMIDIjs","arrayOfNotes","nowInMS","msSinceLastNote","normalQuarterNoteLength","numQuarterNotes","roundedQuarterLength","midiEvent","loadedSoundfonts","postLoadCallback","soundfont","remove","isFirefox","InstallTrigger","isAudioTag","technology","instrumentObj","programChange","loadSoundfont","waitThenCall","ready","body","loadPlugin","onsuccess","MidiPlayer","player","Players","PlayInstance","speed","$playDiv","where","$where","$controls","$playPause","playPng","$stop","stopPng","on","pausePlayStop","stopButton","$time","$timePlayed","$capsule","$timeRemaining","stop","src","playing","pause","pausePng","resume","b64data","timeWarp","m21midiplayer","loadFile","fileLoaded","updatePlaying","start","self","$d","timePlayed","timeRemaining","timeCursor","eventjs","cancel","currentTime","endTime","state","timeFormatting","minutes","seconds","String","setAnimation","percent","end","songFinished","style","width","innerHTML","keyboard","callbacks","scaleFactor","parent","height","svgObj","noteNameSvgObj","keyStyle","keyClass","startX","keyattrs","y","rx","ry","keyDOM","strokeColor","getAttribute","cx","stroke","fill","cy","r","circleDom","appendChild","labelOctaves","idStr","fontSize","textfill","textattrs","textDom","textNode","createTextNode","parentNode","removeChild","WhiteKey","BlackKey","Keyboard","whiteKeyWidth","_defaultWhiteKeyWidth","_defaultBlackKeyWidth","keyObjects","markC","showNames","showOctaves","endPitch","_startDNN","_endDNN","hideable","scrollable","click","clickhandler","sharpOffsets","oldSVG","svgParent","svgDOM","createSVG","replaceChild","wrapScrollable","appendHideableKeyboard","keyRect","thisKeyObject","storedStyle","fillColor","tempP","currentIndex","keyboardDiatonicLength","totalWidth","heightString","movingPitch","blackKeys","thisKeyboardObject","wki","wk","whitekeyCallbacksClick","wkSVG","makeKey","bk","blackKeyClicksCallback","offsetFromWhiteKey","bkSVG","bki","markMiddleC","markNoteNames","midC","addCircle","removeNoteNames","keyObj","addNoteName","removeNoteName","$wrapper","display","$bDown","redrawSVG","$bUp","$kWrapper","keyboardSVG","$container","$bInside","$b","background","triggerToggleShow","$explain","$t","$parent","$k","dd","jazzHighlight","intensityRGB","normalizedVelocity","intensity","meter","TimeSignature","meterString","beatGroups","ratioString","tempBeatGroups","numBeats","beatValue","beatsToEighthNoteRatio","computeBeatGroups","vfBeatGroups","bg","Fraction","meterList","RenderOptions","defaultOptions","displayClef","displayTimeSignature","displayKeySignature","top","left","overriddenWidth","naiveHeight","systemIndex","partIndex","measureIndex","systemMeasureIndex","systemPadding","naiveSystemPadding","maxSystemWidth","rightBarline","staffConnectors","staffPadding","startNewSystem","startNewPage","showMeasureNumber","streamInteraction","ScrollPlayer","pixelMapper","PixelMapper","canvas","lastX","lastNoteIndex","barDOM","canvasParent","lastTimeout","startTime","previousSystemIndex","eachSystemHeight","timingMS","savedRenderOptionClick","scrollScore","timeSinceStartInMS","pm","getSystemIndexAtOffset","getXAtOffset","allMaps","pmOff","elList","elements","elIndex","playMidi","newTimeout","maxX","maxSystemIndex","fauxEvent","stopPlaying","scaleY","createScrollBar","startPlayingClick","setRenderInteraction","stopPropagation","notesAndRests","pixelScaling","processStream","ns","addNoteToMap","finalStave","finalX","endOffset","lastMap","PixelMap","currentOffset","properMap","findMapForExactOffset","pmap","prevNoteMap","nextNoteMap","thisMap","lastNoteMap","twoNoteMaps","getPixelMapsAroundOffset","offsetFromPrev","offsetDistance","pixelDistance","offsetToPixelScale","pixelsFromPrev","offsetX","mapper","_x","_systemIndex","CursorSelect","activeElementHierarchy","vfShow","RenderStack","voices","streams","textVoices","Renderer","$canvas","activeFormatter","_vfRenderer","_ctx","beamGroups","stacks","ties","systemBreakOffsets","vfTuplets","isScorelike","isPartlike","hasSubStreams","prepareScorelike","preparePartlike","prepareArrivedFlat","formatMeasureStacks","drawTies","drawMeasureStacks","drawBeamGroups","drawTuplets","subStream","addStaffConnectors","prepareMeasure","prepareTies","hasVoices","prepareFlat","rendOp","voiceIndex","voiceStream","optionalStave","optional_renderOp","makeAccidentals","renderStave","activeVFStave","voice","getVoice","hasLyrics","getLyricVoice","optional_rendOp","ctx","newStave","setClefEtc","setContext","draw","allTickables","vft","pf","thisNote","nextNote","onSameSystem","sbI","thisSystemBreak","vfTie","StaveTie","first_note","last_note","first_indices","last_indices","vfTie1","vfTie2","vexflowNotes","vexflowVoice","setStave","addTickables","textVoice","vexflowLyrics","measures","formatter","formatVoiceGroup","applyFormatterInformationToNotes","autoBeam","Formatter","maxGlyphStart","start_x","joinVoices","formatToStave","vexflowBeatGroups","applyAndGetBeams","estimateStaffLength","Stave","setStafflines","setMeasure","ottava","size","addClef","addKeySignature","addTimeSignature","bl","barlineMap","vxBL","setEndBarType","Barline","vexflowStave","setNumLines","line_config","visible","activeTuplet","activeTupletLength","activeTupletVexflowNotes","thisEl","vexflowNote","tuplets","m21Tuplet","tupletOptions","num_notes","notes_occupied","vfTuplet","setRatioed","getTextNote","font","t1","TextNote","setLine","setJustification","Justification","LEFT","family","lyricsObjects","lyricsArray","addConnector","tempQl","connector","totalLength","num1024","vfv","Voice","num_beats","beat_value","resolution","RESOLUTION","setMode","Mode","SOFT","connectorType","connectorMap","StaveConnector","BRACE","SINGLE","DOUBLE","BRACKET","numParts","firstPart","lastPart","numMeasures","mIndex","thisPartMeasure","lastPartMeasure","topVFStaff","bottomVFStaff","sc","scTypeM21","scTypeVF","staffConnectorsMap","setType","recursive","storedVexflowStave","removeFormatterInformation","noteOffsetLeft","glyph_start_x","getBottomY","nextTicks","nTicks","ticks","formatterNote","tickContexts","map","getAbsoluteX","Backends","CANVAS","vfr","vfRenderer","Stream","_instrument","_autoBeam","_tempo","_stopPlaying","_allowMultipleSimultaneousPlays","changedCallbackFunction","canvasChangerFunction","canvasElement","currentTarget","findNoteForClick","clickedDiatonicNoteNum","noteChanged","deep","create","prototype","elCopy","elOffset","lastQL","err","testOffset","splice","pop","index","meterStream","refStreamOrTimeRange","searchContext","innerBarline","finalBarline","inPlace","voiceCount","getElementsByClass","offsetMap","oMax","measureCount","mStart","Measure","thisTimeSignature","oneMeasureLength","barDuration","ob","getOffsetBySite","mEnd","oNew","insertStream","lyric","group","dur","thisOffsetMap","OffsetMap","tempEls","newSt","extendableStepList","stepNames","stepAlter","accidentalByStep","lastOctaveStepList","lastStepDict","extend","lastOctavelessStepDict","_makeAccidentalForOnePitch","newAlter","preserveEvents","oldEvents","resetRenderOptions","render","storedStream","ignoreSystems","staffHeight","numSystems","scoreHeight","maxLength","thisLength","done","startNote","currentNote","flatEls","lastNote","thisStream","playNext","setSubstreamRenderOptions","newCanvas","attr","computedWidth","computedHeight","estimateStreamHeight","createCanvas","$newCanvas","createNewCanvas","renderVexflowOnCanvas","appendElement","$appendElement","canvasBlock","preserveCanvasSize","$oldCanvas","prop","replaceWith","$innerDiv","renderOptionsOuterEventClick","storedThis","renderOptionsInnerEventClick","scrollScoreStart","appendNewCanvas","scrollPlayer","startPlaying","canvasOrDiv","playFunc","playStreamBound","playStream","proxy","setRenderInteractionProxy","eventType","eventFunction","off","windowReflowStart","storedVFStave","subStreams","xClick","yClick","pageX","pageY","clientX","scrollLeft","documentElement","clientY","scrollTop","xPx","yPx","getUnscaledXYforCanvas","yPxScaled","xPxScaled","recursiveGetStoredVexflowStave","lineSpacing","linesAboveStaff","space_above_staff_ln","notesFromTop","notesAboveLowestLine","num_lines","allowablePixels","unused_systemIndex","getScaledXYforCanvas","diatonicNoteNumFromScaledY","noteElementFromScaledX","activeNote","redrawCanvas","$newCanv","buttonDiv","getAccidentalToolbar","minAccidental","maxAccidental","$siblingCanvas","clickEvent","$useCanvas","$searchParent","target","$buttonDiv","acc","unicodeModifier","$bPlay","$bStop","stopPlayStream","jCanvas","callingStream","jCanvasNow","jCanvasParent","newWidth","canvasWidth","canvasObj","resize","resizeCanvasTo","resizeTO","resizeToTimeout","trigger","triggerResizeOnCreateCanvas","$window","doResize","highestTime","offsetShift","elFlat","newTempo","newInstrument","newClef","newKeySignature","newTimeSignature","ab","baseMaxSystemWidth","newSW","parts","newElements","highestOffsetSoFar","tempInsert","thisElOffset","Part","systemHeight","measureWidths","elRendOp","tempM","getMeasureWidths","systemCurrentWidths","systemBreakIndexes","lastSystemBreak","startLeft","currentLeft","currentRight","currentSystemIndex","leftSubtract","newLeftSubtract","oldWidth","currentSystemMultiplier","currentSystemWidth","newLeft","newTop","currentMeasureIndex","currentMeasureLeft","scaledYRelativeToSystem","scaledX","gotMeasure","right","bottom","Score","partSpacing","currentPartNumber","currentPartTop","evenPartMeasureSpacing","ignoreNumSystems","currentScoreHeight","fixSystemInformation","tempPart","maxMeasureWidths","measureWidthsArrayOfArrays","maxFound","scaledYFromSystemTop","scaledYinPart","rightPart","measureStacks","maxMeasureWidth","thisMeasureWidth","measureNewWidth","part","measure","layout","makeLayoutFromScore","score","containerWidth","partZero","layoutScore","LayoutScore","currentPage","Page","measureStart","measureEnd","currentSystem","System","currentSystemNumber","currentStaves","staffMaker","staffHolder","pNum","staff","Staff","staffNumber","systemNumber","scoreLayout","_width","pageId","systemId","staffId","units","pageNumber","systemStart","systemEnd","pageLayout","systemLayout","optimized","inheritedHeight","staffLayout","roman","romanToNumber","RomanNumeral","figure","keyStr","_scale","_key","currentFigure","impliedQuality","lowercase","numbersArr","scaleDegree","raiseTone","updatePitches","chordSpacing","chordPitches","thisTransStr","thisTrans","nextPitch","inversion","inversionName","fullChordName","suffix","degreeName","tonicDisplay","chordStr","getScale","tonicPitch","diffRootToTonic","defaultTempoValues","baseTempo","Metronome","tempoInt","numBeatsPerMeasure","minTempo","maxTempo","beat","chirpTimeout","silent","flash","tempoRanges","tempoIncreases","flashColor","$metronomeDiv","fadeOut","beatLength","silentFadeOut","fadeIn","_silentFlash","that","chirp","tr","tempoExtreme","tempoIncrease","trL","jWhere","metroThis","tempoHolder","newDiv","b1","b2","stopChirp","prepend","b3","increaseSpeedButton","increaseSpeed","prevAll","html","b4","decreaseSpeedButton","decreaseSpeed","$flash","Tie","tinyNotation","regularExpressions","REST","OCTAVE2","OCTAVE3","OCTAVE5","OCTAVE4","EDSHARP","EDFLAT","EDNAT","SHARP","FLAT","NAT","TYPE","TIE","PRECTIE","ID_EL","LYRIC","DOT","TIMESIG","PARTBREAK","TRIP","QUAD","ENDBRAC","TinyNotation","textIn","trim","tokens","optionalScore","currentTSBarDuration","lastDurationQL","storedDict","lastNoteTied","inTrip","inQuad","endTupletAfterNote","tnre","token","MATCH","durationType","multiplier","returnObject","innerPart","renderNotationDivs","classTypes","selector","allRender","thisTN","$thisTN","thisTNContents","textContent","hasClass","empty","webmidi","selectedOutputPort","selectedInputPort","access","$selectDiv","jazzDownloadUrl","storedPlugin","selectedJazzInterface","jazzMidiInArrived","webmidiEvent","timestamp","midiInArrived","midiMessageEvent","timeStamp","eventObject","array","createPlugin","override","createElement","classid","isJazz","visibility","createJazzSelector","$newSelect","Jazz","change","selectedInput","MidiInOpen","MidiInClose","selectedInterface","midiOptions","MidiInList","noneAppendOption","anySelected","allAppendOptions","$appendOption","oninputsuccess","oninputempty","selectionChanged","$select","storedStateChange","onstatechange","inputs","port","onmidimessage","close","createSelector","$midiSelectDiv","autoUpdate","existingMidiSelect","foundMidiSelects","requestMIDIAccess","then","populateSelect","$noneAppendOption","widgets","RhythmChooser","canvasDiv","values","measureMode","tieActive","autoAddMeasure","valueMappings","whole","half","quarter","eighth","addMeasure","dot","undo","rest_whole","rest_half","rest_quarter","rest_eighth","rest_16th","rest_32nd","styles","buttonHandlers","unused_t","newN","measureButtonHandlers","lastMeasure","previousMeasure","tieType","apply","$outer","entity","$inner","rhythmButtonDiv_click","handleButton","bhs","bh","replaceCanvas","music21","exceptions21"],"mappings":"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"}